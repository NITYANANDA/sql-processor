<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:annotation-config />

    <!-- bean id="config" class="org.sample.web.config.SpringConfig" / -->
    <context:component-scan base-package="ch.ralscha.extdirectspring" />
    <mvc:annotation-driven />

    <mvc:default-servlet-handler />
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>
    <bean id="modelController" class="org.sample.web.config.ModelController" />

    <!-- define cache annotation driver - for DAO class proxy target class = true, for DAO interface false (default) -->
    <cache:annotation-driven proxy-target-class="true" />

    <bean id="cacheFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml" />

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="cacheFactory" />

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.password}" />
        <property name="defaultAutoCommit" value="false" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="sqlSessionFactory" class="org.sqlproc.engine.spring.SpringSessionFactory">
        <constructor-arg ref="jdbcTemplate" />
    </bean>

    <bean id="TestDataInitializer" class="org.sample.web.db.TestDataInitializer">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
        <property name="simpleService" ref="simpleService" />
        <property name="initData" value="${init.data}" />
        <property name="catalog" value="hsqldb.ddl" />
        <property name="people" value="people.csv" />
        <property name="contacts" value="contacts.csv" />
    </bean>

    <bean id="dao" autowire="byType" abstract="true">
        <constructor-arg name="sqlEngineFactory" ref="sqlFactory" />
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <bean id="personDao" class="org.sample.web.dao.PersonExtDao" parent="dao" />
    <bean id="contactDao" class="org.sample.dao.ContactDao" parent="dao" />

    <bean id="sqlFactory" class="org.sqlproc.engine.jdbc.JdbcEngineFactory">
        <property name="metaFilesNames">
            <list>
                <value>statements.qry</value>
            </list>
        </property>
        <property name="filter" value="${db.type}" />
    </bean>

    <bean id="personService" class="org.sample.web.app.PersonService">
        <property name="personDao" ref="personDao" />
    </bean>

    <bean id="contactService" class="org.sample.web.app.ContactService">
        <property name="contactDao" ref="contactDao" />
    </bean>

    <bean id="simpleService" class="org.sample.web.service.SimpleService">
        <property name="personService" ref="personService" />
        <property name="contactService" ref="contactService" />
    </bean>

</beans>
