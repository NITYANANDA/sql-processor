package org.sample.model {

  import org.sample.web.util.DMYDateDeserializer
  import javax.validation.constraints.NotNull
  import org.springframework.format.annotation.DateTimeFormat
  import ch.ralscha.extdirectspring.generator.ModelAssociation
  import com.fasterxml.jackson.databind.annotation.JsonSerialize
  import ch.ralscha.extdirectspring.generator.ModelField
  import ch.ralscha.extdirectspring.generator.Model
  import com.fasterxml.jackson.annotation.JsonIgnore
  import javax.validation.constraints.Past
  import ch.ralscha.extdirectspring.generator.ModelAssociationType
  import ch.ralscha.extdirectspring.generator.ModelType
  import org.hibernate.validator.constraints.NotBlank
  import com.fasterxml.jackson.databind.annotation.JsonDeserialize
  import org.sample.web.util.DMYDateSerializer

  enum ContactCtype serializable 1  {
    value : java.lang.String
    HOME ::: "0"
    BUSINESS ::: "1"
    ABROAD ::: "2"
  }

  enum PersonGender serializable 1  {
    value : java.lang.String
    MALE ::: "M"
    FEMALE ::: "F"
    UNKNOWN ::: "0"
  }

  @Model ::: value "SimpleWeb.model.Contact", paging true, readMethod "simpleService.loadContacts"
  @@@JsonIgnore
  @@@@JsonIgnore
  pojo Contact serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    @ModelAssociation ::: value :ModelAssociationType BELONGS_TO, model ::Person class
    @JsonIgnore
    person :: Person updateCol id->personId required index 2
    @ModelField ::: type :ModelType STRING
    @NotNull
    ctype :: ContactCtype required
    @NotBlank
    address : java.lang.String required
    phoneNumber : java.lang.String
    @NotNull
    version : java.lang.Integer optLock
    country :: Country updateCol code->countryCode required index 3
    personId : java.lang.Long createCol person->id
    countryCode : java.lang.String createCol country->code
    equals ::: id
    hashCode ::: id
    toInit ::: person country
    isDef ::: phoneNumber
    toString ::: id person phoneNumber address countryCode personId ctype country version
  }

  pojo Country serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    code : java.lang.String required index 3
    name : java.lang.String index 4
    equals ::: id
    hashCode ::: id
    toInit :::
    isDef ::: name
    toString ::: id name code
  }

  @Model ::: value "SimpleWeb.model.Person", paging true, readMethod "simpleService.loadPeople"
  @@@JsonIgnore
  @@@@JsonIgnore
  pojo Person serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    @NotBlank
    firstName : java.lang.String required
    @NotBlank
    lastName : java.lang.String required index 2
    @ModelField ::: dateFormat "d.m.Y"
    @Past
    @DateTimeFormat ::: pattern "dd.MM.yyyy"
    @@JsonSerialize ::: using :DMYDateSerializer class
    @@@JsonDeserialize ::: using :DMYDateDeserializer class
    dateOfBirth : java.util.Date
    @ModelField ::: type :ModelType STRING
    @NotNull
    gender :: PersonGender required
    ssn : java.lang.String
    @NotNull
    version : java.lang.Integer optLock
    @ModelAssociation ::: value :ModelAssociationType HAS_MANY, model ::Contact class
    contacts : java.util.List <:Contact>
    equals ::: id
    hashCode ::: id
    toInit ::: contacts
    isDef ::: dateOfBirth ssn
    toString ::: dateOfBirth id lastName ssn gender firstName version
  }
}

package org.sample.web.form {
	pojo PersonForm extends Person serializable 1 {
		dateOfBirthFrom : java.util.Date
		dateOfBirthTo : java.util.Date
		toString ::: dateOfBirthFrom dateOfBirthTo
	}
	
	pojo CountHolder serializable 1 {
		count : int 
	}
}