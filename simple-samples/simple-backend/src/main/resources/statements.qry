
SELECT_PERSON(QRY,inx=PersonForm,outx=Person,tab=person=p,tab=contact=c,tab=country=s)=
  select %p.ID @id(id), %p.FIRST_NAME @firstName, %p.LAST_NAME @lastName, %p.DATE_OF_BIRTH @dateOfBirth, %p.GENDER @gender, %p.SSN @ssn, %p.VERSION @version
         {? :contacts(call=toInit) | , %c.ID @contacts.id(id), %c.PERSON_ID @contacts.personId, %c.CTYPE @contacts.ctype, %c.ADDRESS @contacts.address, %c.PHONE_NUMBER @contacts.phoneNumber, %c.VERSION @contacts.version, %c.COUNTRY_CODE @contacts.country.code, %c.COUNTRY_CODE @contacts.countryCode }
  from %%PERSON p
  {? :contacts(call=toInit) | left join %%CONTACT c on %p.ID = %c.PERSON_ID }
  {= where
    {& %p.ID ::= :id }
    {& UPPER(%p.FIRST_NAME) like :+firstName }
    {& UPPER(%p.LAST_NAME) like :+lastName }
    {& %p.DATE_OF_BIRTH ::= :dateOfBirth }
    {& %p.DATE_OF_BIRTH >= :dateOfBirthFrom }
    {& %p.DATE_OF_BIRTH <= :dateOfBirthTo }
    {& UPPER(%p.GENDER) like :+gender }
    {& UPPER(%p.SSN) like :+ssn }
  }
  {#1 order by %p.ID }
  {#2 order by %p.LAST_NAME }
;

INSERT_CONTACT(CRUD,inx=Contact,outx=Contact,tab=contact,MYSQL)=
  insert into %%CONTACT (%PERSON_ID, %CTYPE, %ADDRESS, %PHONE_NUMBER, %VERSION, %COUNTRY_CODE)
  {= values (:id(idsel), :personId, :ctype, :address, :phoneNumber, :version, :country.code) }
;

INSERT_PERSON(CRUD,inx=Person,outx=Person,tab=person,MYSQL)=
  insert into %%PERSON (%FIRST_NAME, %LAST_NAME, %DATE_OF_BIRTH, %GENDER, %SSN, %VERSION)
  {= values (:id(idsel), :firstName, :lastName, :dateOfBirth, :gender, :ssn, :version) }
;
// generated


INSERT_CONTACT(CRUD,inx=Contact,outx=Contact,tab=contact)=
  insert into %%CONTACT (%ID, %PERSON_ID, %CTYPE, %ADDRESS, %PHONE_NUMBER, %VERSION, %COUNTRY_CODE)
  {= values (:id(seq=SIMPLE_SEQUENCE), :personId, :ctype, :address, :phoneNumber, :version, :country.code) }
;

GET_CONTACT(CRUD,inx=Contact,outx=Contact,tab=contact=c,tab=country=c1)=
  select %c.ID @id(id), %c.PERSON_ID @personId, %c.CTYPE @ctype, %c.ADDRESS @address, %c.PHONE_NUMBER @phoneNumber, %c.VERSION @version, %c.COUNTRY_CODE @country.code(id), %c.COUNTRY_CODE @countryCode
         {? :country(call=toInit) | , %c1.CODE @country.code, %c1.NAME @country.name }
  from %%CONTACT c
  {? :country(call=toInit) | left join %%COUNTRY c1 on %c.COUNTRY_CODE = %c1.CODE }
  {= where
    {& %c.ID ::= :id }
    {& %c.PERSON_ID ::= :personId }
    {& %c.CTYPE ::= :ctype }
    {& %c.ADDRESS ::= :address }
    {& %c.PHONE_NUMBER ::= :phoneNumber }
    {& %c.COUNTRY_CODE ::= :country.code }
  }
;

UPDATE_CONTACT(CRUD,inx=Contact,outx=Contact,tab=contact)=
  update %%CONTACT
  {= set
    { ,%PERSON_ID = :personId(call=isDef) }
    { ,%CTYPE = :ctype(call=isDef) }
    { ,%ADDRESS = :address(call=isDef) }
    { ,%PHONE_NUMBER = :phoneNumber(call=isDef) }
    { ,%VERSION = %VERSION + 1 }
    { ,%COUNTRY_CODE = :country.code(call=isDef) }
  }
  {= where
    {& %ID = :id(!empty) }
    {& %VERSION = :version(!empty) }
  }
;

DELETE_CONTACT(CRUD,inx=Contact,outx=Contact,tab=contact)=
  delete from %%CONTACT
  {= where
    {& %ID = :id(!empty) }
    {& %VERSION = :version(!empty) }
  }
;

SELECT_CONTACT(QRY,inx=Contact,outx=Contact,tab=contact=c,tab=country=c1)=
  select %c.ID @id(id), %c.PERSON_ID @personId, %c.CTYPE @ctype, %c.ADDRESS @address, %c.PHONE_NUMBER @phoneNumber, %c.VERSION @version, %c.COUNTRY_CODE @country.code(id), %c.COUNTRY_CODE @countryCode
         {? :country(call=toInit) | , %c1.CODE @country.code, %c1.NAME @country.name }
  from %%CONTACT c
  {? :country(call=toInit) | left join %%COUNTRY c1 on %c.COUNTRY_CODE = %c1.CODE }
  {= where
    {& %c.ID ::= :id }
    {& %c.PERSON_ID ::= :personId }
    {& UPPER(%c.CTYPE) like :+ctype }
    {& UPPER(%c.ADDRESS) like :+address }
    {& %c.PHONE_NUMBER ::= :phoneNumber }
    {& UPPER(%c.COUNTRY_CODE) like :+country.code }
  }
  {#1 order by %c.ID }
  {#2 order by %c.PERSON_ID }
  {#3 order by %c.COUNTRY_CODE }
;

INSERT_COUNTRY(CRUD,inx=Country,outx=Country,tab=country)=
  insert into %%COUNTRY (%ID, %CODE, %NAME)
  {= values (:id(seq=SIMPLE_SEQUENCE), :code, :name) }
;

GET_COUNTRY(CRUD,inx=Country,outx=Country,tab=country)=
  select %ID @id(id), %CODE @code, %NAME @name
  from %%COUNTRY
  {= where
    {& %ID ::= :id }
    {& %CODE ::= :code }
    {& %NAME ::= :name }
  }
;

UPDATE_COUNTRY(CRUD,inx=Country,outx=Country,tab=country)=
  update %%COUNTRY
  {= set
    { ,%CODE = :code(call=isDef) }
    { ,%NAME = :name(call=isDef) }
  }
  {= where
    {& %ID = :id(!empty) }
  }
;

DELETE_COUNTRY(CRUD,inx=Country,outx=Country,tab=country)=
  delete from %%COUNTRY
  {= where
    {& %ID = :id(!empty) }
  }
;

SELECT_COUNTRY(QRY,IOPT=SURROUND_QUERY_MIN_LEN=1,inx=Country,outx=Country,tab=country)=
  select %ID @id(id), %CODE @code, %NAME @name
  from %%COUNTRY
  {= where
    {& %ID ::= :id }
    {& UPPER(%CODE) like :+code }
    {& UPPER(%NAME) like :+name }
  }
  {#1 order by %ID }
  {#3 order by %CODE }
  {#4 order by %NAME }
;

INSERT_PERSON(CRUD,inx=Person,outx=Person,tab=person)=
  insert into %%PERSON (%ID, %FIRST_NAME, %LAST_NAME, %DATE_OF_BIRTH, %GENDER, %SSN, %VERSION)
  {= values (:id(seq=SIMPLE_SEQUENCE), :firstName, :lastName, :dateOfBirth, :gender, :ssn, :version) }
;

GET_PERSON(CRUD,inx=Person,outx=Person,tab=person=p,tab=contact=c)=
  select %p.ID @id(id), %p.FIRST_NAME @firstName, %p.LAST_NAME @lastName, %p.DATE_OF_BIRTH @dateOfBirth, %p.GENDER @gender, %p.SSN @ssn, %p.VERSION @version
         {? :contacts(call=toInit) | , %c.ID @contacts.id(id), %c.PERSON_ID @contacts.personId, %c.CTYPE @contacts.ctype, %c.ADDRESS @contacts.address, %c.PHONE_NUMBER @contacts.phoneNumber, %c.VERSION @contacts.version, %c.COUNTRY_CODE @contacts.country.code, %c.COUNTRY_CODE @contacts.countryCode }
  from %%PERSON p
  {? :contacts(call=toInit) | left join %%CONTACT c on %p.ID = %c.PERSON_ID }
  {= where
    {& %p.ID ::= :id }
    {& %p.FIRST_NAME ::= :firstName }
    {& %p.LAST_NAME ::= :lastName }
    {& %p.DATE_OF_BIRTH ::= :dateOfBirth }
    {& %p.GENDER ::= :gender }
    {& %p.SSN ::= :ssn }
  }
;

UPDATE_PERSON(CRUD,inx=Person,outx=Person,tab=person)=
  update %%PERSON
  {= set
    { ,%FIRST_NAME = :firstName(call=isDef) }
    { ,%LAST_NAME = :lastName(call=isDef) }
    { ,%DATE_OF_BIRTH = :dateOfBirth(call=isDef) }
    { ,%GENDER = :gender(call=isDef) }
    { ,%SSN = :ssn(call=isDef) }
    { ,%VERSION = %VERSION + 1 }
  }
  {= where
    {& %ID = :id(!empty) }
    {& %VERSION = :version(!empty) }
  }
;

DELETE_PERSON(CRUD,inx=Person,outx=Person,tab=person)=
  delete from %%PERSON
  {= where
    {& %ID = :id(!empty) }
    {& %VERSION = :version(!empty) }
  }
;

INSERT_USER(CRUD,inx=User,outx=User,tab=user)=
  insert into %%USER (%ID, %USERNAME, %PASSWORD, %ROLE)
  {= values (:id(seq=SIMPLE_SEQUENCE), :username, :password, :role) }
;

GET_USER(CRUD,inx=User,outx=User,tab=user)=
  select %ID @id(id), %USERNAME @username, %PASSWORD @password, %ROLE @role
  from %%USER
  {= where
    {& %ID ::= :id }
    {& %USERNAME ::= :username }
    {& %PASSWORD ::= :password }
    {& %ROLE ::= :role }
  }
;

UPDATE_USER(CRUD,inx=User,outx=User,tab=user)=
  update %%USER
  {= set
    { ,%USERNAME = :username }
    { ,%PASSWORD = :password }
    { ,%ROLE = :role }
  }
  {= where
    {& %ID = :id(!empty) }
  }
;

DELETE_USER(CRUD,inx=User,outx=User,tab=user)=
  delete from %%USER
  {= where
    {& %ID = :id(!empty) }
  }
;

SELECT_USER(QRY,inx=User,outx=User,tab=user)=
  select %ID @id(id), %USERNAME @username, %PASSWORD @password, %ROLE @role
  from %%USER
  {= where
    {& %ID ::= :id }
    {& UPPER(%USERNAME) like :+username }
    {& UPPER(%PASSWORD) like :+password }
    {& UPPER(%ROLE) like :+role }
  }
  {#1 order by %ID }
;
