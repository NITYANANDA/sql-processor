/*
 * File: app/view/Persons.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Simplereg.view.Persons', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.persons1',

    requires: [
        'Simplereg.view.PersonList',
        'Simplereg.view.PersonDetail',
        'Simplereg.view.ContactList'
    ],

    height: 250,
    width: 400,
    layout: {
        type: 'border'
    },
    title: 'Simple Person Registry',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    region: 'center',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'icon-search',
                            text: 'Search  Persons',
                            listeners: {
                                click: {
                                    fn: me.onSplitbuttonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'personlist',
                    id: 'personListPanel',
                    animCollapse: false,
                    collapsible: true,
                    flex: 1,
                    region: 'west',
                    split: true,
                    listeners: {
                        beforecollapse: {
                            fn: me.onGridpanelBeforeCollapse,
                            scope: me
                        },
                        beforeexpand: {
                            fn: me.onGridpanelBeforeExpand,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'persondetail',
                    collapsible: false,
                    region: 'center',
                    split: true
                },
                {
                    xtype: 'contactlist',
                    id: 'contactListPanel',
                    animCollapse: false,
                    collapsed: true,
                    collapsible: true,
                    flex: 1,
                    region: 'east',
                    split: true,
                    listeners: {
                        beforecollapse: {
                            fn: me.onGridpanelBeforeCollapse1,
                            scope: me
                        },
                        beforeexpand: {
                            fn: me.onGridpanelBeforeExpand1,
                            scope: me
                        }
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onSplitbuttonClick: function(button, e, eOpts) {
        Ext.create("Simplereg.view.SearchPersons").show();
    },

    onGridpanelBeforeCollapse: function(p, direction, animate, eOpts) {
        if (Simplereg.preferences.shiftPanels) {
            var contacts = Ext.getCmp("contactListPanel");
            Simplereg.preferences.shiftPanels = false;
            contacts.expand();
            Simplereg.preferences.shiftPanels = true;
        }
    },

    onGridpanelBeforeExpand: function(p, animate, eOpts) {
        if (Simplereg.preferences.shiftPanels) {
            var contacts = Ext.getCmp("contactListPanel");
            Simplereg.preferences.shiftPanels = false;
            contacts.collapse();
            Simplereg.preferences.shiftPanels = true;
        }
    },

    onGridpanelBeforeCollapse1: function(p, direction, animate, eOpts) {
        if (Simplereg.preferences.shiftPanels) {
            var persons = Ext.getCmp("personListPanel");
            Simplereg.preferences.shiftPanels = false;
            persons.expand();
            Simplereg.preferences.shiftPanels = true;
        }
    },

    onGridpanelBeforeExpand1: function(p, animate, eOpts) {
        if (Simplereg.preferences.shiftPanels) {
            var persons = Ext.getCmp("personListPanel");
            Simplereg.preferences.shiftPanels = false;
            persons.collapse();
            Simplereg.preferences.shiftPanels = true;
        }
    }

});