/*
* generated by Xtext
*/
grammar InternalProcessorDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.sqlproc.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.sqlproc.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sqlproc.dsl.services.ProcessorDslGrammarAccess;

}

@parser::members {

 	private ProcessorDslGrammarAccess grammarAccess;
 	
    public InternalProcessorDslParser(TokenStream input, ProcessorDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Artifacts";	
   	}
   	
   	@Override
   	protected ProcessorDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleArtifacts
entryRuleArtifacts returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactsRule()); }
	 iv_ruleArtifacts=ruleArtifacts 
	 { $current=$iv_ruleArtifacts.current; } 
	 EOF 
;

// Rule Artifacts
ruleArtifacts returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_0()); 
    }
)*(((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getFeaturesOptionalFeatureParserRuleCall_1_0_0_0()); 
	    }
		lv_features_1_0=ruleOptionalFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_1_0, 
        		"OptionalFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_0_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getStatementsMetaStatementParserRuleCall_1_1_0_0()); 
	    }
		lv_statements_3_0=ruleMetaStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_3_0, 
        		"MetaStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_1_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getMappingsMappingRuleParserRuleCall_1_2_0_0()); 
	    }
		lv_mappings_5_0=ruleMappingRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"mappings",
        		lv_mappings_5_0, 
        		"MappingRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_2_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getPojosPojoDefinitionParserRuleCall_1_3_0_0()); 
	    }
		lv_pojos_7_0=rulePojoDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"pojos",
        		lv_pojos_7_0, 
        		"PojoDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_8=RULE_WS
    { 
    newLeafNode(this_WS_8, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_3_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getUsagesPojoUsageParserRuleCall_1_4_0_0()); 
	    }
		lv_usages_9_0=rulePojoUsage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"usages",
        		lv_usages_9_0, 
        		"PojoUsage");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_10=RULE_WS
    { 
    newLeafNode(this_WS_10, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_4_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getPropertiesPropertyParserRuleCall_1_5_0_0()); 
	    }
		lv_properties_11_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_11_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_12=RULE_WS
    { 
    newLeafNode(this_WS_12, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_5_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getTablesTableDefinitionParserRuleCall_1_6_0_0()); 
	    }
		lv_tables_13_0=ruleTableDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"tables",
        		lv_tables_13_0, 
        		"TableDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_14=RULE_WS
    { 
    newLeafNode(this_WS_14, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_6_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getTableUsagesTableUsageParserRuleCall_1_7_0_0()); 
	    }
		lv_tableUsages_15_0=ruleTableUsage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"tableUsages",
        		lv_tableUsages_15_0, 
        		"TableUsage");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_16=RULE_WS
    { 
    newLeafNode(this_WS_16, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_7_1()); 
    }
)*))+)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'resolve references' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameResolveReferencesKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "resolve references");
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_0_1()); 
    }
)+(
(
		lv_doResolvePojo_2_0=RULE_ON_OFF
		{
			newLeafNode(lv_doResolvePojo_2_0, grammarAccess.getPropertyAccess().getDoResolvePojoON_OFFTerminalRuleCall_0_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"doResolvePojo",
        		lv_doResolvePojo_2_0, 
        		"ON_OFF");
	    }

)
))
    |((
(
		lv_name_3_0=	'database online' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getPropertyAccess().getNameDatabaseOnlineKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "database online");
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_1_1()); 
    }
)+(
(
		lv_doResolveDb_5_0=RULE_ON_OFF
		{
			newLeafNode(lv_doResolveDb_5_0, grammarAccess.getPropertyAccess().getDoResolveDbON_OFFTerminalRuleCall_0_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"doResolveDb",
        		lv_doResolveDb_5_0, 
        		"ON_OFF");
	    }

)
))
    |((
(
		lv_name_6_0=	'database url' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getPropertyAccess().getNameDatabaseUrlKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "database url");
	    }

)
)(this_WS_7=RULE_WS
    { 
    newLeafNode(this_WS_7, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_2_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDbUrlPropertyValueParserRuleCall_0_2_2_0()); 
	    }
		lv_dbUrl_8_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"dbUrl",
        		lv_dbUrl_8_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_9_0=	'database username' 
    {
        newLeafNode(lv_name_9_0, grammarAccess.getPropertyAccess().getNameDatabaseUsernameKeyword_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_9_0, "database username");
	    }

)
)(this_WS_10=RULE_WS
    { 
    newLeafNode(this_WS_10, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_3_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDbUsernamePropertyValueParserRuleCall_0_3_2_0()); 
	    }
		lv_dbUsername_11_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"dbUsername",
        		lv_dbUsername_11_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_12_0=	'database password' 
    {
        newLeafNode(lv_name_12_0, grammarAccess.getPropertyAccess().getNameDatabasePasswordKeyword_0_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_12_0, "database password");
	    }

)
)(this_WS_13=RULE_WS
    { 
    newLeafNode(this_WS_13, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_4_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDbPasswordPropertyValueParserRuleCall_0_4_2_0()); 
	    }
		lv_dbPassword_14_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"dbPassword",
        		lv_dbPassword_14_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_15_0=	'database schema' 
    {
        newLeafNode(lv_name_15_0, grammarAccess.getPropertyAccess().getNameDatabaseSchemaKeyword_0_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_15_0, "database schema");
	    }

)
)(this_WS_16=RULE_WS
    { 
    newLeafNode(this_WS_16, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_5_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDbSchemaPropertyValueParserRuleCall_0_5_2_0()); 
	    }
		lv_dbSchema_17_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"dbSchema",
        		lv_dbSchema_17_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_18_0=	'database driver' 
    {
        newLeafNode(lv_name_18_0, grammarAccess.getPropertyAccess().getNameDatabaseDriverKeyword_0_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_18_0, "database driver");
	    }

)
)(this_WS_19=RULE_WS
    { 
    newLeafNode(this_WS_19, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_6_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDbDriverPropertyValueParserRuleCall_0_6_2_0()); 
	    }
		lv_dbDriver_20_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"dbDriver",
        		lv_dbDriver_20_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)))this_SEMICOLON_21=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_21, grammarAccess.getPropertyAccess().getSEMICOLONTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); } 
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current.getText(); }  
	 EOF 
;

// Rule PropertyValue
rulePropertyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this__NUMBER_3=RULE__NUMBER    {
		$current.merge(this__NUMBER_3);
    }

    { 
    newLeafNode(this__NUMBER_3, grammarAccess.getPropertyValueAccess().get_NUMBERTerminalRuleCall_0_3()); 
    }

    |    this_COLON_4=RULE_COLON    {
		$current.merge(this_COLON_4);
    }

    { 
    newLeafNode(this_COLON_4, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_0_4()); 
    }

    |    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_LBRACE_11=RULE_LBRACE    {
		$current.merge(this_LBRACE_11);
    }

    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_0_11()); 
    }

    |    this_RBRACE_12=RULE_RBRACE    {
		$current.merge(this_RBRACE_12);
    }

    { 
    newLeafNode(this_RBRACE_12, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_0_12()); 
    }

    |    this_QUESTI_13=RULE_QUESTI    {
		$current.merge(this_QUESTI_13);
    }

    { 
    newLeafNode(this_QUESTI_13, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_0_13()); 
    }

    |    this_NOT_14=RULE_NOT    {
		$current.merge(this_NOT_14);
    }

    { 
    newLeafNode(this_NOT_14, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_0_14()); 
    }

    |    this_BAND_15=RULE_BAND    {
		$current.merge(this_BAND_15);
    }

    { 
    newLeafNode(this_BAND_15, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_0_15()); 
    }

    |    this_BOR_16=RULE_BOR    {
		$current.merge(this_BOR_16);
    }

    { 
    newLeafNode(this_BOR_16, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_0_16()); 
    }

    |    this_HASH_17=RULE_HASH    {
		$current.merge(this_HASH_17);
    }

    { 
    newLeafNode(this_HASH_17, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_0_17()); 
    }

    |    this_AT_18=RULE_AT    {
		$current.merge(this_AT_18);
    }

    { 
    newLeafNode(this_AT_18, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_0_18()); 
    }

    |    this_CARET_19=RULE_CARET    {
		$current.merge(this_CARET_19);
    }

    { 
    newLeafNode(this_CARET_19, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_0_19()); 
    }

    |    this_EQUALS_20=RULE_EQUALS    {
		$current.merge(this_EQUALS_20);
    }

    { 
    newLeafNode(this_EQUALS_20, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_0_20()); 
    }

    |    this_LESS_THAN_21=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_21);
    }

    { 
    newLeafNode(this_LESS_THAN_21, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_0_21()); 
    }

    |    this_MORE_THAN_22=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_22);
    }

    { 
    newLeafNode(this_MORE_THAN_22, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_0_22()); 
    }

    |    this_PERCENT_23=RULE_PERCENT    {
		$current.merge(this_PERCENT_23);
    }

    { 
    newLeafNode(this_PERCENT_23, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_0_23()); 
    }

    |    this_AND_24=RULE_AND    {
		$current.merge(this_AND_24);
    }

    { 
    newLeafNode(this_AND_24, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_0_24()); 
    }

    |    this_OR_25=RULE_OR    {
		$current.merge(this_OR_25);
    }

    { 
    newLeafNode(this_OR_25, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_0_25()); 
    }

    |    this_ESC_CHAR_26=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_26);
    }

    { 
    newLeafNode(this_ESC_CHAR_26, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_0_26()); 
    }

    |    this_ON_OFF_27=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_27);
    }

    { 
    newLeafNode(this_ON_OFF_27, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_0_27()); 
    }

    |    this_STATEMEN_TYPE_28=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_28);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_28, grammarAccess.getPropertyValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_28()); 
    }

    |    this_MAPPING_TYPE_29=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_29);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_29, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_0_29()); 
    }

    |    this_OPTION_TYPE_30=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_30);
    }

    { 
    newLeafNode(this_OPTION_TYPE_30, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_0_30()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE__NUMBER
    | RULE_WS
    | RULE_COLON
    | RULE_STRING
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_LBRACE
    | RULE_RBRACE
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_BOR
    | RULE_HASH
    | RULE_AT
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_PERCENT
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_31=RULE_REST    {
		$current.merge(this_REST_31);
    }

    { 
    newLeafNode(this_REST_31, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_32=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_32);
    }

    { 
    newLeafNode(this_IDENT_DOT_32, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_33=RULE_IDENT    {
		$current.merge(this_IDENT_33);
    }

    { 
    newLeafNode(this_IDENT_33, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this__NUMBER_34=RULE__NUMBER    {
		$current.merge(this__NUMBER_34);
    }

    { 
    newLeafNode(this__NUMBER_34, grammarAccess.getPropertyValueAccess().get_NUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_35=RULE_WS    {
		$current.merge(this_WS_35);
    }

    { 
    newLeafNode(this_WS_35, grammarAccess.getPropertyValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_COLON_36=RULE_COLON    {
		$current.merge(this_COLON_36);
    }

    { 
    newLeafNode(this_COLON_36, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_STRING_37=RULE_STRING    {
		$current.merge(this_STRING_37);
    }

    { 
    newLeafNode(this_STRING_37, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_1_0_6()); 
    }

    |    this_COMMA_38=RULE_COMMA    {
		$current.merge(this_COMMA_38);
    }

    { 
    newLeafNode(this_COMMA_38, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_1_0_7()); 
    }

    |    this_MINUS_39=RULE_MINUS    {
		$current.merge(this_MINUS_39);
    }

    { 
    newLeafNode(this_MINUS_39, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_1_0_8()); 
    }

    |    this_PLUS_40=RULE_PLUS    {
		$current.merge(this_PLUS_40);
    }

    { 
    newLeafNode(this_PLUS_40, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_1_0_9()); 
    }

    |    this_LPAREN_41=RULE_LPAREN    {
		$current.merge(this_LPAREN_41);
    }

    { 
    newLeafNode(this_LPAREN_41, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_RPAREN_42=RULE_RPAREN    {
		$current.merge(this_RPAREN_42);
    }

    { 
    newLeafNode(this_RPAREN_42, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_1_0_11()); 
    }

    |    this_LBRACE_43=RULE_LBRACE    {
		$current.merge(this_LBRACE_43);
    }

    { 
    newLeafNode(this_LBRACE_43, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_1_0_12()); 
    }

    |    this_RBRACE_44=RULE_RBRACE    {
		$current.merge(this_RBRACE_44);
    }

    { 
    newLeafNode(this_RBRACE_44, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_1_0_13()); 
    }

    |    this_QUESTI_45=RULE_QUESTI    {
		$current.merge(this_QUESTI_45);
    }

    { 
    newLeafNode(this_QUESTI_45, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_1_0_14()); 
    }

    |    this_NOT_46=RULE_NOT    {
		$current.merge(this_NOT_46);
    }

    { 
    newLeafNode(this_NOT_46, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_1_0_15()); 
    }

    |    this_BAND_47=RULE_BAND    {
		$current.merge(this_BAND_47);
    }

    { 
    newLeafNode(this_BAND_47, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_1_0_16()); 
    }

    |    this_BOR_48=RULE_BOR    {
		$current.merge(this_BOR_48);
    }

    { 
    newLeafNode(this_BOR_48, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_1_0_17()); 
    }

    |    this_HASH_49=RULE_HASH    {
		$current.merge(this_HASH_49);
    }

    { 
    newLeafNode(this_HASH_49, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_1_0_18()); 
    }

    |    this_AT_50=RULE_AT    {
		$current.merge(this_AT_50);
    }

    { 
    newLeafNode(this_AT_50, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_1_0_19()); 
    }

    |    this_CARET_51=RULE_CARET    {
		$current.merge(this_CARET_51);
    }

    { 
    newLeafNode(this_CARET_51, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_1_0_20()); 
    }

    |    this_EQUALS_52=RULE_EQUALS    {
		$current.merge(this_EQUALS_52);
    }

    { 
    newLeafNode(this_EQUALS_52, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_1_0_21()); 
    }

    |    this_LESS_THAN_53=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_53);
    }

    { 
    newLeafNode(this_LESS_THAN_53, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_1_0_22()); 
    }

    |    this_MORE_THAN_54=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_54);
    }

    { 
    newLeafNode(this_MORE_THAN_54, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_1_0_23()); 
    }

    |    this_PERCENT_55=RULE_PERCENT    {
		$current.merge(this_PERCENT_55);
    }

    { 
    newLeafNode(this_PERCENT_55, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_1_0_24()); 
    }

    |    this_AND_56=RULE_AND    {
		$current.merge(this_AND_56);
    }

    { 
    newLeafNode(this_AND_56, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_1_0_25()); 
    }

    |    this_OR_57=RULE_OR    {
		$current.merge(this_OR_57);
    }

    { 
    newLeafNode(this_OR_57, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_1_0_26()); 
    }

    |    this_ESC_CHAR_58=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_58);
    }

    { 
    newLeafNode(this_ESC_CHAR_58, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_1_0_27()); 
    }

    |    this_ON_OFF_59=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_59);
    }

    { 
    newLeafNode(this_ON_OFF_59, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_1_0_28()); 
    }

    |    this_STATEMEN_TYPE_60=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_60);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_60, grammarAccess.getPropertyValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_29()); 
    }

    |    this_MAPPING_TYPE_61=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_61);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_61, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_30()); 
    }

    |    this_OPTION_TYPE_62=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_62);
    }

    { 
    newLeafNode(this_OPTION_TYPE_62, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_1_0_31()); 
    }
))*)
    ;





// Entry rule entryRulePojoDefinition
entryRulePojoDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPojoDefinitionRule()); }
	 iv_rulePojoDefinition=rulePojoDefinition 
	 { $current=$iv_rulePojoDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PojoDefinition
rulePojoDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='pojo' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPojoDefinitionAccess().getPojoKeyword_0());
    }
(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPojoDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
)(
(
(
		lv_class_2_1=RULE_IDENT
		{
			newLeafNode(lv_class_2_1, grammarAccess.getPojoDefinitionAccess().getClassIDENTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"class",
        		lv_class_2_1, 
        		"IDENT");
	    }

    |		lv_class_2_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_class_2_2, grammarAccess.getPojoDefinitionAccess().getClassIDENT_DOTTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"class",
        		lv_class_2_2, 
        		"IDENT_DOT");
	    }

)

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getPojoDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePojoUsage
entryRulePojoUsage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoUsageRule()); }
	 iv_rulePojoUsage=rulePojoUsage 
	 { $current=$iv_rulePojoUsage.current; } 
	 EOF 
;

// Rule PojoUsage
rulePojoUsage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getColumnUsageParserRuleCall_0()); 
    }
    this_ColumnUsage_0=ruleColumnUsage
    { 
        $current = $this_ColumnUsage_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getIdentifierUsageParserRuleCall_1()); 
    }
    this_IdentifierUsage_1=ruleIdentifierUsage
    { 
        $current = $this_IdentifierUsage_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getConstantUsageParserRuleCall_2()); 
    }
    this_ConstantUsage_2=ruleConstantUsage
    { 
        $current = $this_ConstantUsage_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getMappingUsageParserRuleCall_3()); 
    }
    this_MappingUsage_3=ruleMappingUsage
    { 
        $current = $this_MappingUsage_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleColumnUsage
entryRuleColumnUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getColumnUsageRule()); }
	 iv_ruleColumnUsage=ruleColumnUsage 
	 { $current=$iv_ruleColumnUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColumnUsage
ruleColumnUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='col' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getColumnUsageAccess().getColKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getColumnUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getColumnUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getColumnUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIdentifierUsage
entryRuleIdentifierUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getIdentifierUsageRule()); }
	 iv_ruleIdentifierUsage=ruleIdentifierUsage 
	 { $current=$iv_ruleIdentifierUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierUsage
ruleIdentifierUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='ident' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIdentifierUsageAccess().getIdentKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getIdentifierUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getIdentifierUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getIdentifierUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleConstantUsage
entryRuleConstantUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getConstantUsageRule()); }
	 iv_ruleConstantUsage=ruleConstantUsage 
	 { $current=$iv_ruleConstantUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConstantUsage
ruleConstantUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantUsageAccess().getConstKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getConstantUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getConstantUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getConstantUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMappingUsage
entryRuleMappingUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getMappingUsageRule()); }
	 iv_ruleMappingUsage=ruleMappingUsage 
	 { $current=$iv_ruleMappingUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MappingUsage
ruleMappingUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='out' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMappingUsageAccess().getOutKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getMappingUsageAccess().getStatementMappingRuleCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getMappingUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getMappingUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTableDefinition
entryRuleTableDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTableDefinitionRule()); }
	 iv_ruleTableDefinition=ruleTableDefinition 
	 { $current=$iv_ruleTableDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TableDefinition
ruleTableDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='table' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableDefinitionAccess().getTableKeyword_0());
    }
(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTableDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
)(
(
		lv_table_2_0=RULE_IDENT
		{
			newLeafNode(lv_table_2_0, grammarAccess.getTableDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"table",
        		lv_table_2_0, 
        		"IDENT");
	    }

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getTableDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTableUsage
entryRuleTableUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTableUsageRule()); }
	 iv_ruleTableUsage=ruleTableUsage 
	 { $current=$iv_ruleTableUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TableUsage
ruleTableUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='dbcol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableUsageAccess().getDbcolKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getTableUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getTableUsageAccess().getTableTableDefinitionCrossReference_2_0()); 
	}

)
)(	otherlv_3='prefix' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableUsageAccess().getPrefixKeyword_3_0());
    }
(
(
		lv_prefix_4_0=RULE_IDENT
		{
			newLeafNode(lv_prefix_4_0, grammarAccess.getTableUsageAccess().getPrefixIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableUsageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prefix",
        		lv_prefix_4_0, 
        		"IDENT");
	    }

)
))?this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getTableUsageAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMetaStatement
entryRuleMetaStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaStatementRule()); }
	 iv_ruleMetaStatement=ruleMetaStatement 
	 { $current=$iv_ruleMetaStatement.current; } 
	 EOF 
;

// Rule MetaStatement
ruleMetaStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMetaStatementAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getMetaStatementAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_type_2_0=RULE_STATEMEN_TYPE
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMetaStatementAccess().getTypeSTATEMEN_TYPETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"STATEMEN_TYPE");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getMetaStatementAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getMetaStatementAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getMetaStatementAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getMetaStatementAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaStatementAccess().getStatementSqlParserRuleCall_6_0()); 
	    }
		lv_statement_7_0=ruleSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_7_0, 
        		"Sql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getMetaStatementAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleSql
entryRuleSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlRule()); }
	 iv_ruleSql=ruleSql 
	 { $current=$iv_ruleSql.current; } 
	 EOF 
;

// Rule Sql
ruleSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlAccess().getSqlsSqlFragmentParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleSqlFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"SqlFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSqlFragment
entryRuleSqlFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlFragmentRule()); }
	 iv_ruleSqlFragment=ruleSqlFragment 
	 { $current=$iv_ruleSqlFragment.current; } 
	 EOF 
;

// Rule SqlFragment
ruleSqlFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getValueSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"SqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
	    }
		lv_col_2_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"col",
        		lv_col_2_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
	    }
		lv_cnst_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_ident_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_LBRACE_7=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_7, grammarAccess.getSqlFragmentAccess().getLBRACETerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getMetaMetaSqlParserRuleCall_4_1_0()); 
	    }
		lv_meta_8_0=ruleMetaSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"meta",
        		lv_meta_8_0, 
        		"MetaSql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACE_9=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_9, grammarAccess.getSqlFragmentAccess().getRBRACETerminalRuleCall_4_2()); 
    }
)
    |(this_PERCENT_10=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_10, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_5_0()); 
    }
((this_PERCENT_11=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_11, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_5_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_5_1_0_1_0()); 
	    }
		lv_dbtab_12_0=ruleDatabaseTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbtab",
        		lv_dbtab_12_0, 
        		"DatabaseTable");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_5_1_1_0()); 
	    }
		lv_dbcol_13_0=ruleDatabaseColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbcol",
        		lv_dbcol_13_0, 
        		"DatabaseColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleSqlValue
entryRuleSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlValueRule()); } 
	 iv_ruleSqlValue=ruleSqlValue 
	 { $current=$iv_ruleSqlValue.current.getText(); }  
	 EOF 
;

// Rule SqlValue
ruleSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this__NUMBER_3=RULE__NUMBER    {
		$current.merge(this__NUMBER_3);
    }

    { 
    newLeafNode(this__NUMBER_3, grammarAccess.getSqlValueAccess().get_NUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_COMMA_5=RULE_COMMA    {
		$current.merge(this_COMMA_5);
    }

    { 
    newLeafNode(this_COMMA_5, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_0_5()); 
    }

    |    this_MINUS_6=RULE_MINUS    {
		$current.merge(this_MINUS_6);
    }

    { 
    newLeafNode(this_MINUS_6, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_0_6()); 
    }

    |    this_PLUS_7=RULE_PLUS    {
		$current.merge(this_PLUS_7);
    }

    { 
    newLeafNode(this_PLUS_7, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_0_7()); 
    }

    |    this_LPAREN_8=RULE_LPAREN    {
		$current.merge(this_LPAREN_8);
    }

    { 
    newLeafNode(this_LPAREN_8, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_0_8()); 
    }

    |    this_RPAREN_9=RULE_RPAREN    {
		$current.merge(this_RPAREN_9);
    }

    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_0_9()); 
    }

    |    this_RBRACE_10=RULE_RBRACE    {
		$current.merge(this_RBRACE_10);
    }

    { 
    newLeafNode(this_RBRACE_10, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_0_10()); 
    }

    |    this_QUESTI_11=RULE_QUESTI    {
		$current.merge(this_QUESTI_11);
    }

    { 
    newLeafNode(this_QUESTI_11, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
    }

    |    this_NOT_12=RULE_NOT    {
		$current.merge(this_NOT_12);
    }

    { 
    newLeafNode(this_NOT_12, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
    }

    |    this_BAND_13=RULE_BAND    {
		$current.merge(this_BAND_13);
    }

    { 
    newLeafNode(this_BAND_13, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
    }

    |    this_BOR_14=RULE_BOR    {
		$current.merge(this_BOR_14);
    }

    { 
    newLeafNode(this_BOR_14, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_0_14()); 
    }

    |    this_HASH_15=RULE_HASH    {
		$current.merge(this_HASH_15);
    }

    { 
    newLeafNode(this_HASH_15, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_0_15()); 
    }

    |    this_CARET_16=RULE_CARET    {
		$current.merge(this_CARET_16);
    }

    { 
    newLeafNode(this_CARET_16, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_0_16()); 
    }

    |    this_EQUALS_17=RULE_EQUALS    {
		$current.merge(this_EQUALS_17);
    }

    { 
    newLeafNode(this_EQUALS_17, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_0_17()); 
    }

    |    this_LESS_THAN_18=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_18);
    }

    { 
    newLeafNode(this_LESS_THAN_18, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_0_18()); 
    }

    |    this_MORE_THAN_19=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_19);
    }

    { 
    newLeafNode(this_MORE_THAN_19, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_0_19()); 
    }

    |    this_AND_20=RULE_AND    {
		$current.merge(this_AND_20);
    }

    { 
    newLeafNode(this_AND_20, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_0_20()); 
    }

    |    this_OR_21=RULE_OR    {
		$current.merge(this_OR_21);
    }

    { 
    newLeafNode(this_OR_21, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_0_21()); 
    }

    |    this_ESC_CHAR_22=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_22);
    }

    { 
    newLeafNode(this_ESC_CHAR_22, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_0_22()); 
    }

    |    this_ON_OFF_23=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_23);
    }

    { 
    newLeafNode(this_ON_OFF_23, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_0_23()); 
    }

    |    this_STATEMEN_TYPE_24=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_24);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_24, grammarAccess.getSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_24()); 
    }

    |    this_MAPPING_TYPE_25=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_25);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_25, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_25()); 
    }

    |    this_OPTION_TYPE_26=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_26);
    }

    { 
    newLeafNode(this_OPTION_TYPE_26, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_26()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE__NUMBER
    | RULE_WS
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_RBRACE
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_BOR
    | RULE_HASH
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_27=RULE_REST    {
		$current.merge(this_REST_27);
    }

    { 
    newLeafNode(this_REST_27, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_28=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_28);
    }

    { 
    newLeafNode(this_IDENT_DOT_28, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_29=RULE_IDENT    {
		$current.merge(this_IDENT_29);
    }

    { 
    newLeafNode(this_IDENT_29, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this__NUMBER_30=RULE__NUMBER    {
		$current.merge(this__NUMBER_30);
    }

    { 
    newLeafNode(this__NUMBER_30, grammarAccess.getSqlValueAccess().get_NUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_31=RULE_WS    {
		$current.merge(this_WS_31);
    }

    { 
    newLeafNode(this_WS_31, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_COMMA_32=RULE_COMMA    {
		$current.merge(this_COMMA_32);
    }

    { 
    newLeafNode(this_COMMA_32, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_1_0_5()); 
    }

    |    this_MINUS_33=RULE_MINUS    {
		$current.merge(this_MINUS_33);
    }

    { 
    newLeafNode(this_MINUS_33, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_1_0_6()); 
    }

    |    this_PLUS_34=RULE_PLUS    {
		$current.merge(this_PLUS_34);
    }

    { 
    newLeafNode(this_PLUS_34, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_1_0_7()); 
    }

    |    this_LPAREN_35=RULE_LPAREN    {
		$current.merge(this_LPAREN_35);
    }

    { 
    newLeafNode(this_LPAREN_35, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_1_0_8()); 
    }

    |    this_RPAREN_36=RULE_RPAREN    {
		$current.merge(this_RPAREN_36);
    }

    { 
    newLeafNode(this_RPAREN_36, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RBRACE_37=RULE_RBRACE    {
		$current.merge(this_RBRACE_37);
    }

    { 
    newLeafNode(this_RBRACE_37, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_1_0_10()); 
    }

    |    this_QUESTI_38=RULE_QUESTI    {
		$current.merge(this_QUESTI_38);
    }

    { 
    newLeafNode(this_QUESTI_38, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
    }

    |    this_NOT_39=RULE_NOT    {
		$current.merge(this_NOT_39);
    }

    { 
    newLeafNode(this_NOT_39, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
    }

    |    this_BAND_40=RULE_BAND    {
		$current.merge(this_BAND_40);
    }

    { 
    newLeafNode(this_BAND_40, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
    }

    |    this_BOR_41=RULE_BOR    {
		$current.merge(this_BOR_41);
    }

    { 
    newLeafNode(this_BOR_41, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_1_0_14()); 
    }

    |    this_HASH_42=RULE_HASH    {
		$current.merge(this_HASH_42);
    }

    { 
    newLeafNode(this_HASH_42, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_1_0_15()); 
    }

    |    this_CARET_43=RULE_CARET    {
		$current.merge(this_CARET_43);
    }

    { 
    newLeafNode(this_CARET_43, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_1_0_16()); 
    }

    |    this_EQUALS_44=RULE_EQUALS    {
		$current.merge(this_EQUALS_44);
    }

    { 
    newLeafNode(this_EQUALS_44, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_1_0_17()); 
    }

    |    this_LESS_THAN_45=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_45);
    }

    { 
    newLeafNode(this_LESS_THAN_45, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_18()); 
    }

    |    this_MORE_THAN_46=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_46);
    }

    { 
    newLeafNode(this_MORE_THAN_46, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_19()); 
    }

    |    this_AND_47=RULE_AND    {
		$current.merge(this_AND_47);
    }

    { 
    newLeafNode(this_AND_47, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_1_0_20()); 
    }

    |    this_OR_48=RULE_OR    {
		$current.merge(this_OR_48);
    }

    { 
    newLeafNode(this_OR_48, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_1_0_21()); 
    }

    |    this_ESC_CHAR_49=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_49);
    }

    { 
    newLeafNode(this_ESC_CHAR_49, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_22()); 
    }

    |    this_ON_OFF_50=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_50);
    }

    { 
    newLeafNode(this_ON_OFF_50, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_1_0_23()); 
    }

    |    this_STATEMEN_TYPE_51=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_51);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_51, grammarAccess.getSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_24()); 
    }

    |    this_MAPPING_TYPE_52=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_52);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_52, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_25()); 
    }

    |    this_OPTION_TYPE_53=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_53);
    }

    { 
    newLeafNode(this_OPTION_TYPE_53, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_26()); 
    }
))*)
    ;





// Entry rule entryRuleMetaSql
entryRuleMetaSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaSqlRule()); }
	 iv_ruleMetaSql=ruleMetaSql 
	 { $current=$iv_ruleMetaSql.current; } 
	 EOF 
;

// Rule MetaSql
ruleMetaSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
	    }
		lv_ifs_1_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_1_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_2=RULE_BOR
    { 
    newLeafNode(this_BOR_2, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
	    }
		lv_ifs_3_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_3_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_4_0=RULE_QUESTI
		{
			newLeafNode(lv_type_4_0, grammarAccess.getMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"QUESTI");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
	    }
		lv_cond_5_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BOR_6=RULE_BOR
    { 
    newLeafNode(this_BOR_6, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
	    }
		lv_ifs_7_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_7_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_8=RULE_BOR
    { 
    newLeafNode(this_BOR_8, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
	    }
		lv_ifs_9_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_9_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_10_0=RULE_BAND
		{
			newLeafNode(lv_type_10_0, grammarAccess.getMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"BAND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
	    }
		lv_ifs_11_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_11_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_12=RULE_BOR
    { 
    newLeafNode(this_BOR_12, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
	    }
		lv_ifs_13_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_13_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_14_0=RULE_BOR
		{
			newLeafNode(lv_type_14_0, grammarAccess.getMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"BOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
	    }
		lv_ifs_15_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_15_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_16=RULE_BOR
    { 
    newLeafNode(this_BOR_16, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
	    }
		lv_ifs_17_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_17_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_18_0=RULE_EQUALS
		{
			newLeafNode(lv_type_18_0, grammarAccess.getMetaSqlAccess().getTypeEQUALSTerminalRuleCall_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_18_0, 
        		"EQUALS");
	    }

)
)(this_WS_19=RULE_WS
    { 
    newLeafNode(this_WS_19, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_4_1()); 
    }
)*(
(
		lv_ftype_20_0=RULE_IDENT
		{
			newLeafNode(lv_ftype_20_0, grammarAccess.getMetaSqlAccess().getFtypeIDENTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ftype",
        		lv_ftype_20_0, 
        		"IDENT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_4_3_0()); 
	    }
		lv_ifs_21_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_21_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_type_22_0=RULE_HASH
		{
			newLeafNode(lv_type_22_0, grammarAccess.getMetaSqlAccess().getTypeHASHTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_22_0, 
        		"HASH");
	    }

)
)this__NUMBER_23=RULE__NUMBER
    { 
    newLeafNode(this__NUMBER_23, grammarAccess.getMetaSqlAccess().get_NUMBERTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getOrdOrdSqlParserRuleCall_5_2_0()); 
	    }
		lv_ord_24_0=ruleOrdSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		set(
       			$current, 
       			"ord",
        		lv_ord_24_0, 
        		"OrdSql");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleIfSql
entryRuleIfSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlRule()); }
	 iv_ruleIfSql=ruleIfSql 
	 { $current=$iv_ruleIfSql.current; } 
	 EOF 
;

// Rule IfSql
ruleIfSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlAccess().getSqlsIfSqlFragmentParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleIfSqlFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"IfSqlFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleIfSqlFragment
entryRuleIfSqlFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlFragmentRule()); }
	 iv_ruleIfSqlFragment=ruleIfSqlFragment 
	 { $current=$iv_ruleIfSqlFragment.current; } 
	 EOF 
;

// Rule IfSqlFragment
ruleIfSqlFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getValueIfSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleIfSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"IfSqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getIfSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
	    }
		lv_col_2_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"col",
        		lv_col_2_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
	    }
		lv_cnst_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_ident_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_PERCENT_7=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_7, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_4_0()); 
    }
((this_PERCENT_8=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_8, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_4_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_4_1_0_1_0()); 
	    }
		lv_dbtab_9_0=ruleDatabaseTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbtab",
        		lv_dbtab_9_0, 
        		"DatabaseTable");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_4_1_1_0()); 
	    }
		lv_dbcol_10_0=ruleDatabaseColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbcol",
        		lv_dbcol_10_0, 
        		"DatabaseColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(this_LBRACE_11=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getIfSqlFragmentAccess().getLBRACETerminalRuleCall_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getMetaIfMetaSqlParserRuleCall_5_1_0()); 
	    }
		lv_meta_12_0=ruleIfMetaSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"meta",
        		lv_meta_12_0, 
        		"IfMetaSql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACE_13=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_13, grammarAccess.getIfSqlFragmentAccess().getRBRACETerminalRuleCall_5_2()); 
    }
))
;





// Entry rule entryRuleIfSqlValue
entryRuleIfSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlValueRule()); } 
	 iv_ruleIfSqlValue=ruleIfSqlValue 
	 { $current=$iv_ruleIfSqlValue.current.getText(); }  
	 EOF 
;

// Rule IfSqlValue
ruleIfSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this__NUMBER_3=RULE__NUMBER    {
		$current.merge(this__NUMBER_3);
    }

    { 
    newLeafNode(this__NUMBER_3, grammarAccess.getIfSqlValueAccess().get_NUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_SEMICOLON_5=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_5);
    }

    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_QUESTI_11=RULE_QUESTI    {
		$current.merge(this_QUESTI_11);
    }

    { 
    newLeafNode(this_QUESTI_11, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
    }

    |    this_NOT_12=RULE_NOT    {
		$current.merge(this_NOT_12);
    }

    { 
    newLeafNode(this_NOT_12, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
    }

    |    this_BAND_13=RULE_BAND    {
		$current.merge(this_BAND_13);
    }

    { 
    newLeafNode(this_BAND_13, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
    }

    |    this_HASH_14=RULE_HASH    {
		$current.merge(this_HASH_14);
    }

    { 
    newLeafNode(this_HASH_14, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_0_14()); 
    }

    |    this_CARET_15=RULE_CARET    {
		$current.merge(this_CARET_15);
    }

    { 
    newLeafNode(this_CARET_15, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_0_15()); 
    }

    |    this_EQUALS_16=RULE_EQUALS    {
		$current.merge(this_EQUALS_16);
    }

    { 
    newLeafNode(this_EQUALS_16, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_0_16()); 
    }

    |    this_LESS_THAN_17=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_17);
    }

    { 
    newLeafNode(this_LESS_THAN_17, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_0_17()); 
    }

    |    this_MORE_THAN_18=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_18);
    }

    { 
    newLeafNode(this_MORE_THAN_18, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_0_18()); 
    }

    |    this_AND_19=RULE_AND    {
		$current.merge(this_AND_19);
    }

    { 
    newLeafNode(this_AND_19, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_0_19()); 
    }

    |    this_OR_20=RULE_OR    {
		$current.merge(this_OR_20);
    }

    { 
    newLeafNode(this_OR_20, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_0_20()); 
    }

    |    this_ESC_CHAR_21=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_21);
    }

    { 
    newLeafNode(this_ESC_CHAR_21, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_0_21()); 
    }

    |    this_ON_OFF_22=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_22);
    }

    { 
    newLeafNode(this_ON_OFF_22, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_0_22()); 
    }

    |    this_STATEMEN_TYPE_23=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_23);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_23, grammarAccess.getIfSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_23()); 
    }

    |    this_MAPPING_TYPE_24=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_24);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_24, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_24()); 
    }

    |    this_OPTION_TYPE_25=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_25);
    }

    { 
    newLeafNode(this_OPTION_TYPE_25, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_25()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE__NUMBER
    | RULE_WS
    | RULE_SEMICOLON
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_HASH
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_26=RULE_REST    {
		$current.merge(this_REST_26);
    }

    { 
    newLeafNode(this_REST_26, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_27=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_27);
    }

    { 
    newLeafNode(this_IDENT_DOT_27, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_28=RULE_IDENT    {
		$current.merge(this_IDENT_28);
    }

    { 
    newLeafNode(this_IDENT_28, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this__NUMBER_29=RULE__NUMBER    {
		$current.merge(this__NUMBER_29);
    }

    { 
    newLeafNode(this__NUMBER_29, grammarAccess.getIfSqlValueAccess().get_NUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_30=RULE_WS    {
		$current.merge(this_WS_30);
    }

    { 
    newLeafNode(this_WS_30, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_SEMICOLON_31=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_31);
    }

    { 
    newLeafNode(this_SEMICOLON_31, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_COMMA_32=RULE_COMMA    {
		$current.merge(this_COMMA_32);
    }

    { 
    newLeafNode(this_COMMA_32, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
    }

    |    this_MINUS_33=RULE_MINUS    {
		$current.merge(this_MINUS_33);
    }

    { 
    newLeafNode(this_MINUS_33, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
    }

    |    this_PLUS_34=RULE_PLUS    {
		$current.merge(this_PLUS_34);
    }

    { 
    newLeafNode(this_PLUS_34, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
    }

    |    this_LPAREN_35=RULE_LPAREN    {
		$current.merge(this_LPAREN_35);
    }

    { 
    newLeafNode(this_LPAREN_35, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RPAREN_36=RULE_RPAREN    {
		$current.merge(this_RPAREN_36);
    }

    { 
    newLeafNode(this_RPAREN_36, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_QUESTI_37=RULE_QUESTI    {
		$current.merge(this_QUESTI_37);
    }

    { 
    newLeafNode(this_QUESTI_37, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
    }

    |    this_NOT_38=RULE_NOT    {
		$current.merge(this_NOT_38);
    }

    { 
    newLeafNode(this_NOT_38, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
    }

    |    this_BAND_39=RULE_BAND    {
		$current.merge(this_BAND_39);
    }

    { 
    newLeafNode(this_BAND_39, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
    }

    |    this_HASH_40=RULE_HASH    {
		$current.merge(this_HASH_40);
    }

    { 
    newLeafNode(this_HASH_40, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_1_0_14()); 
    }

    |    this_CARET_41=RULE_CARET    {
		$current.merge(this_CARET_41);
    }

    { 
    newLeafNode(this_CARET_41, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_1_0_15()); 
    }

    |    this_EQUALS_42=RULE_EQUALS    {
		$current.merge(this_EQUALS_42);
    }

    { 
    newLeafNode(this_EQUALS_42, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_1_0_16()); 
    }

    |    this_LESS_THAN_43=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_43);
    }

    { 
    newLeafNode(this_LESS_THAN_43, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_17()); 
    }

    |    this_MORE_THAN_44=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_44);
    }

    { 
    newLeafNode(this_MORE_THAN_44, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_18()); 
    }

    |    this_AND_45=RULE_AND    {
		$current.merge(this_AND_45);
    }

    { 
    newLeafNode(this_AND_45, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_1_0_19()); 
    }

    |    this_OR_46=RULE_OR    {
		$current.merge(this_OR_46);
    }

    { 
    newLeafNode(this_OR_46, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_1_0_20()); 
    }

    |    this_ESC_CHAR_47=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_47);
    }

    { 
    newLeafNode(this_ESC_CHAR_47, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_21()); 
    }

    |    this_ON_OFF_48=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_48);
    }

    { 
    newLeafNode(this_ON_OFF_48, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_1_0_22()); 
    }

    |    this_STATEMEN_TYPE_49=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_49);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_49, grammarAccess.getIfSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_23()); 
    }

    |    this_MAPPING_TYPE_50=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_50);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_50, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_24()); 
    }

    |    this_OPTION_TYPE_51=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_51);
    }

    { 
    newLeafNode(this_OPTION_TYPE_51, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_25()); 
    }
))*)
    ;





// Entry rule entryRuleIfMetaSql
entryRuleIfMetaSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfMetaSqlRule()); }
	 iv_ruleIfMetaSql=ruleIfMetaSql 
	 { $current=$iv_ruleIfMetaSql.current; } 
	 EOF 
;

// Rule IfMetaSql
ruleIfMetaSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getIfMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
	    }
		lv_ifs_1_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_1_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_2=RULE_BOR
    { 
    newLeafNode(this_BOR_2, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
	    }
		lv_ifs_3_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_3_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_4_0=RULE_QUESTI
		{
			newLeafNode(lv_type_4_0, grammarAccess.getIfMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"QUESTI");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
	    }
		lv_cond_5_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BOR_6=RULE_BOR
    { 
    newLeafNode(this_BOR_6, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
	    }
		lv_ifs_7_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_7_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_8=RULE_BOR
    { 
    newLeafNode(this_BOR_8, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
	    }
		lv_ifs_9_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_9_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_10_0=RULE_BAND
		{
			newLeafNode(lv_type_10_0, grammarAccess.getIfMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"BAND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
	    }
		lv_ifs_11_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_11_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_12=RULE_BOR
    { 
    newLeafNode(this_BOR_12, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
	    }
		lv_ifs_13_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_13_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_14_0=RULE_BOR
		{
			newLeafNode(lv_type_14_0, grammarAccess.getIfMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"BOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
	    }
		lv_ifs_15_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_15_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_16=RULE_BOR
    { 
    newLeafNode(this_BOR_16, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
	    }
		lv_ifs_17_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_17_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleIfSqlCond
entryRuleIfSqlCond returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlCondRule()); }
	 iv_ruleIfSqlCond=ruleIfSqlCond 
	 { $current=$iv_ruleIfSqlCond.current; } 
	 EOF 
;

// Rule IfSqlCond
ruleIfSqlCond returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool1IfSqlBoolParserRuleCall_1_0()); 
	    }
		lv_bool1_1_0=ruleIfSqlBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
	        }
       		set(
       			$current, 
       			"bool1",
        		lv_bool1_1_0, 
        		"IfSqlBool");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_2()); 
    }
)*((
(
(
		lv_oper_3_1=RULE_AND
		{
			newLeafNode(lv_oper_3_1, grammarAccess.getIfSqlCondAccess().getOperANDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlCondRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"oper",
        		lv_oper_3_1, 
        		"AND");
	    }

    |		lv_oper_3_2=RULE_OR
		{
			newLeafNode(lv_oper_3_2, grammarAccess.getIfSqlCondAccess().getOperORTerminalRuleCall_3_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlCondRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"oper",
        		lv_oper_3_2, 
        		"OR");
	    }

)

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool2IfSqlBoolParserRuleCall_3_2_0()); 
	    }
		lv_bool2_5_0=ruleIfSqlBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
	        }
       		add(
       			$current, 
       			"bool2",
        		lv_bool2_5_0, 
        		"IfSqlBool");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_3()); 
    }
)*)*)
;





// Entry rule entryRuleIfSqlBool
entryRuleIfSqlBool returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlBoolRule()); }
	 iv_ruleIfSqlBool=ruleIfSqlBool 
	 { $current=$iv_ruleIfSqlBool.current; } 
	 EOF 
;

// Rule IfSqlBool
ruleIfSqlBool returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_not_0_0=RULE_NOT
		{
			newLeafNode(lv_not_0_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getIfSqlBoolAccess().getSTRINGTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCnstConstantParserRuleCall_0_2_0()); 
	    }
		lv_cnst_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_2_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_not_3_0=RULE_NOT
		{
			newLeafNode(lv_not_3_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getIfSqlBoolAccess().getCOLONTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getIdentIdentifierParserRuleCall_1_2_0()); 
	    }
		lv_ident_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_not_6_0=RULE_NOT
		{
			newLeafNode(lv_not_6_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_LPAREN_7=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_7, grammarAccess.getIfSqlBoolAccess().getLPARENTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCondIfSqlCondParserRuleCall_2_2_0()); 
	    }
		lv_cond_8_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_8_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_9=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getIfSqlBoolAccess().getRPARENTerminalRuleCall_2_3()); 
    }
))
;





// Entry rule entryRuleOrdSql
entryRuleOrdSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSqlRule()); }
	 iv_ruleOrdSql=ruleOrdSql 
	 { $current=$iv_ruleOrdSql.current; } 
	 EOF 
;

// Rule OrdSql
ruleOrdSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSqlAccess().getSqlsOrdSql2ParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleOrdSql2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"OrdSql2");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleOrdSql2
entryRuleOrdSql2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSql2Rule()); }
	 iv_ruleOrdSql2=ruleOrdSql2 
	 { $current=$iv_ruleOrdSql2.current; } 
	 EOF 
;

// Rule OrdSql2
ruleOrdSql2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getValueOrdSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleOrdSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"OrdSqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getOrdSql2Access().getSTRINGTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getCnstConstantParserRuleCall_1_1_0()); 
	    }
		lv_cnst_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_2_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getOrdSql2Access().getCOLONTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getIdentIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_ident_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_PERCENT_5=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_5, grammarAccess.getOrdSql2Access().getPERCENTTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getDbcolDatabaseColumnParserRuleCall_3_1_0()); 
	    }
		lv_dbcol_6_0=ruleDatabaseColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"dbcol",
        		lv_dbcol_6_0, 
        		"DatabaseColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOrdSqlValue
entryRuleOrdSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSqlValueRule()); } 
	 iv_ruleOrdSqlValue=ruleOrdSqlValue 
	 { $current=$iv_ruleOrdSqlValue.current.getText(); }  
	 EOF 
;

// Rule OrdSqlValue
ruleOrdSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this__NUMBER_3=RULE__NUMBER    {
		$current.merge(this__NUMBER_3);
    }

    { 
    newLeafNode(this__NUMBER_3, grammarAccess.getOrdSqlValueAccess().get_NUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_SEMICOLON_5=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_5);
    }

    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_LBRACE_11=RULE_LBRACE    {
		$current.merge(this_LBRACE_11);
    }

    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_0_11()); 
    }

    |    this_QUESTI_12=RULE_QUESTI    {
		$current.merge(this_QUESTI_12);
    }

    { 
    newLeafNode(this_QUESTI_12, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_0_12()); 
    }

    |    this_NOT_13=RULE_NOT    {
		$current.merge(this_NOT_13);
    }

    { 
    newLeafNode(this_NOT_13, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_0_13()); 
    }

    |    this_BAND_14=RULE_BAND    {
		$current.merge(this_BAND_14);
    }

    { 
    newLeafNode(this_BAND_14, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_0_14()); 
    }

    |    this_BOR_15=RULE_BOR    {
		$current.merge(this_BOR_15);
    }

    { 
    newLeafNode(this_BOR_15, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_0_15()); 
    }

    |    this_HASH_16=RULE_HASH    {
		$current.merge(this_HASH_16);
    }

    { 
    newLeafNode(this_HASH_16, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_0_16()); 
    }

    |    this_AT_17=RULE_AT    {
		$current.merge(this_AT_17);
    }

    { 
    newLeafNode(this_AT_17, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_0_17()); 
    }

    |    this_CARET_18=RULE_CARET    {
		$current.merge(this_CARET_18);
    }

    { 
    newLeafNode(this_CARET_18, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_0_18()); 
    }

    |    this_EQUALS_19=RULE_EQUALS    {
		$current.merge(this_EQUALS_19);
    }

    { 
    newLeafNode(this_EQUALS_19, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_0_19()); 
    }

    |    this_LESS_THAN_20=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_20);
    }

    { 
    newLeafNode(this_LESS_THAN_20, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_0_20()); 
    }

    |    this_MORE_THAN_21=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_21);
    }

    { 
    newLeafNode(this_MORE_THAN_21, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_0_21()); 
    }

    |    this_AND_22=RULE_AND    {
		$current.merge(this_AND_22);
    }

    { 
    newLeafNode(this_AND_22, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_0_22()); 
    }

    |    this_OR_23=RULE_OR    {
		$current.merge(this_OR_23);
    }

    { 
    newLeafNode(this_OR_23, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_0_23()); 
    }

    |    this_ESC_CHAR_24=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_24);
    }

    { 
    newLeafNode(this_ESC_CHAR_24, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_0_24()); 
    }

    |    this_ON_OFF_25=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_25);
    }

    { 
    newLeafNode(this_ON_OFF_25, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_0_25()); 
    }

    |    this_STATEMEN_TYPE_26=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_26);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_26, grammarAccess.getOrdSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_26()); 
    }

    |    this_MAPPING_TYPE_27=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_27);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_27, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_27()); 
    }

    |    this_OPTION_TYPE_28=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_28);
    }

    { 
    newLeafNode(this_OPTION_TYPE_28, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_28()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE__NUMBER
    | RULE_WS
    | RULE_SEMICOLON
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_LBRACE
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_BOR
    | RULE_HASH
    | RULE_AT
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_29=RULE_REST    {
		$current.merge(this_REST_29);
    }

    { 
    newLeafNode(this_REST_29, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_30=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_30);
    }

    { 
    newLeafNode(this_IDENT_DOT_30, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_31=RULE_IDENT    {
		$current.merge(this_IDENT_31);
    }

    { 
    newLeafNode(this_IDENT_31, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this__NUMBER_32=RULE__NUMBER    {
		$current.merge(this__NUMBER_32);
    }

    { 
    newLeafNode(this__NUMBER_32, grammarAccess.getOrdSqlValueAccess().get_NUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_33=RULE_WS    {
		$current.merge(this_WS_33);
    }

    { 
    newLeafNode(this_WS_33, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_SEMICOLON_34=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_34);
    }

    { 
    newLeafNode(this_SEMICOLON_34, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_COMMA_35=RULE_COMMA    {
		$current.merge(this_COMMA_35);
    }

    { 
    newLeafNode(this_COMMA_35, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
    }

    |    this_MINUS_36=RULE_MINUS    {
		$current.merge(this_MINUS_36);
    }

    { 
    newLeafNode(this_MINUS_36, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
    }

    |    this_PLUS_37=RULE_PLUS    {
		$current.merge(this_PLUS_37);
    }

    { 
    newLeafNode(this_PLUS_37, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
    }

    |    this_LPAREN_38=RULE_LPAREN    {
		$current.merge(this_LPAREN_38);
    }

    { 
    newLeafNode(this_LPAREN_38, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RPAREN_39=RULE_RPAREN    {
		$current.merge(this_RPAREN_39);
    }

    { 
    newLeafNode(this_RPAREN_39, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_LBRACE_40=RULE_LBRACE    {
		$current.merge(this_LBRACE_40);
    }

    { 
    newLeafNode(this_LBRACE_40, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_1_0_11()); 
    }

    |    this_QUESTI_41=RULE_QUESTI    {
		$current.merge(this_QUESTI_41);
    }

    { 
    newLeafNode(this_QUESTI_41, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_1_0_12()); 
    }

    |    this_NOT_42=RULE_NOT    {
		$current.merge(this_NOT_42);
    }

    { 
    newLeafNode(this_NOT_42, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_1_0_13()); 
    }

    |    this_BAND_43=RULE_BAND    {
		$current.merge(this_BAND_43);
    }

    { 
    newLeafNode(this_BAND_43, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_1_0_14()); 
    }

    |    this_BOR_44=RULE_BOR    {
		$current.merge(this_BOR_44);
    }

    { 
    newLeafNode(this_BOR_44, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_1_0_15()); 
    }

    |    this_HASH_45=RULE_HASH    {
		$current.merge(this_HASH_45);
    }

    { 
    newLeafNode(this_HASH_45, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_1_0_16()); 
    }

    |    this_AT_46=RULE_AT    {
		$current.merge(this_AT_46);
    }

    { 
    newLeafNode(this_AT_46, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_1_0_17()); 
    }

    |    this_CARET_47=RULE_CARET    {
		$current.merge(this_CARET_47);
    }

    { 
    newLeafNode(this_CARET_47, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_1_0_18()); 
    }

    |    this_EQUALS_48=RULE_EQUALS    {
		$current.merge(this_EQUALS_48);
    }

    { 
    newLeafNode(this_EQUALS_48, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_1_0_19()); 
    }

    |    this_LESS_THAN_49=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_49);
    }

    { 
    newLeafNode(this_LESS_THAN_49, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_20()); 
    }

    |    this_MORE_THAN_50=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_50);
    }

    { 
    newLeafNode(this_MORE_THAN_50, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_21()); 
    }

    |    this_AND_51=RULE_AND    {
		$current.merge(this_AND_51);
    }

    { 
    newLeafNode(this_AND_51, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_1_0_22()); 
    }

    |    this_OR_52=RULE_OR    {
		$current.merge(this_OR_52);
    }

    { 
    newLeafNode(this_OR_52, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_1_0_23()); 
    }

    |    this_ESC_CHAR_53=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_53);
    }

    { 
    newLeafNode(this_ESC_CHAR_53, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_24()); 
    }

    |    this_ON_OFF_54=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_54);
    }

    { 
    newLeafNode(this_ON_OFF_54, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_1_0_25()); 
    }

    |    this_STATEMEN_TYPE_55=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_55);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_55, grammarAccess.getOrdSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_26()); 
    }

    |    this_MAPPING_TYPE_56=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_56);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_56, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_27()); 
    }

    |    this_OPTION_TYPE_57=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_57);
    }

    { 
    newLeafNode(this_OPTION_TYPE_57, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_28()); 
    }
))*)
    ;





// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	 iv_ruleColumn=ruleColumn 
	 { $current=$iv_ruleColumn.current; } 
	 EOF 
;

// Rule Column
ruleColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getColumnAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

    |		lv_name_0_3=RULE__NUMBER
		{
			newLeafNode(lv_name_0_3, grammarAccess.getColumnAccess().getName_NUMBERTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"_NUMBER");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_1=RULE_CARET
    { 
    newLeafNode(this_CARET_1, grammarAccess.getColumnAccess().getCARETTerminalRuleCall_1_0()); 
    }
)((
(
RULE_IDENT

)
)=>
(
		lv_type_2_0=RULE_IDENT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getColumnAccess().getTypeIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"IDENT");
	    }

)
)?(((	RULE_CARET)=>this_CARET_3=RULE_CARET
    { 
    newLeafNode(this_CARET_3, grammarAccess.getColumnAccess().getCARETTerminalRuleCall_1_2_0()); 
    }
)(
(
(
		lv_vals_4_1=RULE_IDENT
		{
			newLeafNode(lv_vals_4_1, grammarAccess.getColumnAccess().getValsIDENTTerminalRuleCall_1_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_4_1, 
        		"IDENT");
	    }

    |		lv_vals_4_2=RULE__NUMBER
		{
			newLeafNode(lv_vals_4_2, grammarAccess.getColumnAccess().getVals_NUMBERTerminalRuleCall_1_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_4_2, 
        		"_NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_case_0_1=RULE_PLUS
		{
			newLeafNode(lv_case_0_1, grammarAccess.getConstantAccess().getCasePLUSTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_0_1, 
        		"PLUS");
	    }

    |		lv_case_0_2=RULE_MINUS
		{
			newLeafNode(lv_case_0_2, grammarAccess.getConstantAccess().getCaseMINUSTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_0_2, 
        		"MINUS");
	    }

)

)
)?(
(
(
		lv_name_1_1=RULE_IDENT
		{
			newLeafNode(lv_name_1_1, grammarAccess.getConstantAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"IDENT");
	    }

    |		lv_name_1_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_1_2, grammarAccess.getConstantAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"IDENT_DOT");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_2=RULE_CARET
    { 
    newLeafNode(this_CARET_2, grammarAccess.getConstantAccess().getCARETTerminalRuleCall_2_0()); 
    }
)((
(
RULE_IDENT

)
)=>
(
		lv_type_3_0=RULE_IDENT
		{
			newLeafNode(lv_type_3_0, grammarAccess.getConstantAccess().getTypeIDENTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"IDENT");
	    }

)
)?(((	RULE_CARET)=>this_CARET_4=RULE_CARET
    { 
    newLeafNode(this_CARET_4, grammarAccess.getConstantAccess().getCARETTerminalRuleCall_2_2_0()); 
    }
)(
(
(
		lv_vals_5_1=RULE_IDENT
		{
			newLeafNode(lv_vals_5_1, grammarAccess.getConstantAccess().getValsIDENTTerminalRuleCall_2_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_5_1, 
        		"IDENT");
	    }

    |		lv_vals_5_2=RULE__NUMBER
		{
			newLeafNode(lv_vals_5_2, grammarAccess.getConstantAccess().getVals_NUMBERTerminalRuleCall_2_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_5_2, 
        		"_NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current; } 
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_mode_0_1=RULE_EQUALS
		{
			newLeafNode(lv_mode_0_1, grammarAccess.getIdentifierAccess().getModeEQUALSTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_1, 
        		"EQUALS");
	    }

    |		lv_mode_0_2=RULE_LESS_THAN
		{
			newLeafNode(lv_mode_0_2, grammarAccess.getIdentifierAccess().getModeLESS_THANTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_2, 
        		"LESS_THAN");
	    }

    |		lv_mode_0_3=RULE_MORE_THAN
		{
			newLeafNode(lv_mode_0_3, grammarAccess.getIdentifierAccess().getModeMORE_THANTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_3, 
        		"MORE_THAN");
	    }

)

)
)?(
(
(
		lv_case_1_1=RULE_PLUS
		{
			newLeafNode(lv_case_1_1, grammarAccess.getIdentifierAccess().getCasePLUSTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_1, 
        		"PLUS");
	    }

    |		lv_case_1_2=RULE_MINUS
		{
			newLeafNode(lv_case_1_2, grammarAccess.getIdentifierAccess().getCaseMINUSTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_2, 
        		"MINUS");
	    }

)

)
)?(
(
(
		lv_name_2_1=RULE_IDENT
		{
			newLeafNode(lv_name_2_1, grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"IDENT");
	    }

    |		lv_name_2_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_2_2, grammarAccess.getIdentifierAccess().getNameIDENT_DOTTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"IDENT_DOT");
	    }

    |		lv_name_2_3=RULE__NUMBER
		{
			newLeafNode(lv_name_2_3, grammarAccess.getIdentifierAccess().getName_NUMBERTerminalRuleCall_2_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_3, 
        		"_NUMBER");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_3=RULE_CARET
    { 
    newLeafNode(this_CARET_3, grammarAccess.getIdentifierAccess().getCARETTerminalRuleCall_3_0()); 
    }
)((
(
RULE_IDENT

)
)=>
(
		lv_type_4_0=RULE_IDENT
		{
			newLeafNode(lv_type_4_0, grammarAccess.getIdentifierAccess().getTypeIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"IDENT");
	    }

)
)?(((	RULE_CARET)=>this_CARET_5=RULE_CARET
    { 
    newLeafNode(this_CARET_5, grammarAccess.getIdentifierAccess().getCARETTerminalRuleCall_3_2_0()); 
    }
)(
(
(
		lv_vals_6_1=RULE_IDENT
		{
			newLeafNode(lv_vals_6_1, grammarAccess.getIdentifierAccess().getValsIDENTTerminalRuleCall_3_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_6_1, 
        		"IDENT");
	    }

    |		lv_vals_6_2=RULE__NUMBER
		{
			newLeafNode(lv_vals_6_2, grammarAccess.getIdentifierAccess().getVals_NUMBERTerminalRuleCall_3_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_6_2, 
        		"_NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleDatabaseColumn
entryRuleDatabaseColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseColumnRule()); }
	 iv_ruleDatabaseColumn=ruleDatabaseColumn 
	 { $current=$iv_ruleDatabaseColumn.current; } 
	 EOF 
;

// Rule DatabaseColumn
ruleDatabaseColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseColumnAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)
;





// Entry rule entryRuleDatabaseTable
entryRuleDatabaseTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseTableRule()); }
	 iv_ruleDatabaseTable=ruleDatabaseTable 
	 { $current=$iv_ruleDatabaseTable.current; } 
	 EOF 
;

// Rule DatabaseTable
ruleDatabaseTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseTableAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseTableAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)
;





// Entry rule entryRuleMappingRule
entryRuleMappingRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRuleRule()); }
	 iv_ruleMappingRule=ruleMappingRule 
	 { $current=$iv_ruleMappingRule.current; } 
	 EOF 
;

// Rule MappingRule
ruleMappingRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMappingRuleAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getMappingRuleAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_type_2_0=RULE_MAPPING_TYPE
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMappingRuleAccess().getTypeMAPPING_TYPETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"MAPPING_TYPE");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getMappingRuleAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getMappingRuleAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getMappingRuleAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getMappingRuleAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingRuleAccess().getMappingMappingParserRuleCall_6_0()); 
	    }
		lv_mapping_7_0=ruleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRuleRule());
	        }
       		set(
       			$current, 
       			"mapping",
        		lv_mapping_7_0, 
        		"Mapping");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getMappingRuleAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	 iv_ruleMapping=ruleMapping 
	 { $current=$iv_ruleMapping.current; } 
	 EOF 
;

// Rule Mapping
ruleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getMappingAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_1_0()); 
	    }
		lv_mappingItems_1_0=ruleMappingItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"mappingItems",
        		lv_mappingItems_1_0, 
        		"MappingItem");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getMappingAccess().getWSTerminalRuleCall_2_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_2_1_0()); 
	    }
		lv_mappingItems_3_0=ruleMappingItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"mappingItems",
        		lv_mappingItems_3_0, 
        		"MappingItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getMappingAccess().getWSTerminalRuleCall_3()); 
    }
)*)
;





// Entry rule entryRuleMappingItem
entryRuleMappingItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingItemRule()); }
	 iv_ruleMappingItem=ruleMappingItem 
	 { $current=$iv_ruleMappingItem.current; } 
	 EOF 
;

// Rule MappingItem
ruleMappingItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_col_0_1=RULE_IDENT
		{
			newLeafNode(lv_col_0_1, grammarAccess.getMappingItemAccess().getColIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"col",
        		lv_col_0_1, 
        		"IDENT");
	    }

    |		lv_col_0_2=RULE__NUMBER
		{
			newLeafNode(lv_col_0_2, grammarAccess.getMappingItemAccess().getCol_NUMBERTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"col",
        		lv_col_0_2, 
        		"_NUMBER");
	    }

)

)
)(this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_0()); 
    }
(
(
		lv_type_2_0=RULE_IDENT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMappingItemAccess().getTypeIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"IDENT");
	    }

)
)?(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingItemAccess().getAttrMappingColumnParserRuleCall_1_2_1_0()); 
	    }
		lv_attr_4_0=ruleMappingColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingItemRule());
	        }
       		set(
       			$current, 
       			"attr",
        		lv_attr_4_0, 
        		"MappingColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?)
;





// Entry rule entryRuleMappingColumn
entryRuleMappingColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingColumnRule()); }
	 iv_ruleMappingColumn=ruleMappingColumn 
	 { $current=$iv_ruleMappingColumn.current; } 
	 EOF 
;

// Rule MappingColumn
ruleMappingColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getMappingColumnAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getMappingColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)(this_CARET_1=RULE_CARET
    { 
    newLeafNode(this_CARET_1, grammarAccess.getMappingColumnAccess().getCARETTerminalRuleCall_1_0()); 
    }
(
(
(
		lv_vals_2_1=RULE_IDENT
		{
			newLeafNode(lv_vals_2_1, grammarAccess.getMappingColumnAccess().getValsIDENTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_2_1, 
        		"IDENT");
	    }

    |		lv_vals_2_2=RULE__NUMBER
		{
			newLeafNode(lv_vals_2_2, grammarAccess.getMappingColumnAccess().getVals_NUMBERTerminalRuleCall_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_2_2, 
        		"_NUMBER");
	    }

)

)
))*)
;





// Entry rule entryRuleOptionalFeature
entryRuleOptionalFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionalFeatureRule()); }
	 iv_ruleOptionalFeature=ruleOptionalFeature 
	 { $current=$iv_ruleOptionalFeature.current; } 
	 EOF 
;

// Rule OptionalFeature
ruleOptionalFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOptionalFeatureAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getOptionalFeatureAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_type_2_0=RULE_OPTION_TYPE
		{
			newLeafNode(lv_type_2_0, grammarAccess.getOptionalFeatureAccess().getTypeOPTION_TYPETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OPTION_TYPE");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getOptionalFeatureAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getOptionalFeatureAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getOptionalFeatureAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getOptionalFeatureAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getOptionFeatureValueParserRuleCall_6_0()); 
	    }
		lv_option_7_0=ruleFeatureValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_7_0, 
        		"FeatureValue");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getOptionalFeatureAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleFeatureValue
entryRuleFeatureValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureValueRule()); } 
	 iv_ruleFeatureValue=ruleFeatureValue 
	 { $current=$iv_ruleFeatureValue.current.getText(); }  
	 EOF 
;

// Rule FeatureValue
ruleFeatureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getFeatureValueAccess().getRESTTerminalRuleCall_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getFeatureValueAccess().getIDENT_DOTTerminalRuleCall_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getFeatureValueAccess().getIDENTTerminalRuleCall_2()); 
    }

    |    this__NUMBER_3=RULE__NUMBER    {
		$current.merge(this__NUMBER_3);
    }

    { 
    newLeafNode(this__NUMBER_3, grammarAccess.getFeatureValueAccess().get_NUMBERTerminalRuleCall_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getFeatureValueAccess().getWSTerminalRuleCall_4()); 
    }

    |    this_COLON_5=RULE_COLON    {
		$current.merge(this_COLON_5);
    }

    { 
    newLeafNode(this_COLON_5, grammarAccess.getFeatureValueAccess().getCOLONTerminalRuleCall_5()); 
    }

    |    this_STRING_6=RULE_STRING    {
		$current.merge(this_STRING_6);
    }

    { 
    newLeafNode(this_STRING_6, grammarAccess.getFeatureValueAccess().getSTRINGTerminalRuleCall_6()); 
    }

    |    this_COMMA_7=RULE_COMMA    {
		$current.merge(this_COMMA_7);
    }

    { 
    newLeafNode(this_COMMA_7, grammarAccess.getFeatureValueAccess().getCOMMATerminalRuleCall_7()); 
    }

    |    this_MINUS_8=RULE_MINUS    {
		$current.merge(this_MINUS_8);
    }

    { 
    newLeafNode(this_MINUS_8, grammarAccess.getFeatureValueAccess().getMINUSTerminalRuleCall_8()); 
    }

    |    this_PLUS_9=RULE_PLUS    {
		$current.merge(this_PLUS_9);
    }

    { 
    newLeafNode(this_PLUS_9, grammarAccess.getFeatureValueAccess().getPLUSTerminalRuleCall_9()); 
    }

    |    this_LPAREN_10=RULE_LPAREN    {
		$current.merge(this_LPAREN_10);
    }

    { 
    newLeafNode(this_LPAREN_10, grammarAccess.getFeatureValueAccess().getLPARENTerminalRuleCall_10()); 
    }

    |    this_RPAREN_11=RULE_RPAREN    {
		$current.merge(this_RPAREN_11);
    }

    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getFeatureValueAccess().getRPARENTerminalRuleCall_11()); 
    }

    |    this_LBRACE_12=RULE_LBRACE    {
		$current.merge(this_LBRACE_12);
    }

    { 
    newLeafNode(this_LBRACE_12, grammarAccess.getFeatureValueAccess().getLBRACETerminalRuleCall_12()); 
    }

    |    this_RBRACE_13=RULE_RBRACE    {
		$current.merge(this_RBRACE_13);
    }

    { 
    newLeafNode(this_RBRACE_13, grammarAccess.getFeatureValueAccess().getRBRACETerminalRuleCall_13()); 
    }

    |    this_QUESTI_14=RULE_QUESTI    {
		$current.merge(this_QUESTI_14);
    }

    { 
    newLeafNode(this_QUESTI_14, grammarAccess.getFeatureValueAccess().getQUESTITerminalRuleCall_14()); 
    }

    |    this_NOT_15=RULE_NOT    {
		$current.merge(this_NOT_15);
    }

    { 
    newLeafNode(this_NOT_15, grammarAccess.getFeatureValueAccess().getNOTTerminalRuleCall_15()); 
    }

    |    this_BAND_16=RULE_BAND    {
		$current.merge(this_BAND_16);
    }

    { 
    newLeafNode(this_BAND_16, grammarAccess.getFeatureValueAccess().getBANDTerminalRuleCall_16()); 
    }

    |    this_BOR_17=RULE_BOR    {
		$current.merge(this_BOR_17);
    }

    { 
    newLeafNode(this_BOR_17, grammarAccess.getFeatureValueAccess().getBORTerminalRuleCall_17()); 
    }

    |    this_HASH_18=RULE_HASH    {
		$current.merge(this_HASH_18);
    }

    { 
    newLeafNode(this_HASH_18, grammarAccess.getFeatureValueAccess().getHASHTerminalRuleCall_18()); 
    }

    |    this_AT_19=RULE_AT    {
		$current.merge(this_AT_19);
    }

    { 
    newLeafNode(this_AT_19, grammarAccess.getFeatureValueAccess().getATTerminalRuleCall_19()); 
    }

    |    this_CARET_20=RULE_CARET    {
		$current.merge(this_CARET_20);
    }

    { 
    newLeafNode(this_CARET_20, grammarAccess.getFeatureValueAccess().getCARETTerminalRuleCall_20()); 
    }

    |    this_EQUALS_21=RULE_EQUALS    {
		$current.merge(this_EQUALS_21);
    }

    { 
    newLeafNode(this_EQUALS_21, grammarAccess.getFeatureValueAccess().getEQUALSTerminalRuleCall_21()); 
    }

    |    this_LESS_THAN_22=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_22);
    }

    { 
    newLeafNode(this_LESS_THAN_22, grammarAccess.getFeatureValueAccess().getLESS_THANTerminalRuleCall_22()); 
    }

    |    this_MORE_THAN_23=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_23);
    }

    { 
    newLeafNode(this_MORE_THAN_23, grammarAccess.getFeatureValueAccess().getMORE_THANTerminalRuleCall_23()); 
    }

    |    this_PERCENT_24=RULE_PERCENT    {
		$current.merge(this_PERCENT_24);
    }

    { 
    newLeafNode(this_PERCENT_24, grammarAccess.getFeatureValueAccess().getPERCENTTerminalRuleCall_24()); 
    }

    |    this_AND_25=RULE_AND    {
		$current.merge(this_AND_25);
    }

    { 
    newLeafNode(this_AND_25, grammarAccess.getFeatureValueAccess().getANDTerminalRuleCall_25()); 
    }

    |    this_OR_26=RULE_OR    {
		$current.merge(this_OR_26);
    }

    { 
    newLeafNode(this_OR_26, grammarAccess.getFeatureValueAccess().getORTerminalRuleCall_26()); 
    }

    |    this_ESC_CHAR_27=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_27);
    }

    { 
    newLeafNode(this_ESC_CHAR_27, grammarAccess.getFeatureValueAccess().getESC_CHARTerminalRuleCall_27()); 
    }

    |    this_ON_OFF_28=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_28);
    }

    { 
    newLeafNode(this_ON_OFF_28, grammarAccess.getFeatureValueAccess().getON_OFFTerminalRuleCall_28()); 
    }

    |    this_STATEMEN_TYPE_29=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_29);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_29, grammarAccess.getFeatureValueAccess().getSTATEMEN_TYPETerminalRuleCall_29()); 
    }

    |    this_MAPPING_TYPE_30=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_30);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_30, grammarAccess.getFeatureValueAccess().getMAPPING_TYPETerminalRuleCall_30()); 
    }

    |    this_OPTION_TYPE_31=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_31);
    }

    { 
    newLeafNode(this_OPTION_TYPE_31, grammarAccess.getFeatureValueAccess().getOPTION_TYPETerminalRuleCall_31()); 
    }
)+
    ;





// Entry rule entryRuleXExpression
entryRuleXExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionRule()); }
	 iv_ruleXExpression=ruleXExpression 
	 { $current=$iv_ruleXExpression.current; } 
	 EOF 
;

// Rule XExpression
ruleXExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getXExpressionAccess().getXAssignmentParserRuleCall()); 
    }
    this_XAssignment_0=ruleXAssignment
    { 
        $current = $this_XAssignment_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleXAssignment
entryRuleXAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAssignmentRule()); }
	 iv_ruleXAssignment=ruleXAssignment 
	 { $current=$iv_ruleXAssignment.current; } 
	 EOF 
;

// Rule XAssignment
ruleXAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXAssignmentAccess().getXAssignmentAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getOpSingleAssignParserRuleCall_0_2()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getValueXAssignmentParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
    { 
        newCompositeNode(grammarAccess.getXAssignmentAccess().getXOrExpressionParserRuleCall_1_0()); 
    }
    this_XOrExpression_4=ruleXOrExpression
    { 
        $current = $this_XOrExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMultiAssign
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAssignmentAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAssignmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpMultiAssign		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAssignmentAccess().getRightOperandXAssignmentParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_7_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_7_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleOpSingleAssign
entryRuleOpSingleAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpSingleAssignRule()); } 
	 iv_ruleOpSingleAssign=ruleOpSingleAssign 
	 { $current=$iv_ruleOpSingleAssign.current.getText(); }  
	 EOF 
;

// Rule OpSingleAssign
ruleOpSingleAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpSingleAssignAccess().getEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleOpMultiAssign
entryRuleOpMultiAssign returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiAssignRule()); } 
	 iv_ruleOpMultiAssign=ruleOpMultiAssign 
	 { $current=$iv_ruleOpMultiAssign.current.getText(); }  
	 EOF 
;

// Rule OpMultiAssign
ruleOpMultiAssign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAssignAccess().getPlusSignEqualsSignKeyword()); 
    }

    ;





// Entry rule entryRuleXOrExpression
entryRuleXOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExpressionRule()); }
	 iv_ruleXOrExpression=ruleXOrExpression 
	 { $current=$iv_ruleXOrExpression.current; } 
	 EOF 
;

// Rule XOrExpression
ruleXOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOrExpressionAccess().getXAndExpressionParserRuleCall_0()); 
    }
    this_XAndExpression_0=ruleXAndExpression
    { 
        $current = $this_XAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOr
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOrExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOr		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExpressionAccess().getRightOperandXAndExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOrRule()); } 
	 iv_ruleOpOr=ruleOpOr 
	 { $current=$iv_ruleOpOr.current.getText(); }  
	 EOF 
;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='||' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword()); 
    }

    ;





// Entry rule entryRuleXAndExpression
entryRuleXAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAndExpressionRule()); }
	 iv_ruleXAndExpression=ruleXAndExpression 
	 { $current=$iv_ruleXAndExpression.current; } 
	 EOF 
;

// Rule XAndExpression
ruleXAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAndExpressionAccess().getXEqualityExpressionParserRuleCall_0()); 
    }
    this_XEqualityExpression_0=ruleXEqualityExpression
    { 
        $current = $this_XEqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAnd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAndExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAndExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAnd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAndExpressionAccess().getRightOperandXEqualityExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XEqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAndRule()); } 
	 iv_ruleOpAnd=ruleOpAnd 
	 { $current=$iv_ruleOpAnd.current.getText(); }  
	 EOF 
;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='&&' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword()); 
    }

    ;





// Entry rule entryRuleXEqualityExpression
entryRuleXEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXEqualityExpressionRule()); }
	 iv_ruleXEqualityExpression=ruleXEqualityExpression 
	 { $current=$iv_ruleXEqualityExpression.current; } 
	 EOF 
;

// Rule XEqualityExpression
ruleXEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getXRelationalExpressionParserRuleCall_0()); 
    }
    this_XRelationalExpression_0=ruleXRelationalExpression
    { 
        $current = $this_XRelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpEquality
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXEqualityExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXEqualityExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpEquality		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXEqualityExpressionAccess().getRightOperandXRelationalExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXRelationalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XRelationalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpEquality
entryRuleOpEquality returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpEqualityRule()); } 
	 iv_ruleOpEquality=ruleOpEquality 
	 { $current=$iv_ruleOpEquality.current.getText(); }  
	 EOF 
;

// Rule OpEquality
ruleOpEquality returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpEqualityAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXRelationalExpression
entryRuleXRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXRelationalExpressionRule()); }
	 iv_ruleXRelationalExpression=ruleXRelationalExpression 
	 { $current=$iv_ruleXRelationalExpression.current; } 
	 EOF 
;

// Rule XRelationalExpression
ruleXRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getXOtherOperatorExpressionParserRuleCall_0()); 
    }
    this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression
    { 
        $current = $this_XOtherOperatorExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'instanceof' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXInstanceOfExpressionExpressionAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='instanceof' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXRelationalExpressionAccess().getInstanceofKeyword_1_0_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_0_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(
(
		ruleOpCompare
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXRelationalExpressionAccess().getXBinaryOperationLeftOperandAction_1_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXRelationalExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0()); 
	    }
		ruleOpCompare		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXRelationalExpressionAccess().getRightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_rightOperand_6_0=ruleXOtherOperatorExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_6_0, 
        		"XOtherOperatorExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); } 
	 iv_ruleOpCompare=ruleOpCompare 
	 { $current=$iv_ruleOpCompare.current.getText(); }  
	 EOF 
;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2()); 
    }

    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXOtherOperatorExpression
entryRuleXOtherOperatorExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOtherOperatorExpressionRule()); }
	 iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression 
	 { $current=$iv_ruleXOtherOperatorExpression.current; } 
	 EOF 
;

// Rule XOtherOperatorExpression
ruleXOtherOperatorExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getXAdditiveExpressionParserRuleCall_0()); 
    }
    this_XAdditiveExpression_0=ruleXAdditiveExpression
    { 
        $current = $this_XAdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpOther
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXOtherOperatorExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOtherOperatorExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpOther		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXOtherOperatorExpressionAccess().getRightOperandXAdditiveExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOtherOperatorExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XAdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpOther
entryRuleOpOther returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpOtherRule()); } 
	 iv_ruleOpOther=ruleOpOther 
	 { $current=$iv_ruleOpOther.current.getText(); }  
	 EOF 
;

// Rule OpOther
ruleOpOther returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='->' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getHyphenMinusGreaterThanSignKeyword_0()); 
    }

    |
	kw='..' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getFullStopFullStopKeyword_1()); 
    }

    |
	kw='=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getEqualsSignGreaterThanSignKeyword_2()); 
    }

    |(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_0()); 
    }
((((
	'>' 

	'>' 
))=>(
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_0_0_0()); 
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_0_0_1()); 
    }
))
    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getGreaterThanSignKeyword_3_1_1()); 
    }
))
    |(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_0()); 
    }
((((
	'<' 

	'<' 
))=>(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_0_0_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_0_0_1()); 
    }
))
    |
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignKeyword_4_1_1()); 
    }
))
    |
	kw='<>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignGreaterThanSignKeyword_5()); 
    }

    |
	kw='?:' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getQuestionMarkColonKeyword_6()); 
    }

    |
	kw='<=>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpOtherAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleXAdditiveExpression
entryRuleXAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXAdditiveExpressionRule()); }
	 iv_ruleXAdditiveExpression=ruleXAdditiveExpression 
	 { $current=$iv_ruleXAdditiveExpression.current; } 
	 EOF 
;

// Rule XAdditiveExpression
ruleXAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getXMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression
    { 
        $current = $this_XMultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpAdd
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXAdditiveExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXAdditiveExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpAdd		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXAdditiveExpressionAccess().getRightOperandXMultiplicativeExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XMultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpAdd
entryRuleOpAdd returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAddRule()); } 
	 iv_ruleOpAdd=ruleOpAdd 
	 { $current=$iv_ruleOpAdd.current.getText(); }  
	 EOF 
;

// Rule OpAdd
ruleOpAdd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpAddAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXMultiplicativeExpression
entryRuleXMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMultiplicativeExpressionRule()); }
	 iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression 
	 { $current=$iv_ruleXMultiplicativeExpression.current; } 
	 EOF 
;

// Rule XMultiplicativeExpression
ruleXMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getXUnaryOperationParserRuleCall_0()); 
    }
    this_XUnaryOperation_0=ruleXUnaryOperation
    { 
        $current = $this_XUnaryOperation_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
		ruleOpMulti
)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMultiplicativeExpressionAccess().getXBinaryOperationLeftOperandAction_1_0_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMultiplicativeExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_1_0()); 
	    }
		ruleOpMulti		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMultiplicativeExpressionAccess().getRightOperandXUnaryOperationParserRuleCall_1_1_0()); 
	    }
		lv_rightOperand_3_0=ruleXUnaryOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"XUnaryOperation");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpMulti
entryRuleOpMulti returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpMultiRule()); } 
	 iv_ruleOpMulti=ruleOpMulti 
	 { $current=$iv_ruleOpMulti.current.getText(); }  
	 EOF 
;

// Rule OpMulti
ruleOpMulti returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='**' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getAsteriskAsteriskKeyword_1()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getSolidusKeyword_2()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpMultiAccess().getPercentSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleXUnaryOperation
entryRuleXUnaryOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXUnaryOperationRule()); }
	 iv_ruleXUnaryOperation=ruleXUnaryOperation 
	 { $current=$iv_ruleXUnaryOperation.current; } 
	 EOF 
;

// Rule XUnaryOperation
ruleXUnaryOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXUnaryOperationAccess().getXUnaryOperationAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXUnaryOperationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getFeatureJvmIdentifiableElementCrossReference_0_1_0()); 
	    }
		ruleOpUnary		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getOperandXCastedExpressionParserRuleCall_0_2_0()); 
	    }
		lv_operand_2_0=ruleXCastedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXUnaryOperationRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_2_0, 
        		"XCastedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getXUnaryOperationAccess().getXCastedExpressionParserRuleCall_1()); 
    }
    this_XCastedExpression_3=ruleXCastedExpression
    { 
        $current = $this_XCastedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOpUnary
entryRuleOpUnary returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpUnaryRule()); } 
	 iv_ruleOpUnary=ruleOpUnary 
	 { $current=$iv_ruleOpUnary.current.getText(); }  
	 EOF 
;

// Rule OpUnary
ruleOpUnary returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getExclamationMarkKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getHyphenMinusKeyword_1()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpUnaryAccess().getPlusSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXCastedExpression
entryRuleXCastedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCastedExpressionRule()); }
	 iv_ruleXCastedExpression=ruleXCastedExpression 
	 { $current=$iv_ruleXCastedExpression.current; } 
	 EOF 
;

// Rule XCastedExpression
ruleXCastedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getXMemberFeatureCallParserRuleCall_0()); 
    }
    this_XMemberFeatureCall_0=ruleXMemberFeatureCall
    { 
        $current = $this_XMemberFeatureCall_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)	'as' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXCastedExpressionAccess().getXCastedExpressionTargetAction_1_0_0_0(),
            $current);
    }
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXCastedExpressionAccess().getAsKeyword_1_0_0_1());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXCastedExpressionAccess().getTypeJvmTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCastedExpressionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXMemberFeatureCall
entryRuleXMemberFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXMemberFeatureCallRule()); }
	 iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall 
	 { $current=$iv_ruleXMemberFeatureCall.current; } 
	 EOF 
;

// Rule XMemberFeatureCall
ruleXMemberFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getXPrimaryExpressionParserRuleCall_0()); 
    }
    this_XPrimaryExpression_0=ruleXPrimaryExpression
    { 
        $current = $this_XPrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((((((
)	'.' 
(
(
		ruleValidID
)
)	ruleOpSingleAssign))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXAssignmentAssignableAction_1_0_0_0_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_0_0_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getOpSingleAssignParserRuleCall_1_0_0_0_3()); 
    }
ruleOpSingleAssign
    { 
        afterParserOrEnumRuleCall();
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getValueXAssignmentParserRuleCall_1_0_1_0()); 
	    }
		lv_value_5_0=ruleXAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"XAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((((
)(	'.' 

    |(
(
	'?.' 
 

)
)
    |(
(
	'*.' 
 

)
))))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getXMemberFeatureCallAccess().getXMemberFeatureCallMemberCallTargetAction_1_1_0_0_0(),
            $current);
    }
)(	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXMemberFeatureCallAccess().getFullStopKeyword_1_1_0_0_1_0());
    }

    |(
(
		lv_nullSafe_8_0=	'?.' 
    {
        newLeafNode(lv_nullSafe_8_0, grammarAccess.getXMemberFeatureCallAccess().getNullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "nullSafe", true, "?.");
	    }

)
)
    |(
(
		lv_spreading_9_0=	'*.' 
    {
        newLeafNode(lv_spreading_9_0, grammarAccess.getXMemberFeatureCallAccess().getSpreadingAsteriskFullStopKeyword_1_1_0_0_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "spreading", true, "*.");
	    }

)
))))(	otherlv_10='<' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXMemberFeatureCallAccess().getLessThanSignKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typeArguments_11_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_11_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0()); 
	    }
		lv_typeArguments_13_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_13_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='>' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getXMemberFeatureCallAccess().getGreaterThanSignKeyword_1_1_1_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_1_1_2_0()); 
	    }
		ruleValidID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_16_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_16_0, grammarAccess.getXMemberFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXMemberFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0()); 
	    }
		lv_memberCallArguments_17_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_17_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0()); 
	    }
		lv_memberCallArguments_18_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_18_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getXMemberFeatureCallAccess().getCommaKeyword_1_1_3_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0()); 
	    }
		lv_memberCallArguments_20_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_20_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getXMemberFeatureCallAccess().getRightParenthesisKeyword_1_1_3_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXMemberFeatureCallAccess().getMemberCallArgumentsXClosureParserRuleCall_1_1_4_0()); 
	    }
		lv_memberCallArguments_22_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXMemberFeatureCallRule());
	        }
       		add(
       			$current, 
       			"memberCallArguments",
        		lv_memberCallArguments_22_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?))*)
;





// Entry rule entryRuleXPrimaryExpression
entryRuleXPrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXPrimaryExpressionRule()); }
	 iv_ruleXPrimaryExpression=ruleXPrimaryExpression 
	 { $current=$iv_ruleXPrimaryExpression.current; } 
	 EOF 
;

// Rule XPrimaryExpression
ruleXPrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXConstructorCallParserRuleCall_0()); 
    }
    this_XConstructorCall_0=ruleXConstructorCall
    { 
        $current = $this_XConstructorCall_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXBlockExpressionParserRuleCall_1()); 
    }
    this_XBlockExpression_1=ruleXBlockExpression
    { 
        $current = $this_XBlockExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXSwitchExpressionParserRuleCall_2()); 
    }
    this_XSwitchExpression_2=ruleXSwitchExpression
    { 
        $current = $this_XSwitchExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXFeatureCallParserRuleCall_3()); 
    }
    this_XFeatureCall_3=ruleXFeatureCall
    { 
        $current = $this_XFeatureCall_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXLiteralParserRuleCall_4()); 
    }
    this_XLiteral_4=ruleXLiteral
    { 
        $current = $this_XLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXIfExpressionParserRuleCall_5()); 
    }
    this_XIfExpression_5=ruleXIfExpression
    { 
        $current = $this_XIfExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXForLoopExpressionParserRuleCall_6()); 
    }
    this_XForLoopExpression_6=ruleXForLoopExpression
    { 
        $current = $this_XForLoopExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXWhileExpressionParserRuleCall_7()); 
    }
    this_XWhileExpression_7=ruleXWhileExpression
    { 
        $current = $this_XWhileExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXDoWhileExpressionParserRuleCall_8()); 
    }
    this_XDoWhileExpression_8=ruleXDoWhileExpression
    { 
        $current = $this_XDoWhileExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXThrowExpressionParserRuleCall_9()); 
    }
    this_XThrowExpression_9=ruleXThrowExpression
    { 
        $current = $this_XThrowExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXReturnExpressionParserRuleCall_10()); 
    }
    this_XReturnExpression_10=ruleXReturnExpression
    { 
        $current = $this_XReturnExpression_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXTryCatchFinallyExpressionParserRuleCall_11()); 
    }
    this_XTryCatchFinallyExpression_11=ruleXTryCatchFinallyExpression
    { 
        $current = $this_XTryCatchFinallyExpression_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXPrimaryExpressionAccess().getXParenthesizedExpressionParserRuleCall_12()); 
    }
    this_XParenthesizedExpression_12=ruleXParenthesizedExpression
    { 
        $current = $this_XParenthesizedExpression_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXLiteral
entryRuleXLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXLiteralRule()); }
	 iv_ruleXLiteral=ruleXLiteral 
	 { $current=$iv_ruleXLiteral.current; } 
	 EOF 
;

// Rule XLiteral
ruleXLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXClosureParserRuleCall_0()); 
    }
    this_XClosure_0=ruleXClosure
    { 
        $current = $this_XClosure_0.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXBooleanLiteralParserRuleCall_1()); 
    }
    this_XBooleanLiteral_1=ruleXBooleanLiteral
    { 
        $current = $this_XBooleanLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNumberLiteralParserRuleCall_2()); 
    }
    this_XNumberLiteral_2=ruleXNumberLiteral
    { 
        $current = $this_XNumberLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXNullLiteralParserRuleCall_3()); 
    }
    this_XNullLiteral_3=ruleXNullLiteral
    { 
        $current = $this_XNullLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXStringLiteralParserRuleCall_4()); 
    }
    this_XStringLiteral_4=ruleXStringLiteral
    { 
        $current = $this_XStringLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXLiteralAccess().getXTypeLiteralParserRuleCall_5()); 
    }
    this_XTypeLiteral_5=ruleXTypeLiteral
    { 
        $current = $this_XTypeLiteral_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXClosure
entryRuleXClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXClosureRule()); }
	 iv_ruleXClosure=ruleXClosure 
	 { $current=$iv_ruleXClosure.current; } 
	 EOF 
;

// Rule XClosure
ruleXClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)	'[' 
))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXClosureAccess().getLeftSquareBracketKeyword_0_0_1());
    }
))(((((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>(((
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0()); 
	    }
		lv_declaredFormalParameters_2_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_2_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXClosureAccess().getCommaKeyword_1_0_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0()); 
	    }
		lv_declaredFormalParameters_4_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_4_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_5_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_5_0, grammarAccess.getXClosureAccess().getExplicitSyntaxVerticalLineKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXClosureAccess().getExpressionXExpressionInClosureParserRuleCall_2_0()); 
	    }
		lv_expression_6_0=ruleXExpressionInClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_6_0, 
        		"XExpressionInClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXClosureAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInClosure
entryRuleXExpressionInClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInClosureRule()); }
	 iv_ruleXExpressionInClosure=ruleXExpressionInClosure 
	 { $current=$iv_ruleXExpressionInClosure.current; } 
	 EOF 
;

// Rule XExpressionInClosure
ruleXExpressionInClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXExpressionInClosureAccess().getXBlockExpressionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXExpressionInClosureAccess().getExpressionsXExpressionInsideBlockParserRuleCall_1_0_0()); 
	    }
		lv_expressions_1_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXExpressionInClosureRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_1_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXExpressionInClosureAccess().getSemicolonKeyword_1_1());
    }
)?)*)
;





// Entry rule entryRuleXShortClosure
entryRuleXShortClosure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXShortClosureRule()); }
	 iv_ruleXShortClosure=ruleXShortClosure 
	 { $current=$iv_ruleXShortClosure.current; } 
	 EOF 
;

// Rule XShortClosure
ruleXShortClosure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXShortClosureAccess().getXClosureAction_0_0_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0()); 
	    }
		lv_declaredFormalParameters_1_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_1_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXShortClosureAccess().getCommaKeyword_0_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getDeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0()); 
	    }
		lv_declaredFormalParameters_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		add(
       			$current, 
       			"declaredFormalParameters",
        		lv_declaredFormalParameters_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		lv_explicitSyntax_4_0=	'|' 
    {
        newLeafNode(lv_explicitSyntax_4_0, grammarAccess.getXShortClosureAccess().getExplicitSyntaxVerticalLineKeyword_0_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXShortClosureRule());
	        }
       		setWithLastConsumed($current, "explicitSyntax", true, "|");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getXShortClosureAccess().getExpressionXExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXShortClosureRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXParenthesizedExpression
entryRuleXParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXParenthesizedExpressionRule()); }
	 iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression 
	 { $current=$iv_ruleXParenthesizedExpression.current; } 
	 EOF 
;

// Rule XParenthesizedExpression
ruleXParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getXParenthesizedExpressionAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleXIfExpression
entryRuleXIfExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXIfExpressionRule()); }
	 iv_ruleXIfExpression=ruleXIfExpression 
	 { $current=$iv_ruleXIfExpression.current; } 
	 EOF 
;

// Rule XIfExpression
ruleXIfExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXIfExpressionAccess().getXIfExpressionAction_0(),
            $current);
    }
)	otherlv_1='if' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXIfExpressionAccess().getIfKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXIfExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getIfXExpressionParserRuleCall_3_0()); 
	    }
		lv_if_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"if",
        		lv_if_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXIfExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getThenXExpressionParserRuleCall_5_0()); 
	    }
		lv_then_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'else' 
)=>	otherlv_6='else' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXIfExpressionAccess().getElseKeyword_6_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXIfExpressionAccess().getElseXExpressionParserRuleCall_6_1_0()); 
	    }
		lv_else_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXIfExpressionRule());
	        }
       		set(
       			$current, 
       			"else",
        		lv_else_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleXSwitchExpression
entryRuleXSwitchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXSwitchExpressionRule()); }
	 iv_ruleXSwitchExpression=ruleXSwitchExpression 
	 { $current=$iv_ruleXSwitchExpression.current; } 
	 EOF 
;

// Rule XSwitchExpression
ruleXSwitchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXSwitchExpressionAccess().getXSwitchExpressionAction_0(),
            $current);
    }
)	otherlv_1='switch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXSwitchExpressionAccess().getSwitchKeyword_1());
    }
((((((
(
ruleValidID
)
)	':' 
))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_0_0_0_0_0()); 
	    }
		lv_localVarName_2_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_2_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_0_0_0_1());
    }
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_switch_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((	'(' 
(
(
ruleValidID
)
)	':' 
))=>(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXSwitchExpressionAccess().getLeftParenthesisKeyword_2_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getLocalVarNameValidIDParserRuleCall_2_1_0_0_1_0()); 
	    }
		lv_localVarName_6_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"localVarName",
        		lv_localVarName_6_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_2_1_0_0_2());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getSwitchXExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_switch_8_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_8_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getXSwitchExpressionAccess().getRightParenthesisKeyword_2_1_2());
    }
))	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getXSwitchExpressionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getCasesXCasePartParserRuleCall_4_0()); 
	    }
		lv_cases_11_0=ruleXCasePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_11_0, 
        		"XCasePart");
	        afterParserOrEnumRuleCall();
	    }

)
)+(	otherlv_12='default' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getXSwitchExpressionAccess().getDefaultKeyword_5_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXSwitchExpressionAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXSwitchExpressionAccess().getDefaultXExpressionParserRuleCall_5_2_0()); 
	    }
		lv_default_14_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXSwitchExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_14_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getXSwitchExpressionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleXCasePart
entryRuleXCasePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCasePartRule()); }
	 iv_ruleXCasePart=ruleXCasePart 
	 { $current=$iv_ruleXCasePart.current; } 
	 EOF 
;

// Rule XCasePart
ruleXCasePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getTypeGuardJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_typeGuard_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"typeGuard",
        		lv_typeGuard_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_1='case' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCasePartAccess().getCaseKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getCaseXExpressionParserRuleCall_1_1_0()); 
	    }
		lv_case_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"case",
        		lv_case_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCasePartAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCasePartAccess().getThenXExpressionParserRuleCall_3_0()); 
	    }
		lv_then_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCasePartRule());
	        }
       		set(
       			$current, 
       			"then",
        		lv_then_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXForLoopExpression
entryRuleXForLoopExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXForLoopExpressionRule()); }
	 iv_ruleXForLoopExpression=ruleXForLoopExpression 
	 { $current=$iv_ruleXForLoopExpression.current; } 
	 EOF 
;

// Rule XForLoopExpression
ruleXForLoopExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXForLoopExpressionAccess().getXForLoopExpressionAction_0(),
            $current);
    }
)	otherlv_1='for' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXForLoopExpressionAccess().getForKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXForLoopExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getDeclaredParamJvmFormalParameterParserRuleCall_3_0()); 
	    }
		lv_declaredParam_3_0=ruleJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_3_0, 
        		"JvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXForLoopExpressionAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getForExpressionXExpressionParserRuleCall_5_0()); 
	    }
		lv_forExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"forExpression",
        		lv_forExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXForLoopExpressionAccess().getRightParenthesisKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXForLoopExpressionAccess().getEachExpressionXExpressionParserRuleCall_7_0()); 
	    }
		lv_eachExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXForLoopExpressionRule());
	        }
       		set(
       			$current, 
       			"eachExpression",
        		lv_eachExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXWhileExpression
entryRuleXWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXWhileExpressionRule()); }
	 iv_ruleXWhileExpression=ruleXWhileExpression 
	 { $current=$iv_ruleXWhileExpression.current; } 
	 EOF 
;

// Rule XWhileExpression
ruleXWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXWhileExpressionAccess().getXWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='while' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXWhileExpressionAccess().getWhileKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXWhileExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getPredicateXExpressionParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXWhileExpressionAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXWhileExpressionAccess().getBodyXExpressionParserRuleCall_5_0()); 
	    }
		lv_body_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXDoWhileExpression
entryRuleXDoWhileExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXDoWhileExpressionRule()); }
	 iv_ruleXDoWhileExpression=ruleXDoWhileExpression 
	 { $current=$iv_ruleXDoWhileExpression.current; } 
	 EOF 
;

// Rule XDoWhileExpression
ruleXDoWhileExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXDoWhileExpressionAccess().getXDoWhileExpressionAction_0(),
            $current);
    }
)	otherlv_1='do' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDoWhileExpressionAccess().getDoKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getBodyXExpressionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='while' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXDoWhileExpressionAccess().getWhileKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXDoWhileExpressionAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDoWhileExpressionAccess().getPredicateXExpressionParserRuleCall_5_0()); 
	    }
		lv_predicate_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDoWhileExpressionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXDoWhileExpressionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleXBlockExpression
entryRuleXBlockExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBlockExpressionRule()); }
	 iv_ruleXBlockExpression=ruleXBlockExpression 
	 { $current=$iv_ruleXBlockExpression.current; } 
	 EOF 
;

// Rule XBlockExpression
ruleXBlockExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBlockExpressionAccess().getXBlockExpressionAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBlockExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXBlockExpressionAccess().getExpressionsXExpressionInsideBlockParserRuleCall_2_0_0()); 
	    }
		lv_expressions_2_0=ruleXExpressionInsideBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXBlockExpressionRule());
	        }
       		add(
       			$current, 
       			"expressions",
        		lv_expressions_2_0, 
        		"XExpressionInsideBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXBlockExpressionAccess().getSemicolonKeyword_2_1());
    }
)?)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXBlockExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleXExpressionInsideBlock
entryRuleXExpressionInsideBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXExpressionInsideBlockRule()); }
	 iv_ruleXExpressionInsideBlock=ruleXExpressionInsideBlock 
	 { $current=$iv_ruleXExpressionInsideBlock.current; } 
	 EOF 
;

// Rule XExpressionInsideBlock
ruleXExpressionInsideBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXVariableDeclarationParserRuleCall_0()); 
    }
    this_XVariableDeclaration_0=ruleXVariableDeclaration
    { 
        $current = $this_XVariableDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXExpressionInsideBlockAccess().getXExpressionParserRuleCall_1()); 
    }
    this_XExpression_1=ruleXExpression
    { 
        $current = $this_XExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXVariableDeclaration
entryRuleXVariableDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXVariableDeclarationRule()); }
	 iv_ruleXVariableDeclaration=ruleXVariableDeclaration 
	 { $current=$iv_ruleXVariableDeclaration.current; } 
	 EOF 
;

// Rule XVariableDeclaration
ruleXVariableDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXVariableDeclarationAccess().getXVariableDeclarationAction_0(),
            $current);
    }
)((
(
		lv_writeable_1_0=	'var' 
    {
        newLeafNode(lv_writeable_1_0, grammarAccess.getXVariableDeclarationAccess().getWriteableVarKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXVariableDeclarationRule());
	        }
       		setWithLastConsumed($current, "writeable", true, "var");
	    }

)
)
    |	otherlv_2='val' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXVariableDeclarationAccess().getValKeyword_1_1());
    }
)(((((
(
ruleJvmTypeReference
)
)(
(
ruleValidID
)
)))=>((
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getTypeJvmTypeReferenceParserRuleCall_2_0_0_0_0()); 
	    }
		lv_type_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_0_0_1_0()); 
	    }
		lv_name_4_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getNameValidIDParserRuleCall_2_1_0()); 
	    }
		lv_name_5_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXVariableDeclarationAccess().getEqualsSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXVariableDeclarationAccess().getRightXExpressionParserRuleCall_3_1_0()); 
	    }
		lv_right_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXVariableDeclarationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmFormalParameter
entryRuleJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmFormalParameterRule()); }
	 iv_ruleJvmFormalParameter=ruleJvmFormalParameter 
	 { $current=$iv_ruleJvmFormalParameter.current; } 
	 EOF 
;

// Rule JvmFormalParameter
ruleJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFullJvmFormalParameter
entryRuleFullJvmFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullJvmFormalParameterRule()); }
	 iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter 
	 { $current=$iv_ruleFullJvmFormalParameter.current; } 
	 EOF 
;

// Rule FullJvmFormalParameter
ruleFullJvmFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getParameterTypeJvmTypeReferenceParserRuleCall_0_0()); 
	    }
		lv_parameterType_0_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"parameterType",
        		lv_parameterType_0_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFullJvmFormalParameterAccess().getNameValidIDParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleValidID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFullJvmFormalParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ValidID");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXFeatureCall
entryRuleXFeatureCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFeatureCallRule()); }
	 iv_ruleXFeatureCall=ruleXFeatureCall 
	 { $current=$iv_ruleXFeatureCall.current; } 
	 EOF 
;

// Rule XFeatureCall
ruleXFeatureCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXFeatureCallAccess().getXFeatureCallAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getDeclaringTypeJvmDeclaredTypeCrossReference_1_0()); 
	    }
		ruleStaticQualifier		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFeatureCallAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_1_0()); 
	    }
		lv_typeArguments_3_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_3_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFeatureCallAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_2_2_1_0()); 
	    }
		lv_typeArguments_5_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_5_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXFeatureCallAccess().getGreaterThanSignKeyword_2_3());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureJvmIdentifiableElementCrossReference_3_0()); 
	    }
		ruleIdOrSuper		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
	'(' 
 

)
)=>
(
		lv_explicitOperationCall_8_0=	'(' 
    {
        newLeafNode(lv_explicitOperationCall_8_0, grammarAccess.getXFeatureCallAccess().getExplicitOperationCallLeftParenthesisKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXFeatureCallRule());
	        }
       		setWithLastConsumed($current, "explicitOperationCall", true, "(");
	    }

)
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_featureCallArguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_featureCallArguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXFeatureCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_featureCallArguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXFeatureCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXFeatureCallAccess().getFeatureCallArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_featureCallArguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFeatureCallRule());
	        }
       		add(
       			$current, 
       			"featureCallArguments",
        		lv_featureCallArguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleIdOrSuper
entryRuleIdOrSuper returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdOrSuperRule()); } 
	 iv_ruleIdOrSuper=ruleIdOrSuper 
	 { $current=$iv_ruleIdOrSuper.current.getText(); }  
	 EOF 
;

// Rule IdOrSuper
ruleIdOrSuper returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getIdOrSuperAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='super' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIdOrSuperAccess().getSuperKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleStaticQualifier
entryRuleStaticQualifier returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStaticQualifierRule()); } 
	 iv_ruleStaticQualifier=ruleStaticQualifier 
	 { $current=$iv_ruleStaticQualifier.current.getText(); }  
	 EOF 
;

// Rule StaticQualifier
ruleStaticQualifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStaticQualifierAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStaticQualifierAccess().getColonColonKeyword_1()); 
    }
)+
    ;





// Entry rule entryRuleXConstructorCall
entryRuleXConstructorCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXConstructorCallRule()); }
	 iv_ruleXConstructorCall=ruleXConstructorCall 
	 { $current=$iv_ruleXConstructorCall.current; } 
	 EOF 
;

// Rule XConstructorCall
ruleXConstructorCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXConstructorCallAccess().getXConstructorCallAction_0(),
            $current);
    }
)	otherlv_1='new' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXConstructorCallAccess().getNewKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXConstructorCallRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getConstructorJvmConstructorCrossReference_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXConstructorCallAccess().getLessThanSignKeyword_3_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0()); 
	    }
		lv_typeArguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXConstructorCallAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getTypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0()); 
	    }
		lv_typeArguments_6_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"typeArguments",
        		lv_typeArguments_6_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getXConstructorCallAccess().getGreaterThanSignKeyword_3_3());
    }
)?(((	'(' 
)=>	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getXConstructorCallAccess().getLeftParenthesisKeyword_4_0());
    }
)(((((
)((
(
ruleJvmFormalParameter
)
)(	',' 
(
(
ruleJvmFormalParameter
)
))*)?(
(
	'|' 
 

)
)))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXShortClosureParserRuleCall_4_1_0_0()); 
	    }
		lv_arguments_9_0=ruleXShortClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_9_0, 
        		"XShortClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_0_0()); 
	    }
		lv_arguments_10_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_10_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getXConstructorCallAccess().getCommaKeyword_4_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXExpressionParserRuleCall_4_1_1_1_1_0()); 
	    }
		lv_arguments_12_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_12_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getXConstructorCallAccess().getRightParenthesisKeyword_4_2());
    }
)?((((
)	'[' 
))=>
(
		{ 
	        newCompositeNode(grammarAccess.getXConstructorCallAccess().getArgumentsXClosureParserRuleCall_5_0()); 
	    }
		lv_arguments_14_0=ruleXClosure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXConstructorCallRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_14_0, 
        		"XClosure");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXBooleanLiteral
entryRuleXBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXBooleanLiteralRule()); }
	 iv_ruleXBooleanLiteral=ruleXBooleanLiteral 
	 { $current=$iv_ruleXBooleanLiteral.current; } 
	 EOF 
;

// Rule XBooleanLiteral
ruleXBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXBooleanLiteralAccess().getXBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getXBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleXNullLiteral
entryRuleXNullLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNullLiteralRule()); }
	 iv_ruleXNullLiteral=ruleXNullLiteral 
	 { $current=$iv_ruleXNullLiteral.current; } 
	 EOF 
;

// Rule XNullLiteral
ruleXNullLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNullLiteralAccess().getXNullLiteralAction_0(),
            $current);
    }
)	otherlv_1='null' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXNullLiteralAccess().getNullKeyword_1());
    }
)
;





// Entry rule entryRuleXNumberLiteral
entryRuleXNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXNumberLiteralRule()); }
	 iv_ruleXNumberLiteral=ruleXNumberLiteral 
	 { $current=$iv_ruleXNumberLiteral.current; } 
	 EOF 
;

// Rule XNumberLiteral
ruleXNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXNumberLiteralAccess().getXNumberLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXNumberLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXStringLiteral
entryRuleXStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXStringLiteralRule()); }
	 iv_ruleXStringLiteral=ruleXStringLiteral 
	 { $current=$iv_ruleXStringLiteral.current; } 
	 EOF 
;

// Rule XStringLiteral
ruleXStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXStringLiteralAccess().getXStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getXStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleXTypeLiteral
entryRuleXTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTypeLiteralRule()); }
	 iv_ruleXTypeLiteral=ruleXTypeLiteral 
	 { $current=$iv_ruleXTypeLiteral.current; } 
	 EOF 
;

// Rule XTypeLiteral
ruleXTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTypeLiteralAccess().getXTypeLiteralAction_0(),
            $current);
    }
)	otherlv_1='typeof' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTypeLiteralAccess().getTypeofKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXTypeLiteralAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXTypeLiteralRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXTypeLiteralAccess().getTypeJvmTypeCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTypeLiteralAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleXThrowExpression
entryRuleXThrowExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXThrowExpressionRule()); }
	 iv_ruleXThrowExpression=ruleXThrowExpression 
	 { $current=$iv_ruleXThrowExpression.current; } 
	 EOF 
;

// Rule XThrowExpression
ruleXThrowExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXThrowExpressionAccess().getXThrowExpressionAction_0(),
            $current);
    }
)	otherlv_1='throw' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXThrowExpressionAccess().getThrowKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXThrowExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXThrowExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXReturnExpression
entryRuleXReturnExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXReturnExpressionRule()); }
	 iv_ruleXReturnExpression=ruleXReturnExpression 
	 { $current=$iv_ruleXReturnExpression.current; } 
	 EOF 
;

// Rule XReturnExpression
ruleXReturnExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXReturnExpressionAccess().getXReturnExpressionAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXReturnExpressionAccess().getReturnKeyword_1());
    }
((
(
ruleXExpression
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXReturnExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXReturnExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleXTryCatchFinallyExpression
entryRuleXTryCatchFinallyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionRule()); }
	 iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression 
	 { $current=$iv_ruleXTryCatchFinallyExpression.current; } 
	 EOF 
;

// Rule XTryCatchFinallyExpression
ruleXTryCatchFinallyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getXTryCatchFinallyExpressionAccess().getXTryCatchFinallyExpressionAction_0(),
            $current);
    }
)	otherlv_1='try' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXTryCatchFinallyExpressionAccess().getTryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getExpressionXExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((((	'catch' 
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getCatchClausesXCatchClauseParserRuleCall_3_0_0_0()); 
	    }
		lv_catchClauses_3_0=ruleXCatchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		add(
       			$current, 
       			"catchClauses",
        		lv_catchClauses_3_0, 
        		"XCatchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)+(((	'finally' 
)=>	otherlv_4='finally' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_0_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_0_1_1_0()); 
	    }
		lv_finallyExpression_5_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_5_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(	otherlv_6='finally' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXTryCatchFinallyExpressionAccess().getFinallyExpressionXExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_finallyExpression_7_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXTryCatchFinallyExpressionRule());
	        }
       		set(
       			$current, 
       			"finallyExpression",
        		lv_finallyExpression_7_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleXCatchClause
entryRuleXCatchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXCatchClauseRule()); }
	 iv_ruleXCatchClause=ruleXCatchClause 
	 { $current=$iv_ruleXCatchClause.current; } 
	 EOF 
;

// Rule XCatchClause
ruleXCatchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'catch' 
)=>	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXCatchClauseAccess().getCatchKeyword_0());
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXCatchClauseAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getDeclaredParamFullJvmFormalParameterParserRuleCall_2_0()); 
	    }
		lv_declaredParam_2_0=ruleFullJvmFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"declaredParam",
        		lv_declaredParam_2_0, 
        		"FullJvmFormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getXCatchClauseAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXCatchClauseAccess().getExpressionXExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleXExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXCatchClauseRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"XExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); 
    }
    this_ValidID_0=ruleValidID    {
		$current.merge(this_ValidID_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(((
	'.' 
)=>
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
)
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); 
    }
    this_ValidID_2=ruleValidID    {
		$current.merge(this_ValidID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_HEX_0=RULE_HEX    {
		$current.merge(this_HEX_0);
    }

    { 
    newLeafNode(this_HEX_0, grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); 
    }

    |((    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); 
    }

    |    this_DECIMAL_2=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_2);
    }

    { 
    newLeafNode(this_DECIMAL_2, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); 
    }
(    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); 
    }

    |    this_DECIMAL_5=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_5);
    }

    { 
    newLeafNode(this_DECIMAL_5, grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); 
    }
))?))
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleJvmTypeReference
entryRuleJvmTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmTypeReferenceRule()); }
	 iv_ruleJvmTypeReference=ruleJvmTypeReference 
	 { $current=$iv_ruleJvmTypeReference.current; } 
	 EOF 
;

// Rule JvmTypeReference
ruleJvmTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getJvmParameterizedTypeReferenceParserRuleCall_0_0()); 
    }
    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference
    { 
        $current = $this_JvmParameterizedTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }
((((
)	'[' 
	']' 
))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getJvmTypeReferenceAccess().getJvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJvmTypeReferenceAccess().getLeftSquareBracketKeyword_0_1_0_1());
    }
	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmTypeReferenceAccess().getRightSquareBracketKeyword_0_1_0_2());
    }
))*)
    |
    { 
        newCompositeNode(grammarAccess.getJvmTypeReferenceAccess().getXFunctionTypeRefParserRuleCall_1()); 
    }
    this_XFunctionTypeRef_4=ruleXFunctionTypeRef
    { 
        $current = $this_XFunctionTypeRef_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXFunctionTypeRef
entryRuleXFunctionTypeRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXFunctionTypeRefRule()); }
	 iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef 
	 { $current=$iv_ruleXFunctionTypeRef.current; } 
	 EOF 
;

// Rule XFunctionTypeRef
ruleXFunctionTypeRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXFunctionTypeRefAccess().getLeftParenthesisKeyword_0_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0()); 
	    }
		lv_paramTypes_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXFunctionTypeRefAccess().getCommaKeyword_0_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0()); 
	    }
		lv_paramTypes_3_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		add(
       			$current, 
       			"paramTypes",
        		lv_paramTypes_3_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXFunctionTypeRefAccess().getRightParenthesisKeyword_0_2());
    }
)?	otherlv_5='=>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getXFunctionTypeRefAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXFunctionTypeRefAccess().getReturnTypeJvmTypeReferenceParserRuleCall_2_0()); 
	    }
		lv_returnType_6_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXFunctionTypeRefRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmParameterizedTypeReference
entryRuleJvmParameterizedTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceRule()); }
	 iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference 
	 { $current=$iv_ruleJvmParameterizedTypeReference.current; } 
	 EOF 
;

// Rule JvmParameterizedTypeReference
ruleJvmParameterizedTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getTypeJvmTypeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(((	'<' 
)=>	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmParameterizedTypeReferenceAccess().getLessThanSignKeyword_1_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0()); 
	    }
		lv_arguments_2_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJvmParameterizedTypeReferenceAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmParameterizedTypeReferenceAccess().getArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0()); 
	    }
		lv_arguments_4_0=ruleJvmArgumentTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmParameterizedTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"JvmArgumentTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJvmParameterizedTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
    }
)?)
;





// Entry rule entryRuleJvmArgumentTypeReference
entryRuleJvmArgumentTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceRule()); }
	 iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference 
	 { $current=$iv_ruleJvmArgumentTypeReference.current; } 
	 EOF 
;

// Rule JvmArgumentTypeReference
ruleJvmArgumentTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmTypeReferenceParserRuleCall_0()); 
    }
    this_JvmTypeReference_0=ruleJvmTypeReference
    { 
        $current = $this_JvmTypeReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getJvmArgumentTypeReferenceAccess().getJvmWildcardTypeReferenceParserRuleCall_1()); 
    }
    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference
    { 
        $current = $this_JvmWildcardTypeReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJvmWildcardTypeReference
entryRuleJvmWildcardTypeReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceRule()); }
	 iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference 
	 { $current=$iv_ruleJvmWildcardTypeReference.current; } 
	 EOF 
;

// Rule JvmWildcardTypeReference
ruleJvmWildcardTypeReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJvmWildcardTypeReferenceAccess().getJvmWildcardTypeReferenceAction_0(),
            $current);
    }
)	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJvmWildcardTypeReferenceAccess().getQuestionMarkKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmUpperBoundParserRuleCall_2_0_0()); 
	    }
		lv_constraints_2_0=ruleJvmUpperBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_2_0, 
        		"JvmUpperBound");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmWildcardTypeReferenceAccess().getConstraintsJvmLowerBoundParserRuleCall_2_1_0()); 
	    }
		lv_constraints_3_0=ruleJvmLowerBound		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmWildcardTypeReferenceRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_3_0, 
        		"JvmLowerBound");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleJvmUpperBound
entryRuleJvmUpperBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundRule()); }
	 iv_ruleJvmUpperBound=ruleJvmUpperBound 
	 { $current=$iv_ruleJvmUpperBound.current; } 
	 EOF 
;

// Rule JvmUpperBound
ruleJvmUpperBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAccess().getExtendsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmUpperBoundAnded
entryRuleJvmUpperBoundAnded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmUpperBoundAndedRule()); }
	 iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded 
	 { $current=$iv_ruleJvmUpperBoundAnded.current; } 
	 EOF 
;

// Rule JvmUpperBoundAnded
ruleJvmUpperBoundAnded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='&' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmUpperBoundAndedAccess().getAmpersandKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmUpperBoundAndedAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmUpperBoundAndedRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleJvmLowerBound
entryRuleJvmLowerBound returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJvmLowerBoundRule()); }
	 iv_ruleJvmLowerBound=ruleJvmLowerBound 
	 { $current=$iv_ruleJvmLowerBound.current; } 
	 EOF 
;

// Rule JvmLowerBound
ruleJvmLowerBound returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJvmLowerBoundAccess().getSuperKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJvmLowerBoundAccess().getTypeReferenceJvmTypeReferenceParserRuleCall_1_0()); 
	    }
		lv_typeReference_1_0=ruleJvmTypeReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJvmLowerBoundRule());
	        }
       		set(
       			$current, 
       			"typeReference",
        		lv_typeReference_1_0, 
        		"JvmTypeReference");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleValidID
entryRuleValidID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValidIDRule()); } 
	 iv_ruleValidID=ruleValidID 
	 { $current=$iv_ruleValidID.current.getText(); }  
	 EOF 
;

// Rule ValidID
ruleValidID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getValidIDAccess().getIDTerminalRuleCall()); 
    }

    ;





RULE_ANY_OTHER : '$$$$$$$$';

RULE_ON_OFF : ('ON'|'OFF');

RULE_STATEMEN_TYPE : ('QRY'|'CRUD'|'CALL');

RULE_MAPPING_TYPE : 'OUT';

RULE_OPTION_TYPE : ('OPT'|'LOPT'|'IOPT'|'SOPT'|'BOPT');

RULE_IDENT_DOT : RULE_IDENT ('.' RULE_IDENT)+;

RULE_IDENT : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'=')*;

RULE__NUMBER : ('0'..'9')+;

RULE_ESC_CHAR : '\\' (RULE_COLON|RULE_SEMICOLON|RULE_STRING|RULE_LBRACE|RULE_RBRACE|RULE_BOR|RULE_HASH|RULE_AT|RULE_PERCENT|'/');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\n'|'\r')+;

RULE_AND : '&' '&' '&';

RULE_OR : '|' '|' '|';

RULE_COLON : ':';

RULE_SEMICOLON : ';';

RULE_STRING : '$';

RULE_COMMA : ',';

RULE_MINUS : '-';

RULE_PLUS : '+';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACE : '{';

RULE_RBRACE : '}';

RULE_QUESTI : '?';

RULE_NOT : '!';

RULE_BAND : '&';

RULE_BOR : '|';

RULE_HASH : '#';

RULE_AT : '@';

RULE_CARET : '^';

RULE_EQUALS : '=';

RULE_LESS_THAN : '<';

RULE_MORE_THAN : '>';

RULE_PERCENT : '%';

RULE_REST : ~(RULE_SEMICOLON);

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'$'|'_') ('a'..'z'|'A'..'Z'|'$'|'_'|'0'..'9')*;


