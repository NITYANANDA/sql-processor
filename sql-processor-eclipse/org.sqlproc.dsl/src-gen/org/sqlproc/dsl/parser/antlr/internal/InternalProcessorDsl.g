/*
* generated by Xtext
*/
grammar InternalProcessorDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.sqlproc.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.sqlproc.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sqlproc.dsl.services.ProcessorDslGrammarAccess;

}

@parser::members {

 	private ProcessorDslGrammarAccess grammarAccess;
 	
    public InternalProcessorDslParser(TokenStream input, ProcessorDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Artifacts";	
   	}
   	
   	@Override
   	protected ProcessorDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleArtifacts
entryRuleArtifacts returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactsRule()); }
	 iv_ruleArtifacts=ruleArtifacts 
	 { $current=$iv_ruleArtifacts.current; } 
	 EOF 
;

// Rule Artifacts
ruleArtifacts returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_0()); 
    }
)*(((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getFeaturesOptionalFeatureParserRuleCall_1_0_0_0()); 
	    }
		lv_features_1_0=ruleOptionalFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_1_0, 
        		"OptionalFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_0_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getStatementsMetaStatementParserRuleCall_1_1_0_0()); 
	    }
		lv_statements_3_0=ruleMetaStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_3_0, 
        		"MetaStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_1_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getMappingsMappingRuleParserRuleCall_1_2_0_0()); 
	    }
		lv_mappings_5_0=ruleMappingRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"mappings",
        		lv_mappings_5_0, 
        		"MappingRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_2_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getPojosPojoDefinitionParserRuleCall_1_3_0_0()); 
	    }
		lv_pojos_7_0=rulePojoDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"pojos",
        		lv_pojos_7_0, 
        		"PojoDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_8=RULE_WS
    { 
    newLeafNode(this_WS_8, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_3_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getUsagesPojoUsageParserRuleCall_1_4_0_0()); 
	    }
		lv_usages_9_0=rulePojoUsage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"usages",
        		lv_usages_9_0, 
        		"PojoUsage");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_10=RULE_WS
    { 
    newLeafNode(this_WS_10, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_4_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getPropertiesPropertyParserRuleCall_1_5_0_0()); 
	    }
		lv_properties_11_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_11_0, 
        		"Property");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_12=RULE_WS
    { 
    newLeafNode(this_WS_12, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_5_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getTablesTableDefinitionParserRuleCall_1_6_0_0()); 
	    }
		lv_tables_13_0=ruleTableDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"tables",
        		lv_tables_13_0, 
        		"TableDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_14=RULE_WS
    { 
    newLeafNode(this_WS_14, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_6_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getTableUsagesTableUsageParserRuleCall_1_7_0_0()); 
	    }
		lv_tableUsages_15_0=ruleTableUsage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"tableUsages",
        		lv_tableUsages_15_0, 
        		"TableUsage");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_16=RULE_WS
    { 
    newLeafNode(this_WS_16, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_7_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getPojoPackagesPackageDeclarationParserRuleCall_1_8_0_0()); 
	    }
		lv_pojoPackages_17_0=rulePackageDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"pojoPackages",
        		lv_pojoPackages_17_0, 
        		"PackageDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_18=RULE_WS
    { 
    newLeafNode(this_WS_18, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_8_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getUsagesExtPojoUsageExtParserRuleCall_1_9_0_0()); 
	    }
		lv_usagesExt_19_0=rulePojoUsageExt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"usagesExt",
        		lv_usagesExt_19_0, 
        		"PojoUsageExt");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_20=RULE_WS
    { 
    newLeafNode(this_WS_20, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_9_1()); 
    }
)*))+)
;





// Entry rule entryRuleSqlTypeAssignement
entryRuleSqlTypeAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlTypeAssignementRule()); }
	 iv_ruleSqlTypeAssignement=ruleSqlTypeAssignement 
	 { $current=$iv_ruleSqlTypeAssignement.current; } 
	 EOF 
;

// Rule SqlTypeAssignement
ruleSqlTypeAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_typeName_0_0=RULE_IDENT
		{
			newLeafNode(lv_typeName_0_0, grammarAccess.getSqlTypeAssignementAccess().getTypeNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqlTypeAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"typeName",
        		lv_typeName_0_0, 
        		"IDENT");
	    }

)
)(this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getSqlTypeAssignementAccess().getLPARENTerminalRuleCall_1_0()); 
    }
(
(
		lv_size_2_0=RULE_NUMBER
		{
			newLeafNode(lv_size_2_0, grammarAccess.getSqlTypeAssignementAccess().getSizeNUMBERTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSqlTypeAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_2_0, 
        		"NUMBER");
	    }

)
)this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getSqlTypeAssignementAccess().getRPARENTerminalRuleCall_1_2()); 
    }
)?	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSqlTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlTypeAssignementAccess().getTypePojoTypeParserRuleCall_3_0()); 
	    }
		lv_type_5_0=rulePojoType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlTypeAssignementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"PojoType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleColumnTypeAssignement
entryRuleColumnTypeAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnTypeAssignementRule()); }
	 iv_ruleColumnTypeAssignement=ruleColumnTypeAssignement 
	 { $current=$iv_ruleColumnTypeAssignement.current; } 
	 EOF 
;

// Rule ColumnTypeAssignement
ruleColumnTypeAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dbColumn_0_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumn_0_0, grammarAccess.getColumnTypeAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnTypeAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbColumn",
        		lv_dbColumn_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getColumnTypeAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getColumnTypeAssignementAccess().getTypePojoTypeParserRuleCall_2_0()); 
	    }
		lv_type_2_0=rulePojoType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColumnTypeAssignementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"PojoType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTableAssignement
entryRuleTableAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableAssignementRule()); }
	 iv_ruleTableAssignement=ruleTableAssignement 
	 { $current=$iv_ruleTableAssignement.current; } 
	 EOF 
;

// Rule TableAssignement
ruleTableAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dbTable_0_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_0_0, grammarAccess.getTableAssignementAccess().getDbTableIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_newName_2_0=RULE_IDENT
		{
			newLeafNode(lv_newName_2_0, grammarAccess.getTableAssignementAccess().getNewNameIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_2_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRuleColumnAssignement
entryRuleColumnAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnAssignementRule()); }
	 iv_ruleColumnAssignement=ruleColumnAssignement 
	 { $current=$iv_ruleColumnAssignement.current; } 
	 EOF 
;

// Rule ColumnAssignement
ruleColumnAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dbColumn_0_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumn_0_0, grammarAccess.getColumnAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbColumn",
        		lv_dbColumn_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getColumnAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_newName_2_0=RULE_IDENT
		{
			newLeafNode(lv_newName_2_0, grammarAccess.getColumnAssignementAccess().getNewNameIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_2_0, 
        		"IDENT");
	    }

)
))
;





// Entry rule entryRuleImportAssignement
entryRuleImportAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportAssignementRule()); }
	 iv_ruleImportAssignement=ruleImportAssignement 
	 { $current=$iv_ruleImportAssignement.current; } 
	 EOF 
;

// Rule ImportAssignement
ruleImportAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dbColumn_0_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumn_0_0, grammarAccess.getImportAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbColumn",
        		lv_dbColumn_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_pkTable_2_0=RULE_IDENT
		{
			newLeafNode(lv_pkTable_2_0, grammarAccess.getImportAssignementAccess().getPkTableIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pkTable",
        		lv_pkTable_2_0, 
        		"IDENT");
	    }

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getImportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
(
(
		lv_pkColumn_4_0=RULE_IDENT
		{
			newLeafNode(lv_pkColumn_4_0, grammarAccess.getImportAssignementAccess().getPkColumnIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pkColumn",
        		lv_pkColumn_4_0, 
        		"IDENT");
	    }

)
))?)
;





// Entry rule entryRuleExportAssignement
entryRuleExportAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExportAssignementRule()); }
	 iv_ruleExportAssignement=ruleExportAssignement 
	 { $current=$iv_ruleExportAssignement.current; } 
	 EOF 
;

// Rule ExportAssignement
ruleExportAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dbColumn_0_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumn_0_0, grammarAccess.getExportAssignementAccess().getDbColumnIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExportAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbColumn",
        		lv_dbColumn_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_fkTable_2_0=RULE_IDENT
		{
			newLeafNode(lv_fkTable_2_0, grammarAccess.getExportAssignementAccess().getFkTableIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExportAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fkTable",
        		lv_fkTable_2_0, 
        		"IDENT");
	    }

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExportAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
(
(
		lv_fkColumn_4_0=RULE_IDENT
		{
			newLeafNode(lv_fkColumn_4_0, grammarAccess.getExportAssignementAccess().getFkColumnIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExportAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fkColumn",
        		lv_fkColumn_4_0, 
        		"IDENT");
	    }

)
))?)
;





// Entry rule entryRuleInheritanceAssignement
entryRuleInheritanceAssignement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInheritanceAssignementRule()); }
	 iv_ruleInheritanceAssignement=ruleInheritanceAssignement 
	 { $current=$iv_ruleInheritanceAssignement.current; } 
	 EOF 
;

// Rule InheritanceAssignement
ruleInheritanceAssignement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_discriminator_0_0=RULE_IDENT
		{
			newLeafNode(lv_discriminator_0_0, grammarAccess.getInheritanceAssignementAccess().getDiscriminatorIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInheritanceAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"discriminator",
        		lv_discriminator_0_0, 
        		"IDENT");
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInheritanceAssignementAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_dbTable_2_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_2_0, grammarAccess.getInheritanceAssignementAccess().getDbTableIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInheritanceAssignementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_2_0, 
        		"IDENT");
	    }

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInheritanceAssignementAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
(
(
		lv_dbColumns_4_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumns_4_0, grammarAccess.getInheritanceAssignementAccess().getDbColumnsIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInheritanceAssignementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dbColumns",
        		lv_dbColumns_4_0, 
        		"IDENT");
	    }

)
))+)
;





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'resolve references' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPropertyAccess().getNameResolveReferencesKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "resolve references");
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_0_1()); 
    }
)+(
(
		lv_doResolvePojo_2_0=RULE_ON_OFF
		{
			newLeafNode(lv_doResolvePojo_2_0, grammarAccess.getPropertyAccess().getDoResolvePojoON_OFFTerminalRuleCall_0_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"doResolvePojo",
        		lv_doResolvePojo_2_0, 
        		"ON_OFF");
	    }

)
))
    |((
(
		lv_name_3_0=	'database' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getPropertyAccess().getNameDatabaseKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "database");
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_1_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getDatabaseDatabasePropertyParserRuleCall_0_1_2_0()); 
	    }
		lv_database_5_0=ruleDatabaseProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"database",
        		lv_database_5_0, 
        		"DatabaseProperty");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_6_0=	'pojogen' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getPropertyAccess().getNamePojogenKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "pojogen");
	    }

)
)(this_WS_7=RULE_WS
    { 
    newLeafNode(this_WS_7, grammarAccess.getPropertyAccess().getWSTerminalRuleCall_0_2_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyAccess().getPojogenPojogenPropertyParserRuleCall_0_2_2_0()); 
	    }
		lv_pojogen_8_0=rulePojogenProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyRule());
	        }
       		set(
       			$current, 
       			"pojogen",
        		lv_pojogen_8_0, 
        		"PojogenProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)))this_SEMICOLON_9=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_9, grammarAccess.getPropertyAccess().getSEMICOLONTerminalRuleCall_1()); 
    }
)
;





// Entry rule entryRuleDatabaseProperty
entryRuleDatabaseProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabasePropertyRule()); }
	 iv_ruleDatabaseProperty=ruleDatabaseProperty 
	 { $current=$iv_ruleDatabaseProperty.current; } 
	 EOF 
;

// Rule DatabaseProperty
ruleDatabaseProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'online' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getDatabasePropertyAccess().getNameOnlineKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "online");
	    }

)
)(this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_0_1()); 
    }
)+(
(
		lv_doResolveDb_2_0=RULE_ON_OFF
		{
			newLeafNode(lv_doResolveDb_2_0, grammarAccess.getDatabasePropertyAccess().getDoResolveDbON_OFFTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"doResolveDb",
        		lv_doResolveDb_2_0, 
        		"ON_OFF");
	    }

)
))
    |((
(
		lv_name_3_0=	'url' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getDatabasePropertyAccess().getNameUrlKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "url");
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_1_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbUrlPropertyValueParserRuleCall_1_2_0()); 
	    }
		lv_dbUrl_5_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
	        }
       		set(
       			$current, 
       			"dbUrl",
        		lv_dbUrl_5_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_6_0=	'username' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getDatabasePropertyAccess().getNameUsernameKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "username");
	    }

)
)(this_WS_7=RULE_WS
    { 
    newLeafNode(this_WS_7, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_2_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbUsernamePropertyValueParserRuleCall_2_2_0()); 
	    }
		lv_dbUsername_8_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
	        }
       		set(
       			$current, 
       			"dbUsername",
        		lv_dbUsername_8_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_9_0=	'password' 
    {
        newLeafNode(lv_name_9_0, grammarAccess.getDatabasePropertyAccess().getNamePasswordKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_9_0, "password");
	    }

)
)(this_WS_10=RULE_WS
    { 
    newLeafNode(this_WS_10, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_3_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbPasswordPropertyValueParserRuleCall_3_2_0()); 
	    }
		lv_dbPassword_11_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
	        }
       		set(
       			$current, 
       			"dbPassword",
        		lv_dbPassword_11_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_12_0=	'schema' 
    {
        newLeafNode(lv_name_12_0, grammarAccess.getDatabasePropertyAccess().getNameSchemaKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_12_0, "schema");
	    }

)
)(this_WS_13=RULE_WS
    { 
    newLeafNode(this_WS_13, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_4_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbSchemaPropertyValueParserRuleCall_4_2_0()); 
	    }
		lv_dbSchema_14_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
	        }
       		set(
       			$current, 
       			"dbSchema",
        		lv_dbSchema_14_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_15_0=	'driver' 
    {
        newLeafNode(lv_name_15_0, grammarAccess.getDatabasePropertyAccess().getNameDriverKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabasePropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_15_0, "driver");
	    }

)
)(this_WS_16=RULE_WS
    { 
    newLeafNode(this_WS_16, grammarAccess.getDatabasePropertyAccess().getWSTerminalRuleCall_5_1()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabasePropertyAccess().getDbDriverPropertyValueParserRuleCall_5_2_0()); 
	    }
		lv_dbDriver_17_0=rulePropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabasePropertyRule());
	        }
       		set(
       			$current, 
       			"dbDriver",
        		lv_dbDriver_17_0, 
        		"PropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePojogenProperty
entryRulePojogenProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojogenPropertyRule()); }
	 iv_rulePojogenProperty=rulePojogenProperty 
	 { $current=$iv_rulePojogenProperty.current; } 
	 EOF 
;

// Rule PojogenProperty
rulePojogenProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'types sqltypes' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getPojogenPropertyAccess().getNameTypesSqltypesKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "types sqltypes");
	    }

)
)((this_WS_1=RULE_WS
    { 
    newLeafNode(this_WS_1, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_0_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getSqlTypesSqlTypeAssignementParserRuleCall_0_1_1_0()); 
	    }
		lv_sqlTypes_2_0=ruleSqlTypeAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"sqlTypes",
        		lv_sqlTypes_2_0, 
        		"SqlTypeAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_3_0=	'types in table' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getPojogenPropertyAccess().getNameTypesInTableKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "types in table");
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_1_1()); 
    }
)+(
(
		lv_dbTable_5_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_5_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_5_0, 
        		"IDENT");
	    }

)
)((this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_1_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getSqlTypesSqlTypeAssignementParserRuleCall_1_3_1_0()); 
	    }
		lv_sqlTypes_7_0=ruleSqlTypeAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"sqlTypes",
        		lv_sqlTypes_7_0, 
        		"SqlTypeAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_8_0=	'types for columns' 
    {
        newLeafNode(lv_name_8_0, grammarAccess.getPojogenPropertyAccess().getNameTypesForColumnsKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_8_0, "types for columns");
	    }

)
)(this_WS_9=RULE_WS
    { 
    newLeafNode(this_WS_9, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_2_1()); 
    }
)+(
(
		lv_dbTable_10_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_10_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_10_0, 
        		"IDENT");
	    }

)
)((this_WS_11=RULE_WS
    { 
    newLeafNode(this_WS_11, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_2_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_2_3_1_0()); 
	    }
		lv_columnTypes_12_0=ruleColumnTypeAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"columnTypes",
        		lv_columnTypes_12_0, 
        		"ColumnTypeAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_13_0=	'ignore tables' 
    {
        newLeafNode(lv_name_13_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreTablesKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_13_0, "ignore tables");
	    }

)
)((this_WS_14=RULE_WS
    { 
    newLeafNode(this_WS_14, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_3_1_0()); 
    }
)+(
(
		lv_dbTables_15_0=RULE_IDENT
		{
			newLeafNode(lv_dbTables_15_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dbTables",
        		lv_dbTables_15_0, 
        		"IDENT");
	    }

)
))+)
    |((
(
		lv_name_16_0=	'only tables' 
    {
        newLeafNode(lv_name_16_0, grammarAccess.getPojogenPropertyAccess().getNameOnlyTablesKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_16_0, "only tables");
	    }

)
)((this_WS_17=RULE_WS
    { 
    newLeafNode(this_WS_17, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_4_1_0()); 
    }
)+(
(
		lv_dbTables_18_0=RULE_IDENT
		{
			newLeafNode(lv_dbTables_18_0, grammarAccess.getPojogenPropertyAccess().getDbTablesIDENTTerminalRuleCall_4_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dbTables",
        		lv_dbTables_18_0, 
        		"IDENT");
	    }

)
))+)
    |((
(
		lv_name_19_0=	'ignore columns' 
    {
        newLeafNode(lv_name_19_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreColumnsKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_19_0, "ignore columns");
	    }

)
)(this_WS_20=RULE_WS
    { 
    newLeafNode(this_WS_20, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_5_1()); 
    }
)+(
(
		lv_dbTable_21_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_21_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_21_0, 
        		"IDENT");
	    }

)
)((this_WS_22=RULE_WS
    { 
    newLeafNode(this_WS_22, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_5_3_0()); 
    }
)+(
(
		lv_dbColumns_23_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumns_23_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_5_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dbColumns",
        		lv_dbColumns_23_0, 
        		"IDENT");
	    }

)
))+)
    |((
(
		lv_name_24_0=	'required columns' 
    {
        newLeafNode(lv_name_24_0, grammarAccess.getPojogenPropertyAccess().getNameRequiredColumnsKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_24_0, "required columns");
	    }

)
)(this_WS_25=RULE_WS
    { 
    newLeafNode(this_WS_25, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_6_1()); 
    }
)+(
(
		lv_dbTable_26_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_26_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_26_0, 
        		"IDENT");
	    }

)
)((this_WS_27=RULE_WS
    { 
    newLeafNode(this_WS_27, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_6_3_0()); 
    }
)+(
(
		lv_dbColumns_28_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumns_28_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_6_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dbColumns",
        		lv_dbColumns_28_0, 
        		"IDENT");
	    }

)
))+)
    |((
(
		lv_name_29_0=	'not required columns' 
    {
        newLeafNode(lv_name_29_0, grammarAccess.getPojogenPropertyAccess().getNameNotRequiredColumnsKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_29_0, "not required columns");
	    }

)
)(this_WS_30=RULE_WS
    { 
    newLeafNode(this_WS_30, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_7_1()); 
    }
)+(
(
		lv_dbTable_31_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_31_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_31_0, 
        		"IDENT");
	    }

)
)((this_WS_32=RULE_WS
    { 
    newLeafNode(this_WS_32, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_7_3_0()); 
    }
)+(
(
		lv_dbColumns_33_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumns_33_0, grammarAccess.getPojogenPropertyAccess().getDbColumnsIDENTTerminalRuleCall_7_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dbColumns",
        		lv_dbColumns_33_0, 
        		"IDENT");
	    }

)
))+)
    |((
(
		lv_name_34_0=	'create columns' 
    {
        newLeafNode(lv_name_34_0, grammarAccess.getPojogenPropertyAccess().getNameCreateColumnsKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_34_0, "create columns");
	    }

)
)(this_WS_35=RULE_WS
    { 
    newLeafNode(this_WS_35, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_8_1()); 
    }
)+(
(
		lv_dbTable_36_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_36_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_8_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_36_0, 
        		"IDENT");
	    }

)
)((this_WS_37=RULE_WS
    { 
    newLeafNode(this_WS_37, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_8_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnTypesColumnTypeAssignementParserRuleCall_8_3_1_0()); 
	    }
		lv_columnTypes_38_0=ruleColumnTypeAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"columnTypes",
        		lv_columnTypes_38_0, 
        		"ColumnTypeAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_39_0=	'rename tables' 
    {
        newLeafNode(lv_name_39_0, grammarAccess.getPojogenPropertyAccess().getNameRenameTablesKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_39_0, "rename tables");
	    }

)
)((this_WS_40=RULE_WS
    { 
    newLeafNode(this_WS_40, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_9_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getTablesTableAssignementParserRuleCall_9_1_1_0()); 
	    }
		lv_tables_41_0=ruleTableAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"tables",
        		lv_tables_41_0, 
        		"TableAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_42_0=	'rename columns' 
    {
        newLeafNode(lv_name_42_0, grammarAccess.getPojogenPropertyAccess().getNameRenameColumnsKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_42_0, "rename columns");
	    }

)
)(this_WS_43=RULE_WS
    { 
    newLeafNode(this_WS_43, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_10_1()); 
    }
)+(
(
		lv_dbTable_44_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_44_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_10_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_44_0, 
        		"IDENT");
	    }

)
)((this_WS_45=RULE_WS
    { 
    newLeafNode(this_WS_45, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_10_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getColumnsColumnAssignementParserRuleCall_10_3_1_0()); 
	    }
		lv_columns_46_0=ruleColumnAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"columns",
        		lv_columns_46_0, 
        		"ColumnAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_47_0=	'ignore one-to-many' 
    {
        newLeafNode(lv_name_47_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreOneToManyKeyword_11_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_47_0, "ignore one-to-many");
	    }

)
)(this_WS_48=RULE_WS
    { 
    newLeafNode(this_WS_48, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_11_1()); 
    }
)+(
(
		lv_dbTable_49_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_49_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_11_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_49_0, 
        		"IDENT");
	    }

)
)((this_WS_50=RULE_WS
    { 
    newLeafNode(this_WS_50, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_11_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_11_3_1_0()); 
	    }
		lv_exports_51_0=ruleExportAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_51_0, 
        		"ExportAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_52_0=	'ignore many-to-one' 
    {
        newLeafNode(lv_name_52_0, grammarAccess.getPojogenPropertyAccess().getNameIgnoreManyToOneKeyword_12_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_52_0, "ignore many-to-one");
	    }

)
)(this_WS_53=RULE_WS
    { 
    newLeafNode(this_WS_53, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_12_1()); 
    }
)+(
(
		lv_dbTable_54_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_54_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_12_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_54_0, 
        		"IDENT");
	    }

)
)((this_WS_55=RULE_WS
    { 
    newLeafNode(this_WS_55, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_12_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_12_3_1_0()); 
	    }
		lv_imports_56_0=ruleImportAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_56_0, 
        		"ImportAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_57_0=	'inherit many-to-one' 
    {
        newLeafNode(lv_name_57_0, grammarAccess.getPojogenPropertyAccess().getNameInheritManyToOneKeyword_13_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_57_0, "inherit many-to-one");
	    }

)
)(this_WS_58=RULE_WS
    { 
    newLeafNode(this_WS_58, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_13_1()); 
    }
)+(
(
		lv_dbTable_59_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_59_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_13_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_59_0, 
        		"IDENT");
	    }

)
)((this_WS_60=RULE_WS
    { 
    newLeafNode(this_WS_60, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_13_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_13_3_1_0()); 
	    }
		lv_imports_61_0=ruleImportAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_61_0, 
        		"ImportAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_62_0=	'create one-to-many' 
    {
        newLeafNode(lv_name_62_0, grammarAccess.getPojogenPropertyAccess().getNameCreateOneToManyKeyword_14_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_62_0, "create one-to-many");
	    }

)
)(this_WS_63=RULE_WS
    { 
    newLeafNode(this_WS_63, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_14_1()); 
    }
)+(
(
		lv_dbTable_64_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_64_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_14_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_64_0, 
        		"IDENT");
	    }

)
)((this_WS_65=RULE_WS
    { 
    newLeafNode(this_WS_65, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_14_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_14_3_1_0()); 
	    }
		lv_exports_66_0=ruleExportAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_66_0, 
        		"ExportAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_67_0=	'create many-to-one' 
    {
        newLeafNode(lv_name_67_0, grammarAccess.getPojogenPropertyAccess().getNameCreateManyToOneKeyword_15_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_67_0, "create many-to-one");
	    }

)
)(this_WS_68=RULE_WS
    { 
    newLeafNode(this_WS_68, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_15_1()); 
    }
)+(
(
		lv_dbTable_69_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_69_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_15_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_69_0, 
        		"IDENT");
	    }

)
)((this_WS_70=RULE_WS
    { 
    newLeafNode(this_WS_70, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_15_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getImportsImportAssignementParserRuleCall_15_3_1_0()); 
	    }
		lv_imports_71_0=ruleImportAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_71_0, 
        		"ImportAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_72_0=	'tables many-to-many' 
    {
        newLeafNode(lv_name_72_0, grammarAccess.getPojogenPropertyAccess().getNameTablesManyToManyKeyword_16_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_72_0, "tables many-to-many");
	    }

)
)(this_WS_73=RULE_WS
    { 
    newLeafNode(this_WS_73, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_16_1()); 
    }
)+(
(
		lv_dbTable_74_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_74_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_16_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_74_0, 
        		"IDENT");
	    }

)
)((this_WS_75=RULE_WS
    { 
    newLeafNode(this_WS_75, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_16_3_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getExportsExportAssignementParserRuleCall_16_3_1_0()); 
	    }
		lv_exports_76_0=ruleExportAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_76_0, 
        		"ExportAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_77_0=	'inherit discriminator' 
    {
        newLeafNode(lv_name_77_0, grammarAccess.getPojogenPropertyAccess().getNameInheritDiscriminatorKeyword_17_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_77_0, "inherit discriminator");
	    }

)
)(this_WS_78=RULE_WS
    { 
    newLeafNode(this_WS_78, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_1()); 
    }
)+(
(
		lv_dbTable_79_0=RULE_IDENT
		{
			newLeafNode(lv_dbTable_79_0, grammarAccess.getPojogenPropertyAccess().getDbTableIDENTTerminalRuleCall_17_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbTable",
        		lv_dbTable_79_0, 
        		"IDENT");
	    }

)
)(this_WS_80=RULE_WS
    { 
    newLeafNode(this_WS_80, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_3()); 
    }
)+(
(
		lv_dbColumn_81_0=RULE_IDENT
		{
			newLeafNode(lv_dbColumn_81_0, grammarAccess.getPojogenPropertyAccess().getDbColumnIDENTTerminalRuleCall_17_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dbColumn",
        		lv_dbColumn_81_0, 
        		"IDENT");
	    }

)
)((this_WS_82=RULE_WS
    { 
    newLeafNode(this_WS_82, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_17_5_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getInheritanceInheritanceAssignementParserRuleCall_17_5_1_0()); 
	    }
		lv_inheritance_83_0=ruleInheritanceAssignement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojogenPropertyRule());
	        }
       		add(
       			$current, 
       			"inheritance",
        		lv_inheritance_83_0, 
        		"InheritanceAssignement");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_84_0=	'generate methods' 
    {
        newLeafNode(lv_name_84_0, grammarAccess.getPojogenPropertyAccess().getNameGenerateMethodsKeyword_18_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_84_0, "generate methods");
	    }

)
)((this_WS_85=RULE_WS
    { 
    newLeafNode(this_WS_85, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_18_1_0()); 
    }
)+(
(
		lv_methods_86_0=RULE_IDENT
		{
			newLeafNode(lv_methods_86_0, grammarAccess.getPojogenPropertyAccess().getMethodsIDENTTerminalRuleCall_18_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"methods",
        		lv_methods_86_0, 
        		"IDENT");
	    }

)
))+)
    |((
(
		lv_name_87_0=	'implements' 
    {
        newLeafNode(lv_name_87_0, grammarAccess.getPojogenPropertyAccess().getNameImplementsKeyword_19_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_87_0, "implements");
	    }

)
)((this_WS_88=RULE_WS
    { 
    newLeafNode(this_WS_88, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_19_1_0()); 
    }
)+(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToImplementsJvmTypeCrossReference_19_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))+)
    |((
(
		lv_name_90_0=	'extends' 
    {
        newLeafNode(lv_name_90_0, grammarAccess.getPojogenPropertyAccess().getNameExtendsKeyword_20_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_90_0, "extends");
	    }

)
)(this_WS_91=RULE_WS
    { 
    newLeafNode(this_WS_91, grammarAccess.getPojogenPropertyAccess().getWSTerminalRuleCall_20_1()); 
    }
)+(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojogenPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPojogenPropertyAccess().getToExtendsJvmTypeCrossReference_20_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); } 
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current.getText(); }  
	 EOF 
;

// Rule PropertyValue
rulePropertyValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getPropertyValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_COLON_4=RULE_COLON    {
		$current.merge(this_COLON_4);
    }

    { 
    newLeafNode(this_COLON_4, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_0_4()); 
    }

    |    this_STRING_5=RULE_STRING    {
		$current.merge(this_STRING_5);
    }

    { 
    newLeafNode(this_STRING_5, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_LBRACE_11=RULE_LBRACE    {
		$current.merge(this_LBRACE_11);
    }

    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_0_11()); 
    }

    |    this_RBRACE_12=RULE_RBRACE    {
		$current.merge(this_RBRACE_12);
    }

    { 
    newLeafNode(this_RBRACE_12, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_0_12()); 
    }

    |    this_QUESTI_13=RULE_QUESTI    {
		$current.merge(this_QUESTI_13);
    }

    { 
    newLeafNode(this_QUESTI_13, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_0_13()); 
    }

    |    this_NOT_14=RULE_NOT    {
		$current.merge(this_NOT_14);
    }

    { 
    newLeafNode(this_NOT_14, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_0_14()); 
    }

    |    this_BAND_15=RULE_BAND    {
		$current.merge(this_BAND_15);
    }

    { 
    newLeafNode(this_BAND_15, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_0_15()); 
    }

    |    this_BOR_16=RULE_BOR    {
		$current.merge(this_BOR_16);
    }

    { 
    newLeafNode(this_BOR_16, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_0_16()); 
    }

    |    this_HASH_17=RULE_HASH    {
		$current.merge(this_HASH_17);
    }

    { 
    newLeafNode(this_HASH_17, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_0_17()); 
    }

    |    this_AT_18=RULE_AT    {
		$current.merge(this_AT_18);
    }

    { 
    newLeafNode(this_AT_18, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_0_18()); 
    }

    |    this_CARET_19=RULE_CARET    {
		$current.merge(this_CARET_19);
    }

    { 
    newLeafNode(this_CARET_19, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_0_19()); 
    }

    |    this_EQUALS_20=RULE_EQUALS    {
		$current.merge(this_EQUALS_20);
    }

    { 
    newLeafNode(this_EQUALS_20, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_0_20()); 
    }

    |    this_LESS_THAN_21=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_21);
    }

    { 
    newLeafNode(this_LESS_THAN_21, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_0_21()); 
    }

    |    this_MORE_THAN_22=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_22);
    }

    { 
    newLeafNode(this_MORE_THAN_22, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_0_22()); 
    }

    |    this_PERCENT_23=RULE_PERCENT    {
		$current.merge(this_PERCENT_23);
    }

    { 
    newLeafNode(this_PERCENT_23, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_0_23()); 
    }

    |    this_AND_24=RULE_AND    {
		$current.merge(this_AND_24);
    }

    { 
    newLeafNode(this_AND_24, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_0_24()); 
    }

    |    this_OR_25=RULE_OR    {
		$current.merge(this_OR_25);
    }

    { 
    newLeafNode(this_OR_25, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_0_25()); 
    }

    |    this_ESC_CHAR_26=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_26);
    }

    { 
    newLeafNode(this_ESC_CHAR_26, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_0_26()); 
    }

    |    this_ON_OFF_27=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_27);
    }

    { 
    newLeafNode(this_ON_OFF_27, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_0_27()); 
    }

    |    this_STATEMEN_TYPE_28=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_28);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_28, grammarAccess.getPropertyValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_28()); 
    }

    |    this_MAPPING_TYPE_29=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_29);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_29, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_0_29()); 
    }

    |    this_OPTION_TYPE_30=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_30);
    }

    { 
    newLeafNode(this_OPTION_TYPE_30, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_0_30()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE_NUMBER
    | RULE_WS
    | RULE_COLON
    | RULE_STRING
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_LBRACE
    | RULE_RBRACE
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_BOR
    | RULE_HASH
    | RULE_AT
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_PERCENT
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_31=RULE_REST    {
		$current.merge(this_REST_31);
    }

    { 
    newLeafNode(this_REST_31, grammarAccess.getPropertyValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_32=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_32);
    }

    { 
    newLeafNode(this_IDENT_DOT_32, grammarAccess.getPropertyValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_33=RULE_IDENT    {
		$current.merge(this_IDENT_33);
    }

    { 
    newLeafNode(this_IDENT_33, grammarAccess.getPropertyValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_34=RULE_NUMBER    {
		$current.merge(this_NUMBER_34);
    }

    { 
    newLeafNode(this_NUMBER_34, grammarAccess.getPropertyValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_35=RULE_WS    {
		$current.merge(this_WS_35);
    }

    { 
    newLeafNode(this_WS_35, grammarAccess.getPropertyValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_COLON_36=RULE_COLON    {
		$current.merge(this_COLON_36);
    }

    { 
    newLeafNode(this_COLON_36, grammarAccess.getPropertyValueAccess().getCOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_STRING_37=RULE_STRING    {
		$current.merge(this_STRING_37);
    }

    { 
    newLeafNode(this_STRING_37, grammarAccess.getPropertyValueAccess().getSTRINGTerminalRuleCall_1_0_6()); 
    }

    |    this_COMMA_38=RULE_COMMA    {
		$current.merge(this_COMMA_38);
    }

    { 
    newLeafNode(this_COMMA_38, grammarAccess.getPropertyValueAccess().getCOMMATerminalRuleCall_1_0_7()); 
    }

    |    this_MINUS_39=RULE_MINUS    {
		$current.merge(this_MINUS_39);
    }

    { 
    newLeafNode(this_MINUS_39, grammarAccess.getPropertyValueAccess().getMINUSTerminalRuleCall_1_0_8()); 
    }

    |    this_PLUS_40=RULE_PLUS    {
		$current.merge(this_PLUS_40);
    }

    { 
    newLeafNode(this_PLUS_40, grammarAccess.getPropertyValueAccess().getPLUSTerminalRuleCall_1_0_9()); 
    }

    |    this_LPAREN_41=RULE_LPAREN    {
		$current.merge(this_LPAREN_41);
    }

    { 
    newLeafNode(this_LPAREN_41, grammarAccess.getPropertyValueAccess().getLPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_RPAREN_42=RULE_RPAREN    {
		$current.merge(this_RPAREN_42);
    }

    { 
    newLeafNode(this_RPAREN_42, grammarAccess.getPropertyValueAccess().getRPARENTerminalRuleCall_1_0_11()); 
    }

    |    this_LBRACE_43=RULE_LBRACE    {
		$current.merge(this_LBRACE_43);
    }

    { 
    newLeafNode(this_LBRACE_43, grammarAccess.getPropertyValueAccess().getLBRACETerminalRuleCall_1_0_12()); 
    }

    |    this_RBRACE_44=RULE_RBRACE    {
		$current.merge(this_RBRACE_44);
    }

    { 
    newLeafNode(this_RBRACE_44, grammarAccess.getPropertyValueAccess().getRBRACETerminalRuleCall_1_0_13()); 
    }

    |    this_QUESTI_45=RULE_QUESTI    {
		$current.merge(this_QUESTI_45);
    }

    { 
    newLeafNode(this_QUESTI_45, grammarAccess.getPropertyValueAccess().getQUESTITerminalRuleCall_1_0_14()); 
    }

    |    this_NOT_46=RULE_NOT    {
		$current.merge(this_NOT_46);
    }

    { 
    newLeafNode(this_NOT_46, grammarAccess.getPropertyValueAccess().getNOTTerminalRuleCall_1_0_15()); 
    }

    |    this_BAND_47=RULE_BAND    {
		$current.merge(this_BAND_47);
    }

    { 
    newLeafNode(this_BAND_47, grammarAccess.getPropertyValueAccess().getBANDTerminalRuleCall_1_0_16()); 
    }

    |    this_BOR_48=RULE_BOR    {
		$current.merge(this_BOR_48);
    }

    { 
    newLeafNode(this_BOR_48, grammarAccess.getPropertyValueAccess().getBORTerminalRuleCall_1_0_17()); 
    }

    |    this_HASH_49=RULE_HASH    {
		$current.merge(this_HASH_49);
    }

    { 
    newLeafNode(this_HASH_49, grammarAccess.getPropertyValueAccess().getHASHTerminalRuleCall_1_0_18()); 
    }

    |    this_AT_50=RULE_AT    {
		$current.merge(this_AT_50);
    }

    { 
    newLeafNode(this_AT_50, grammarAccess.getPropertyValueAccess().getATTerminalRuleCall_1_0_19()); 
    }

    |    this_CARET_51=RULE_CARET    {
		$current.merge(this_CARET_51);
    }

    { 
    newLeafNode(this_CARET_51, grammarAccess.getPropertyValueAccess().getCARETTerminalRuleCall_1_0_20()); 
    }

    |    this_EQUALS_52=RULE_EQUALS    {
		$current.merge(this_EQUALS_52);
    }

    { 
    newLeafNode(this_EQUALS_52, grammarAccess.getPropertyValueAccess().getEQUALSTerminalRuleCall_1_0_21()); 
    }

    |    this_LESS_THAN_53=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_53);
    }

    { 
    newLeafNode(this_LESS_THAN_53, grammarAccess.getPropertyValueAccess().getLESS_THANTerminalRuleCall_1_0_22()); 
    }

    |    this_MORE_THAN_54=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_54);
    }

    { 
    newLeafNode(this_MORE_THAN_54, grammarAccess.getPropertyValueAccess().getMORE_THANTerminalRuleCall_1_0_23()); 
    }

    |    this_PERCENT_55=RULE_PERCENT    {
		$current.merge(this_PERCENT_55);
    }

    { 
    newLeafNode(this_PERCENT_55, grammarAccess.getPropertyValueAccess().getPERCENTTerminalRuleCall_1_0_24()); 
    }

    |    this_AND_56=RULE_AND    {
		$current.merge(this_AND_56);
    }

    { 
    newLeafNode(this_AND_56, grammarAccess.getPropertyValueAccess().getANDTerminalRuleCall_1_0_25()); 
    }

    |    this_OR_57=RULE_OR    {
		$current.merge(this_OR_57);
    }

    { 
    newLeafNode(this_OR_57, grammarAccess.getPropertyValueAccess().getORTerminalRuleCall_1_0_26()); 
    }

    |    this_ESC_CHAR_58=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_58);
    }

    { 
    newLeafNode(this_ESC_CHAR_58, grammarAccess.getPropertyValueAccess().getESC_CHARTerminalRuleCall_1_0_27()); 
    }

    |    this_ON_OFF_59=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_59);
    }

    { 
    newLeafNode(this_ON_OFF_59, grammarAccess.getPropertyValueAccess().getON_OFFTerminalRuleCall_1_0_28()); 
    }

    |    this_STATEMEN_TYPE_60=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_60);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_60, grammarAccess.getPropertyValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_29()); 
    }

    |    this_MAPPING_TYPE_61=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_61);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_61, grammarAccess.getPropertyValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_30()); 
    }

    |    this_OPTION_TYPE_62=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_62);
    }

    { 
    newLeafNode(this_OPTION_TYPE_62, grammarAccess.getPropertyValueAccess().getOPTION_TYPETerminalRuleCall_1_0_31()); 
    }
))*)
    ;





// Entry rule entryRulePojoDefinition
entryRulePojoDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPojoDefinitionRule()); }
	 iv_rulePojoDefinition=rulePojoDefinition 
	 { $current=$iv_rulePojoDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PojoDefinition
rulePojoDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='pojo' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPojoDefinitionAccess().getPojoKeyword_0());
    }
(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPojoDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
)(
(
(
		lv_class_2_1=RULE_IDENT
		{
			newLeafNode(lv_class_2_1, grammarAccess.getPojoDefinitionAccess().getClassIDENTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"class",
        		lv_class_2_1, 
        		"IDENT");
	    }

    |		lv_class_2_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_class_2_2, grammarAccess.getPojoDefinitionAccess().getClassIDENT_DOTTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"class",
        		lv_class_2_2, 
        		"IDENT_DOT");
	    }

)

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getPojoDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePojoUsage
entryRulePojoUsage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoUsageRule()); }
	 iv_rulePojoUsage=rulePojoUsage 
	 { $current=$iv_rulePojoUsage.current; } 
	 EOF 
;

// Rule PojoUsage
rulePojoUsage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getColumnUsageParserRuleCall_0()); 
    }
    this_ColumnUsage_0=ruleColumnUsage
    { 
        $current = $this_ColumnUsage_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getIdentifierUsageParserRuleCall_1()); 
    }
    this_IdentifierUsage_1=ruleIdentifierUsage
    { 
        $current = $this_IdentifierUsage_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getConstantUsageParserRuleCall_2()); 
    }
    this_ConstantUsage_2=ruleConstantUsage
    { 
        $current = $this_ConstantUsage_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageAccess().getMappingUsageParserRuleCall_3()); 
    }
    this_MappingUsage_3=ruleMappingUsage
    { 
        $current = $this_MappingUsage_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleColumnUsage
entryRuleColumnUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getColumnUsageRule()); }
	 iv_ruleColumnUsage=ruleColumnUsage 
	 { $current=$iv_ruleColumnUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColumnUsage
ruleColumnUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='col' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getColumnUsageAccess().getColKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getColumnUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getColumnUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getColumnUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIdentifierUsage
entryRuleIdentifierUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getIdentifierUsageRule()); }
	 iv_ruleIdentifierUsage=ruleIdentifierUsage 
	 { $current=$iv_ruleIdentifierUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierUsage
ruleIdentifierUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='ident' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIdentifierUsageAccess().getIdentKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getIdentifierUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getIdentifierUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getIdentifierUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleConstantUsage
entryRuleConstantUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getConstantUsageRule()); }
	 iv_ruleConstantUsage=ruleConstantUsage 
	 { $current=$iv_ruleConstantUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConstantUsage
ruleConstantUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantUsageAccess().getConstKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getConstantUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getConstantUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getConstantUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMappingUsage
entryRuleMappingUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getMappingUsageRule()); }
	 iv_ruleMappingUsage=ruleMappingUsage 
	 { $current=$iv_ruleMappingUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MappingUsage
ruleMappingUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='out' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMappingUsageAccess().getOutKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getMappingUsageAccess().getStatementMappingRuleCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getMappingUsageAccess().getPojoPojoDefinitionCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getMappingUsageAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePojoUsageExt
entryRulePojoUsageExt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoUsageExtRule()); }
	 iv_rulePojoUsageExt=rulePojoUsageExt 
	 { $current=$iv_rulePojoUsageExt.current; } 
	 EOF 
;

// Rule PojoUsageExt
rulePojoUsageExt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPojoUsageExtAccess().getColumnUsageExtParserRuleCall_0()); 
    }
    this_ColumnUsageExt_0=ruleColumnUsageExt
    { 
        $current = $this_ColumnUsageExt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageExtAccess().getIdentifierUsageExtParserRuleCall_1()); 
    }
    this_IdentifierUsageExt_1=ruleIdentifierUsageExt
    { 
        $current = $this_IdentifierUsageExt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageExtAccess().getConstantUsageExtParserRuleCall_2()); 
    }
    this_ConstantUsageExt_2=ruleConstantUsageExt
    { 
        $current = $this_ConstantUsageExt_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPojoUsageExtAccess().getMappingUsageExtParserRuleCall_3()); 
    }
    this_MappingUsageExt_3=ruleMappingUsageExt
    { 
        $current = $this_MappingUsageExt_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleColumnUsageExt
entryRuleColumnUsageExt returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getColumnUsageExtRule()); }
	 iv_ruleColumnUsageExt=ruleColumnUsageExt 
	 { $current=$iv_ruleColumnUsageExt.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColumnUsageExt
ruleColumnUsageExt returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='colx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getColumnUsageExtAccess().getColxKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnUsageExtRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getColumnUsageExtAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnUsageExtRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getColumnUsageExtAccess().getPojoPojoEntityCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getColumnUsageExtAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleIdentifierUsageExt
entryRuleIdentifierUsageExt returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getIdentifierUsageExtRule()); }
	 iv_ruleIdentifierUsageExt=ruleIdentifierUsageExt 
	 { $current=$iv_ruleIdentifierUsageExt.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierUsageExt
ruleIdentifierUsageExt returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='identx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIdentifierUsageExtAccess().getIdentxKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierUsageExtRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getIdentifierUsageExtAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierUsageExtRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getIdentifierUsageExtAccess().getPojoPojoEntityCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getIdentifierUsageExtAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleConstantUsageExt
entryRuleConstantUsageExt returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getConstantUsageExtRule()); }
	 iv_ruleConstantUsageExt=ruleConstantUsageExt 
	 { $current=$iv_ruleConstantUsageExt.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ConstantUsageExt
ruleConstantUsageExt returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='constx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstantUsageExtAccess().getConstxKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantUsageExtRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getConstantUsageExtAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantUsageExtRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getConstantUsageExtAccess().getPojoPojoEntityCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getConstantUsageExtAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMappingUsageExt
entryRuleMappingUsageExt returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getMappingUsageExtRule()); }
	 iv_ruleMappingUsageExt=ruleMappingUsageExt 
	 { $current=$iv_ruleMappingUsageExt.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MappingUsageExt
ruleMappingUsageExt returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='outx' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMappingUsageExtAccess().getOutxKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingUsageExtRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getMappingUsageExtAccess().getStatementMappingRuleCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingUsageExtRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getMappingUsageExtAccess().getPojoPojoEntityCrossReference_2_0()); 
	}

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getMappingUsageExtAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTableDefinition
entryRuleTableDefinition returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTableDefinitionRule()); }
	 iv_ruleTableDefinition=ruleTableDefinition 
	 { $current=$iv_ruleTableDefinition.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TableDefinition
ruleTableDefinition returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='table' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableDefinitionAccess().getTableKeyword_0());
    }
(
(
		lv_name_1_0=RULE_IDENT
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTableDefinitionAccess().getNameIDENTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"IDENT");
	    }

)
)(
(
		lv_table_2_0=RULE_IDENT
		{
			newLeafNode(lv_table_2_0, grammarAccess.getTableDefinitionAccess().getTableIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"table",
        		lv_table_2_0, 
        		"IDENT");
	    }

)
)this_SEMICOLON_3=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_3, grammarAccess.getTableDefinitionAccess().getSEMICOLONTerminalRuleCall_3()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTableUsage
entryRuleTableUsage returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTableUsageRule()); }
	 iv_ruleTableUsage=ruleTableUsage 
	 { $current=$iv_ruleTableUsage.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TableUsage
ruleTableUsage returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='dbcol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableUsageAccess().getDbcolKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableUsageRule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getTableUsageAccess().getStatementMetaStatementCrossReference_1_0()); 
	}

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableUsageRule());
	        }
        }
	otherlv_2=RULE_IDENT
	{
		newLeafNode(otherlv_2, grammarAccess.getTableUsageAccess().getTableTableDefinitionCrossReference_2_0()); 
	}

)
)(	otherlv_3='prefix' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableUsageAccess().getPrefixKeyword_3_0());
    }
(
(
		lv_prefix_4_0=RULE_IDENT
		{
			newLeafNode(lv_prefix_4_0, grammarAccess.getTableUsageAccess().getPrefixIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableUsageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prefix",
        		lv_prefix_4_0, 
        		"IDENT");
	    }

)
))?this_SEMICOLON_5=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getTableUsageAccess().getSEMICOLONTerminalRuleCall_4()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMetaStatement
entryRuleMetaStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaStatementRule()); }
	 iv_ruleMetaStatement=ruleMetaStatement 
	 { $current=$iv_ruleMetaStatement.current; } 
	 EOF 
;

// Rule MetaStatement
ruleMetaStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMetaStatementAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getMetaStatementAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_type_2_0=RULE_STATEMEN_TYPE
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMetaStatementAccess().getTypeSTATEMEN_TYPETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"STATEMEN_TYPE");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getMetaStatementAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getMetaStatementAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getMetaStatementAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getMetaStatementAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaStatementAccess().getStatementSqlParserRuleCall_6_0()); 
	    }
		lv_statement_7_0=ruleSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_7_0, 
        		"Sql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getMetaStatementAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleSql
entryRuleSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlRule()); }
	 iv_ruleSql=ruleSql 
	 { $current=$iv_ruleSql.current; } 
	 EOF 
;

// Rule Sql
ruleSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlAccess().getSqlsSqlFragmentParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleSqlFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"SqlFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSqlFragment
entryRuleSqlFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlFragmentRule()); }
	 iv_ruleSqlFragment=ruleSqlFragment 
	 { $current=$iv_ruleSqlFragment.current; } 
	 EOF 
;

// Rule SqlFragment
ruleSqlFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getValueSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"SqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
	    }
		lv_col_2_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"col",
        		lv_col_2_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
	    }
		lv_cnst_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_ident_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_LBRACE_7=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_7, grammarAccess.getSqlFragmentAccess().getLBRACETerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getMetaMetaSqlParserRuleCall_4_1_0()); 
	    }
		lv_meta_8_0=ruleMetaSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"meta",
        		lv_meta_8_0, 
        		"MetaSql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACE_9=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_9, grammarAccess.getSqlFragmentAccess().getRBRACETerminalRuleCall_4_2()); 
    }
)
    |(this_PERCENT_10=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_10, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_5_0()); 
    }
((this_PERCENT_11=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_11, grammarAccess.getSqlFragmentAccess().getPERCENTTerminalRuleCall_5_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_5_1_0_1_0()); 
	    }
		lv_dbtab_12_0=ruleDatabaseTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbtab",
        		lv_dbtab_12_0, 
        		"DatabaseTable");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_5_1_1_0()); 
	    }
		lv_dbcol_13_0=ruleDatabaseColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbcol",
        		lv_dbcol_13_0, 
        		"DatabaseColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleSqlValue
entryRuleSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlValueRule()); } 
	 iv_ruleSqlValue=ruleSqlValue 
	 { $current=$iv_ruleSqlValue.current.getText(); }  
	 EOF 
;

// Rule SqlValue
ruleSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_COMMA_5=RULE_COMMA    {
		$current.merge(this_COMMA_5);
    }

    { 
    newLeafNode(this_COMMA_5, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_0_5()); 
    }

    |    this_MINUS_6=RULE_MINUS    {
		$current.merge(this_MINUS_6);
    }

    { 
    newLeafNode(this_MINUS_6, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_0_6()); 
    }

    |    this_PLUS_7=RULE_PLUS    {
		$current.merge(this_PLUS_7);
    }

    { 
    newLeafNode(this_PLUS_7, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_0_7()); 
    }

    |    this_LPAREN_8=RULE_LPAREN    {
		$current.merge(this_LPAREN_8);
    }

    { 
    newLeafNode(this_LPAREN_8, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_0_8()); 
    }

    |    this_RPAREN_9=RULE_RPAREN    {
		$current.merge(this_RPAREN_9);
    }

    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_0_9()); 
    }

    |    this_RBRACE_10=RULE_RBRACE    {
		$current.merge(this_RBRACE_10);
    }

    { 
    newLeafNode(this_RBRACE_10, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_0_10()); 
    }

    |    this_QUESTI_11=RULE_QUESTI    {
		$current.merge(this_QUESTI_11);
    }

    { 
    newLeafNode(this_QUESTI_11, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
    }

    |    this_NOT_12=RULE_NOT    {
		$current.merge(this_NOT_12);
    }

    { 
    newLeafNode(this_NOT_12, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
    }

    |    this_BAND_13=RULE_BAND    {
		$current.merge(this_BAND_13);
    }

    { 
    newLeafNode(this_BAND_13, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
    }

    |    this_BOR_14=RULE_BOR    {
		$current.merge(this_BOR_14);
    }

    { 
    newLeafNode(this_BOR_14, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_0_14()); 
    }

    |    this_HASH_15=RULE_HASH    {
		$current.merge(this_HASH_15);
    }

    { 
    newLeafNode(this_HASH_15, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_0_15()); 
    }

    |    this_CARET_16=RULE_CARET    {
		$current.merge(this_CARET_16);
    }

    { 
    newLeafNode(this_CARET_16, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_0_16()); 
    }

    |    this_EQUALS_17=RULE_EQUALS    {
		$current.merge(this_EQUALS_17);
    }

    { 
    newLeafNode(this_EQUALS_17, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_0_17()); 
    }

    |    this_LESS_THAN_18=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_18);
    }

    { 
    newLeafNode(this_LESS_THAN_18, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_0_18()); 
    }

    |    this_MORE_THAN_19=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_19);
    }

    { 
    newLeafNode(this_MORE_THAN_19, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_0_19()); 
    }

    |    this_AND_20=RULE_AND    {
		$current.merge(this_AND_20);
    }

    { 
    newLeafNode(this_AND_20, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_0_20()); 
    }

    |    this_OR_21=RULE_OR    {
		$current.merge(this_OR_21);
    }

    { 
    newLeafNode(this_OR_21, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_0_21()); 
    }

    |    this_ESC_CHAR_22=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_22);
    }

    { 
    newLeafNode(this_ESC_CHAR_22, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_0_22()); 
    }

    |    this_ON_OFF_23=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_23);
    }

    { 
    newLeafNode(this_ON_OFF_23, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_0_23()); 
    }

    |    this_STATEMEN_TYPE_24=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_24);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_24, grammarAccess.getSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_24()); 
    }

    |    this_MAPPING_TYPE_25=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_25);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_25, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_25()); 
    }

    |    this_OPTION_TYPE_26=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_26);
    }

    { 
    newLeafNode(this_OPTION_TYPE_26, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_26()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE_NUMBER
    | RULE_WS
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_RBRACE
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_BOR
    | RULE_HASH
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_27=RULE_REST    {
		$current.merge(this_REST_27);
    }

    { 
    newLeafNode(this_REST_27, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_28=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_28);
    }

    { 
    newLeafNode(this_IDENT_DOT_28, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_29=RULE_IDENT    {
		$current.merge(this_IDENT_29);
    }

    { 
    newLeafNode(this_IDENT_29, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_30=RULE_NUMBER    {
		$current.merge(this_NUMBER_30);
    }

    { 
    newLeafNode(this_NUMBER_30, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_31=RULE_WS    {
		$current.merge(this_WS_31);
    }

    { 
    newLeafNode(this_WS_31, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_COMMA_32=RULE_COMMA    {
		$current.merge(this_COMMA_32);
    }

    { 
    newLeafNode(this_COMMA_32, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_1_0_5()); 
    }

    |    this_MINUS_33=RULE_MINUS    {
		$current.merge(this_MINUS_33);
    }

    { 
    newLeafNode(this_MINUS_33, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_1_0_6()); 
    }

    |    this_PLUS_34=RULE_PLUS    {
		$current.merge(this_PLUS_34);
    }

    { 
    newLeafNode(this_PLUS_34, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_1_0_7()); 
    }

    |    this_LPAREN_35=RULE_LPAREN    {
		$current.merge(this_LPAREN_35);
    }

    { 
    newLeafNode(this_LPAREN_35, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_1_0_8()); 
    }

    |    this_RPAREN_36=RULE_RPAREN    {
		$current.merge(this_RPAREN_36);
    }

    { 
    newLeafNode(this_RPAREN_36, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RBRACE_37=RULE_RBRACE    {
		$current.merge(this_RBRACE_37);
    }

    { 
    newLeafNode(this_RBRACE_37, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_1_0_10()); 
    }

    |    this_QUESTI_38=RULE_QUESTI    {
		$current.merge(this_QUESTI_38);
    }

    { 
    newLeafNode(this_QUESTI_38, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
    }

    |    this_NOT_39=RULE_NOT    {
		$current.merge(this_NOT_39);
    }

    { 
    newLeafNode(this_NOT_39, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
    }

    |    this_BAND_40=RULE_BAND    {
		$current.merge(this_BAND_40);
    }

    { 
    newLeafNode(this_BAND_40, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
    }

    |    this_BOR_41=RULE_BOR    {
		$current.merge(this_BOR_41);
    }

    { 
    newLeafNode(this_BOR_41, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_1_0_14()); 
    }

    |    this_HASH_42=RULE_HASH    {
		$current.merge(this_HASH_42);
    }

    { 
    newLeafNode(this_HASH_42, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_1_0_15()); 
    }

    |    this_CARET_43=RULE_CARET    {
		$current.merge(this_CARET_43);
    }

    { 
    newLeafNode(this_CARET_43, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_1_0_16()); 
    }

    |    this_EQUALS_44=RULE_EQUALS    {
		$current.merge(this_EQUALS_44);
    }

    { 
    newLeafNode(this_EQUALS_44, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_1_0_17()); 
    }

    |    this_LESS_THAN_45=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_45);
    }

    { 
    newLeafNode(this_LESS_THAN_45, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_18()); 
    }

    |    this_MORE_THAN_46=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_46);
    }

    { 
    newLeafNode(this_MORE_THAN_46, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_19()); 
    }

    |    this_AND_47=RULE_AND    {
		$current.merge(this_AND_47);
    }

    { 
    newLeafNode(this_AND_47, grammarAccess.getSqlValueAccess().getANDTerminalRuleCall_1_0_20()); 
    }

    |    this_OR_48=RULE_OR    {
		$current.merge(this_OR_48);
    }

    { 
    newLeafNode(this_OR_48, grammarAccess.getSqlValueAccess().getORTerminalRuleCall_1_0_21()); 
    }

    |    this_ESC_CHAR_49=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_49);
    }

    { 
    newLeafNode(this_ESC_CHAR_49, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_22()); 
    }

    |    this_ON_OFF_50=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_50);
    }

    { 
    newLeafNode(this_ON_OFF_50, grammarAccess.getSqlValueAccess().getON_OFFTerminalRuleCall_1_0_23()); 
    }

    |    this_STATEMEN_TYPE_51=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_51);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_51, grammarAccess.getSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_24()); 
    }

    |    this_MAPPING_TYPE_52=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_52);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_52, grammarAccess.getSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_25()); 
    }

    |    this_OPTION_TYPE_53=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_53);
    }

    { 
    newLeafNode(this_OPTION_TYPE_53, grammarAccess.getSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_26()); 
    }
))*)
    ;





// Entry rule entryRuleMetaSql
entryRuleMetaSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaSqlRule()); }
	 iv_ruleMetaSql=ruleMetaSql 
	 { $current=$iv_ruleMetaSql.current; } 
	 EOF 
;

// Rule MetaSql
ruleMetaSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
	    }
		lv_ifs_1_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_1_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_2=RULE_BOR
    { 
    newLeafNode(this_BOR_2, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
	    }
		lv_ifs_3_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_3_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_4_0=RULE_QUESTI
		{
			newLeafNode(lv_type_4_0, grammarAccess.getMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"QUESTI");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
	    }
		lv_cond_5_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BOR_6=RULE_BOR
    { 
    newLeafNode(this_BOR_6, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
	    }
		lv_ifs_7_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_7_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_8=RULE_BOR
    { 
    newLeafNode(this_BOR_8, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
	    }
		lv_ifs_9_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_9_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_10_0=RULE_BAND
		{
			newLeafNode(lv_type_10_0, grammarAccess.getMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"BAND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
	    }
		lv_ifs_11_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_11_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_12=RULE_BOR
    { 
    newLeafNode(this_BOR_12, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
	    }
		lv_ifs_13_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_13_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_14_0=RULE_BOR
		{
			newLeafNode(lv_type_14_0, grammarAccess.getMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"BOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
	    }
		lv_ifs_15_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_15_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_16=RULE_BOR
    { 
    newLeafNode(this_BOR_16, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
	    }
		lv_ifs_17_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_17_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_18_0=RULE_EQUALS
		{
			newLeafNode(lv_type_18_0, grammarAccess.getMetaSqlAccess().getTypeEQUALSTerminalRuleCall_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_18_0, 
        		"EQUALS");
	    }

)
)(this_WS_19=RULE_WS
    { 
    newLeafNode(this_WS_19, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_4_1()); 
    }
)*(
(
		lv_ftype_20_0=RULE_IDENT
		{
			newLeafNode(lv_ftype_20_0, grammarAccess.getMetaSqlAccess().getFtypeIDENTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ftype",
        		lv_ftype_20_0, 
        		"IDENT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_4_3_0()); 
	    }
		lv_ifs_21_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_21_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_type_22_0=RULE_HASH
		{
			newLeafNode(lv_type_22_0, grammarAccess.getMetaSqlAccess().getTypeHASHTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_22_0, 
        		"HASH");
	    }

)
)this_NUMBER_23=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_23, grammarAccess.getMetaSqlAccess().getNUMBERTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getOrdOrdSqlParserRuleCall_5_2_0()); 
	    }
		lv_ord_24_0=ruleOrdSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		set(
       			$current, 
       			"ord",
        		lv_ord_24_0, 
        		"OrdSql");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleIfSql
entryRuleIfSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlRule()); }
	 iv_ruleIfSql=ruleIfSql 
	 { $current=$iv_ruleIfSql.current; } 
	 EOF 
;

// Rule IfSql
ruleIfSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlAccess().getSqlsIfSqlFragmentParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleIfSqlFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"IfSqlFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleIfSqlFragment
entryRuleIfSqlFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlFragmentRule()); }
	 iv_ruleIfSqlFragment=ruleIfSqlFragment 
	 { $current=$iv_ruleIfSqlFragment.current; } 
	 EOF 
;

// Rule IfSqlFragment
ruleIfSqlFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getValueIfSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleIfSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"IfSqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getIfSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
	    }
		lv_col_2_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"col",
        		lv_col_2_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
	    }
		lv_cnst_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_ident_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_PERCENT_7=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_7, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_4_0()); 
    }
((this_PERCENT_8=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_8, grammarAccess.getIfSqlFragmentAccess().getPERCENTTerminalRuleCall_4_1_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbtabDatabaseTableParserRuleCall_4_1_0_1_0()); 
	    }
		lv_dbtab_9_0=ruleDatabaseTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbtab",
        		lv_dbtab_9_0, 
        		"DatabaseTable");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getDbcolDatabaseColumnParserRuleCall_4_1_1_0()); 
	    }
		lv_dbcol_10_0=ruleDatabaseColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"dbcol",
        		lv_dbcol_10_0, 
        		"DatabaseColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(this_LBRACE_11=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getIfSqlFragmentAccess().getLBRACETerminalRuleCall_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getMetaIfMetaSqlParserRuleCall_5_1_0()); 
	    }
		lv_meta_12_0=ruleIfMetaSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"meta",
        		lv_meta_12_0, 
        		"IfMetaSql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACE_13=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_13, grammarAccess.getIfSqlFragmentAccess().getRBRACETerminalRuleCall_5_2()); 
    }
))
;





// Entry rule entryRuleIfSqlValue
entryRuleIfSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlValueRule()); } 
	 iv_ruleIfSqlValue=ruleIfSqlValue 
	 { $current=$iv_ruleIfSqlValue.current.getText(); }  
	 EOF 
;

// Rule IfSqlValue
ruleIfSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_SEMICOLON_5=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_5);
    }

    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_QUESTI_11=RULE_QUESTI    {
		$current.merge(this_QUESTI_11);
    }

    { 
    newLeafNode(this_QUESTI_11, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
    }

    |    this_NOT_12=RULE_NOT    {
		$current.merge(this_NOT_12);
    }

    { 
    newLeafNode(this_NOT_12, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
    }

    |    this_BAND_13=RULE_BAND    {
		$current.merge(this_BAND_13);
    }

    { 
    newLeafNode(this_BAND_13, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
    }

    |    this_HASH_14=RULE_HASH    {
		$current.merge(this_HASH_14);
    }

    { 
    newLeafNode(this_HASH_14, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_0_14()); 
    }

    |    this_CARET_15=RULE_CARET    {
		$current.merge(this_CARET_15);
    }

    { 
    newLeafNode(this_CARET_15, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_0_15()); 
    }

    |    this_EQUALS_16=RULE_EQUALS    {
		$current.merge(this_EQUALS_16);
    }

    { 
    newLeafNode(this_EQUALS_16, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_0_16()); 
    }

    |    this_LESS_THAN_17=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_17);
    }

    { 
    newLeafNode(this_LESS_THAN_17, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_0_17()); 
    }

    |    this_MORE_THAN_18=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_18);
    }

    { 
    newLeafNode(this_MORE_THAN_18, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_0_18()); 
    }

    |    this_AND_19=RULE_AND    {
		$current.merge(this_AND_19);
    }

    { 
    newLeafNode(this_AND_19, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_0_19()); 
    }

    |    this_OR_20=RULE_OR    {
		$current.merge(this_OR_20);
    }

    { 
    newLeafNode(this_OR_20, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_0_20()); 
    }

    |    this_ESC_CHAR_21=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_21);
    }

    { 
    newLeafNode(this_ESC_CHAR_21, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_0_21()); 
    }

    |    this_ON_OFF_22=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_22);
    }

    { 
    newLeafNode(this_ON_OFF_22, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_0_22()); 
    }

    |    this_STATEMEN_TYPE_23=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_23);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_23, grammarAccess.getIfSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_23()); 
    }

    |    this_MAPPING_TYPE_24=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_24);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_24, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_24()); 
    }

    |    this_OPTION_TYPE_25=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_25);
    }

    { 
    newLeafNode(this_OPTION_TYPE_25, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_25()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE_NUMBER
    | RULE_WS
    | RULE_SEMICOLON
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_HASH
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_26=RULE_REST    {
		$current.merge(this_REST_26);
    }

    { 
    newLeafNode(this_REST_26, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_27=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_27);
    }

    { 
    newLeafNode(this_IDENT_DOT_27, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_28=RULE_IDENT    {
		$current.merge(this_IDENT_28);
    }

    { 
    newLeafNode(this_IDENT_28, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_29=RULE_NUMBER    {
		$current.merge(this_NUMBER_29);
    }

    { 
    newLeafNode(this_NUMBER_29, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_30=RULE_WS    {
		$current.merge(this_WS_30);
    }

    { 
    newLeafNode(this_WS_30, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_SEMICOLON_31=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_31);
    }

    { 
    newLeafNode(this_SEMICOLON_31, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_COMMA_32=RULE_COMMA    {
		$current.merge(this_COMMA_32);
    }

    { 
    newLeafNode(this_COMMA_32, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
    }

    |    this_MINUS_33=RULE_MINUS    {
		$current.merge(this_MINUS_33);
    }

    { 
    newLeafNode(this_MINUS_33, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
    }

    |    this_PLUS_34=RULE_PLUS    {
		$current.merge(this_PLUS_34);
    }

    { 
    newLeafNode(this_PLUS_34, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
    }

    |    this_LPAREN_35=RULE_LPAREN    {
		$current.merge(this_LPAREN_35);
    }

    { 
    newLeafNode(this_LPAREN_35, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RPAREN_36=RULE_RPAREN    {
		$current.merge(this_RPAREN_36);
    }

    { 
    newLeafNode(this_RPAREN_36, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_QUESTI_37=RULE_QUESTI    {
		$current.merge(this_QUESTI_37);
    }

    { 
    newLeafNode(this_QUESTI_37, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
    }

    |    this_NOT_38=RULE_NOT    {
		$current.merge(this_NOT_38);
    }

    { 
    newLeafNode(this_NOT_38, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
    }

    |    this_BAND_39=RULE_BAND    {
		$current.merge(this_BAND_39);
    }

    { 
    newLeafNode(this_BAND_39, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
    }

    |    this_HASH_40=RULE_HASH    {
		$current.merge(this_HASH_40);
    }

    { 
    newLeafNode(this_HASH_40, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_1_0_14()); 
    }

    |    this_CARET_41=RULE_CARET    {
		$current.merge(this_CARET_41);
    }

    { 
    newLeafNode(this_CARET_41, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_1_0_15()); 
    }

    |    this_EQUALS_42=RULE_EQUALS    {
		$current.merge(this_EQUALS_42);
    }

    { 
    newLeafNode(this_EQUALS_42, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_1_0_16()); 
    }

    |    this_LESS_THAN_43=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_43);
    }

    { 
    newLeafNode(this_LESS_THAN_43, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_17()); 
    }

    |    this_MORE_THAN_44=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_44);
    }

    { 
    newLeafNode(this_MORE_THAN_44, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_18()); 
    }

    |    this_AND_45=RULE_AND    {
		$current.merge(this_AND_45);
    }

    { 
    newLeafNode(this_AND_45, grammarAccess.getIfSqlValueAccess().getANDTerminalRuleCall_1_0_19()); 
    }

    |    this_OR_46=RULE_OR    {
		$current.merge(this_OR_46);
    }

    { 
    newLeafNode(this_OR_46, grammarAccess.getIfSqlValueAccess().getORTerminalRuleCall_1_0_20()); 
    }

    |    this_ESC_CHAR_47=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_47);
    }

    { 
    newLeafNode(this_ESC_CHAR_47, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_21()); 
    }

    |    this_ON_OFF_48=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_48);
    }

    { 
    newLeafNode(this_ON_OFF_48, grammarAccess.getIfSqlValueAccess().getON_OFFTerminalRuleCall_1_0_22()); 
    }

    |    this_STATEMEN_TYPE_49=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_49);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_49, grammarAccess.getIfSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_23()); 
    }

    |    this_MAPPING_TYPE_50=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_50);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_50, grammarAccess.getIfSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_24()); 
    }

    |    this_OPTION_TYPE_51=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_51);
    }

    { 
    newLeafNode(this_OPTION_TYPE_51, grammarAccess.getIfSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_25()); 
    }
))*)
    ;





// Entry rule entryRuleIfMetaSql
entryRuleIfMetaSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfMetaSqlRule()); }
	 iv_ruleIfMetaSql=ruleIfMetaSql 
	 { $current=$iv_ruleIfMetaSql.current; } 
	 EOF 
;

// Rule IfMetaSql
ruleIfMetaSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getIfMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
	    }
		lv_ifs_1_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_1_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_2=RULE_BOR
    { 
    newLeafNode(this_BOR_2, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
	    }
		lv_ifs_3_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_3_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_4_0=RULE_QUESTI
		{
			newLeafNode(lv_type_4_0, grammarAccess.getIfMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"QUESTI");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
	    }
		lv_cond_5_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BOR_6=RULE_BOR
    { 
    newLeafNode(this_BOR_6, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
	    }
		lv_ifs_7_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_7_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_8=RULE_BOR
    { 
    newLeafNode(this_BOR_8, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
	    }
		lv_ifs_9_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_9_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_10_0=RULE_BAND
		{
			newLeafNode(lv_type_10_0, grammarAccess.getIfMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"BAND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
	    }
		lv_ifs_11_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_11_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_12=RULE_BOR
    { 
    newLeafNode(this_BOR_12, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
	    }
		lv_ifs_13_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_13_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_14_0=RULE_BOR
		{
			newLeafNode(lv_type_14_0, grammarAccess.getIfMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"BOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
	    }
		lv_ifs_15_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_15_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_16=RULE_BOR
    { 
    newLeafNode(this_BOR_16, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
	    }
		lv_ifs_17_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_17_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleIfSqlCond
entryRuleIfSqlCond returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlCondRule()); }
	 iv_ruleIfSqlCond=ruleIfSqlCond 
	 { $current=$iv_ruleIfSqlCond.current; } 
	 EOF 
;

// Rule IfSqlCond
ruleIfSqlCond returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool1IfSqlBoolParserRuleCall_1_0()); 
	    }
		lv_bool1_1_0=ruleIfSqlBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
	        }
       		set(
       			$current, 
       			"bool1",
        		lv_bool1_1_0, 
        		"IfSqlBool");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_2()); 
    }
)*((
(
(
		lv_oper_3_1=RULE_AND
		{
			newLeafNode(lv_oper_3_1, grammarAccess.getIfSqlCondAccess().getOperANDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlCondRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"oper",
        		lv_oper_3_1, 
        		"AND");
	    }

    |		lv_oper_3_2=RULE_OR
		{
			newLeafNode(lv_oper_3_2, grammarAccess.getIfSqlCondAccess().getOperORTerminalRuleCall_3_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlCondRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"oper",
        		lv_oper_3_2, 
        		"OR");
	    }

)

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool2IfSqlBoolParserRuleCall_3_2_0()); 
	    }
		lv_bool2_5_0=ruleIfSqlBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
	        }
       		add(
       			$current, 
       			"bool2",
        		lv_bool2_5_0, 
        		"IfSqlBool");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_3()); 
    }
)*)*)
;





// Entry rule entryRuleIfSqlBool
entryRuleIfSqlBool returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlBoolRule()); }
	 iv_ruleIfSqlBool=ruleIfSqlBool 
	 { $current=$iv_ruleIfSqlBool.current; } 
	 EOF 
;

// Rule IfSqlBool
ruleIfSqlBool returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_not_0_0=RULE_NOT
		{
			newLeafNode(lv_not_0_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getIfSqlBoolAccess().getSTRINGTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCnstConstantParserRuleCall_0_2_0()); 
	    }
		lv_cnst_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_2_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_not_3_0=RULE_NOT
		{
			newLeafNode(lv_not_3_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getIfSqlBoolAccess().getCOLONTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getIdentIdentifierParserRuleCall_1_2_0()); 
	    }
		lv_ident_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_not_6_0=RULE_NOT
		{
			newLeafNode(lv_not_6_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_LPAREN_7=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_7, grammarAccess.getIfSqlBoolAccess().getLPARENTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCondIfSqlCondParserRuleCall_2_2_0()); 
	    }
		lv_cond_8_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_8_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_9=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getIfSqlBoolAccess().getRPARENTerminalRuleCall_2_3()); 
    }
))
;





// Entry rule entryRuleOrdSql
entryRuleOrdSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSqlRule()); }
	 iv_ruleOrdSql=ruleOrdSql 
	 { $current=$iv_ruleOrdSql.current; } 
	 EOF 
;

// Rule OrdSql
ruleOrdSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSqlAccess().getSqlsOrdSql2ParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleOrdSql2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"OrdSql2");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleOrdSql2
entryRuleOrdSql2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSql2Rule()); }
	 iv_ruleOrdSql2=ruleOrdSql2 
	 { $current=$iv_ruleOrdSql2.current; } 
	 EOF 
;

// Rule OrdSql2
ruleOrdSql2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getValueOrdSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleOrdSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"OrdSqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getOrdSql2Access().getSTRINGTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getCnstConstantParserRuleCall_1_1_0()); 
	    }
		lv_cnst_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_2_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getOrdSql2Access().getCOLONTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getIdentIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_ident_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_PERCENT_5=RULE_PERCENT
    { 
    newLeafNode(this_PERCENT_5, grammarAccess.getOrdSql2Access().getPERCENTTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getDbcolDatabaseColumnParserRuleCall_3_1_0()); 
	    }
		lv_dbcol_6_0=ruleDatabaseColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"dbcol",
        		lv_dbcol_6_0, 
        		"DatabaseColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOrdSqlValue
entryRuleOrdSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSqlValueRule()); } 
	 iv_ruleOrdSqlValue=ruleOrdSqlValue 
	 { $current=$iv_ruleOrdSqlValue.current.getText(); }  
	 EOF 
;

// Rule OrdSqlValue
ruleOrdSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_SEMICOLON_5=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_5);
    }

    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_LBRACE_11=RULE_LBRACE    {
		$current.merge(this_LBRACE_11);
    }

    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_0_11()); 
    }

    |    this_QUESTI_12=RULE_QUESTI    {
		$current.merge(this_QUESTI_12);
    }

    { 
    newLeafNode(this_QUESTI_12, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_0_12()); 
    }

    |    this_NOT_13=RULE_NOT    {
		$current.merge(this_NOT_13);
    }

    { 
    newLeafNode(this_NOT_13, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_0_13()); 
    }

    |    this_BAND_14=RULE_BAND    {
		$current.merge(this_BAND_14);
    }

    { 
    newLeafNode(this_BAND_14, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_0_14()); 
    }

    |    this_BOR_15=RULE_BOR    {
		$current.merge(this_BOR_15);
    }

    { 
    newLeafNode(this_BOR_15, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_0_15()); 
    }

    |    this_HASH_16=RULE_HASH    {
		$current.merge(this_HASH_16);
    }

    { 
    newLeafNode(this_HASH_16, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_0_16()); 
    }

    |    this_AT_17=RULE_AT    {
		$current.merge(this_AT_17);
    }

    { 
    newLeafNode(this_AT_17, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_0_17()); 
    }

    |    this_CARET_18=RULE_CARET    {
		$current.merge(this_CARET_18);
    }

    { 
    newLeafNode(this_CARET_18, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_0_18()); 
    }

    |    this_EQUALS_19=RULE_EQUALS    {
		$current.merge(this_EQUALS_19);
    }

    { 
    newLeafNode(this_EQUALS_19, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_0_19()); 
    }

    |    this_LESS_THAN_20=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_20);
    }

    { 
    newLeafNode(this_LESS_THAN_20, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_0_20()); 
    }

    |    this_MORE_THAN_21=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_21);
    }

    { 
    newLeafNode(this_MORE_THAN_21, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_0_21()); 
    }

    |    this_AND_22=RULE_AND    {
		$current.merge(this_AND_22);
    }

    { 
    newLeafNode(this_AND_22, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_0_22()); 
    }

    |    this_OR_23=RULE_OR    {
		$current.merge(this_OR_23);
    }

    { 
    newLeafNode(this_OR_23, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_0_23()); 
    }

    |    this_ESC_CHAR_24=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_24);
    }

    { 
    newLeafNode(this_ESC_CHAR_24, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_0_24()); 
    }

    |    this_ON_OFF_25=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_25);
    }

    { 
    newLeafNode(this_ON_OFF_25, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_0_25()); 
    }

    |    this_STATEMEN_TYPE_26=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_26);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_26, grammarAccess.getOrdSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_0_26()); 
    }

    |    this_MAPPING_TYPE_27=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_27);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_27, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_0_27()); 
    }

    |    this_OPTION_TYPE_28=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_28);
    }

    { 
    newLeafNode(this_OPTION_TYPE_28, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_0_28()); 
    }
)((( RULE_REST
    | RULE_IDENT_DOT
    | RULE_IDENT
    | RULE_NUMBER
    | RULE_WS
    | RULE_SEMICOLON
    | RULE_COMMA
    | RULE_MINUS
    | RULE_PLUS
    | RULE_LPAREN
    | RULE_RPAREN
    | RULE_LBRACE
    | RULE_QUESTI
    | RULE_NOT
    | RULE_BAND
    | RULE_BOR
    | RULE_HASH
    | RULE_AT
    | RULE_CARET
    | RULE_EQUALS
    | RULE_LESS_THAN
    | RULE_MORE_THAN
    | RULE_AND
    | RULE_OR
    | RULE_ESC_CHAR
    | RULE_ON_OFF
    | RULE_STATEMEN_TYPE
    | RULE_MAPPING_TYPE
    | RULE_OPTION_TYPE))=>(    this_REST_29=RULE_REST    {
		$current.merge(this_REST_29);
    }

    { 
    newLeafNode(this_REST_29, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_30=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_30);
    }

    { 
    newLeafNode(this_IDENT_DOT_30, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_31=RULE_IDENT    {
		$current.merge(this_IDENT_31);
    }

    { 
    newLeafNode(this_IDENT_31, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_32=RULE_NUMBER    {
		$current.merge(this_NUMBER_32);
    }

    { 
    newLeafNode(this_NUMBER_32, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_33=RULE_WS    {
		$current.merge(this_WS_33);
    }

    { 
    newLeafNode(this_WS_33, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_SEMICOLON_34=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_34);
    }

    { 
    newLeafNode(this_SEMICOLON_34, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_COMMA_35=RULE_COMMA    {
		$current.merge(this_COMMA_35);
    }

    { 
    newLeafNode(this_COMMA_35, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
    }

    |    this_MINUS_36=RULE_MINUS    {
		$current.merge(this_MINUS_36);
    }

    { 
    newLeafNode(this_MINUS_36, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
    }

    |    this_PLUS_37=RULE_PLUS    {
		$current.merge(this_PLUS_37);
    }

    { 
    newLeafNode(this_PLUS_37, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
    }

    |    this_LPAREN_38=RULE_LPAREN    {
		$current.merge(this_LPAREN_38);
    }

    { 
    newLeafNode(this_LPAREN_38, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RPAREN_39=RULE_RPAREN    {
		$current.merge(this_RPAREN_39);
    }

    { 
    newLeafNode(this_RPAREN_39, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_LBRACE_40=RULE_LBRACE    {
		$current.merge(this_LBRACE_40);
    }

    { 
    newLeafNode(this_LBRACE_40, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_1_0_11()); 
    }

    |    this_QUESTI_41=RULE_QUESTI    {
		$current.merge(this_QUESTI_41);
    }

    { 
    newLeafNode(this_QUESTI_41, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_1_0_12()); 
    }

    |    this_NOT_42=RULE_NOT    {
		$current.merge(this_NOT_42);
    }

    { 
    newLeafNode(this_NOT_42, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_1_0_13()); 
    }

    |    this_BAND_43=RULE_BAND    {
		$current.merge(this_BAND_43);
    }

    { 
    newLeafNode(this_BAND_43, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_1_0_14()); 
    }

    |    this_BOR_44=RULE_BOR    {
		$current.merge(this_BOR_44);
    }

    { 
    newLeafNode(this_BOR_44, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_1_0_15()); 
    }

    |    this_HASH_45=RULE_HASH    {
		$current.merge(this_HASH_45);
    }

    { 
    newLeafNode(this_HASH_45, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_1_0_16()); 
    }

    |    this_AT_46=RULE_AT    {
		$current.merge(this_AT_46);
    }

    { 
    newLeafNode(this_AT_46, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_1_0_17()); 
    }

    |    this_CARET_47=RULE_CARET    {
		$current.merge(this_CARET_47);
    }

    { 
    newLeafNode(this_CARET_47, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_1_0_18()); 
    }

    |    this_EQUALS_48=RULE_EQUALS    {
		$current.merge(this_EQUALS_48);
    }

    { 
    newLeafNode(this_EQUALS_48, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_1_0_19()); 
    }

    |    this_LESS_THAN_49=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_49);
    }

    { 
    newLeafNode(this_LESS_THAN_49, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_20()); 
    }

    |    this_MORE_THAN_50=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_50);
    }

    { 
    newLeafNode(this_MORE_THAN_50, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_21()); 
    }

    |    this_AND_51=RULE_AND    {
		$current.merge(this_AND_51);
    }

    { 
    newLeafNode(this_AND_51, grammarAccess.getOrdSqlValueAccess().getANDTerminalRuleCall_1_0_22()); 
    }

    |    this_OR_52=RULE_OR    {
		$current.merge(this_OR_52);
    }

    { 
    newLeafNode(this_OR_52, grammarAccess.getOrdSqlValueAccess().getORTerminalRuleCall_1_0_23()); 
    }

    |    this_ESC_CHAR_53=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_53);
    }

    { 
    newLeafNode(this_ESC_CHAR_53, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_24()); 
    }

    |    this_ON_OFF_54=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_54);
    }

    { 
    newLeafNode(this_ON_OFF_54, grammarAccess.getOrdSqlValueAccess().getON_OFFTerminalRuleCall_1_0_25()); 
    }

    |    this_STATEMEN_TYPE_55=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_55);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_55, grammarAccess.getOrdSqlValueAccess().getSTATEMEN_TYPETerminalRuleCall_1_0_26()); 
    }

    |    this_MAPPING_TYPE_56=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_56);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_56, grammarAccess.getOrdSqlValueAccess().getMAPPING_TYPETerminalRuleCall_1_0_27()); 
    }

    |    this_OPTION_TYPE_57=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_57);
    }

    { 
    newLeafNode(this_OPTION_TYPE_57, grammarAccess.getOrdSqlValueAccess().getOPTION_TYPETerminalRuleCall_1_0_28()); 
    }
))*)
    ;





// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	 iv_ruleColumn=ruleColumn 
	 { $current=$iv_ruleColumn.current; } 
	 EOF 
;

// Rule Column
ruleColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getColumnAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

    |		lv_name_0_3=RULE_NUMBER
		{
			newLeafNode(lv_name_0_3, grammarAccess.getColumnAccess().getNameNUMBERTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"NUMBER");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_1=RULE_CARET
    { 
    newLeafNode(this_CARET_1, grammarAccess.getColumnAccess().getCARETTerminalRuleCall_1_0()); 
    }
)((
(
RULE_IDENT

)
)=>
(
		lv_type_2_0=RULE_IDENT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getColumnAccess().getTypeIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"IDENT");
	    }

)
)?(((	RULE_CARET)=>this_CARET_3=RULE_CARET
    { 
    newLeafNode(this_CARET_3, grammarAccess.getColumnAccess().getCARETTerminalRuleCall_1_2_0()); 
    }
)(
(
(
		lv_vals_4_1=RULE_IDENT
		{
			newLeafNode(lv_vals_4_1, grammarAccess.getColumnAccess().getValsIDENTTerminalRuleCall_1_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_4_1, 
        		"IDENT");
	    }

    |		lv_vals_4_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_4_2, grammarAccess.getColumnAccess().getValsNUMBERTerminalRuleCall_1_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_4_2, 
        		"NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_case_0_1=RULE_PLUS
		{
			newLeafNode(lv_case_0_1, grammarAccess.getConstantAccess().getCasePLUSTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_0_1, 
        		"PLUS");
	    }

    |		lv_case_0_2=RULE_MINUS
		{
			newLeafNode(lv_case_0_2, grammarAccess.getConstantAccess().getCaseMINUSTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_0_2, 
        		"MINUS");
	    }

)

)
)?(
(
(
		lv_name_1_1=RULE_IDENT
		{
			newLeafNode(lv_name_1_1, grammarAccess.getConstantAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"IDENT");
	    }

    |		lv_name_1_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_1_2, grammarAccess.getConstantAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"IDENT_DOT");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_2=RULE_CARET
    { 
    newLeafNode(this_CARET_2, grammarAccess.getConstantAccess().getCARETTerminalRuleCall_2_0()); 
    }
)((
(
RULE_IDENT

)
)=>
(
		lv_type_3_0=RULE_IDENT
		{
			newLeafNode(lv_type_3_0, grammarAccess.getConstantAccess().getTypeIDENTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"IDENT");
	    }

)
)?(((	RULE_CARET)=>this_CARET_4=RULE_CARET
    { 
    newLeafNode(this_CARET_4, grammarAccess.getConstantAccess().getCARETTerminalRuleCall_2_2_0()); 
    }
)(
(
(
		lv_vals_5_1=RULE_IDENT
		{
			newLeafNode(lv_vals_5_1, grammarAccess.getConstantAccess().getValsIDENTTerminalRuleCall_2_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_5_1, 
        		"IDENT");
	    }

    |		lv_vals_5_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_5_2, grammarAccess.getConstantAccess().getValsNUMBERTerminalRuleCall_2_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_5_2, 
        		"NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current; } 
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_mode_0_1=RULE_EQUALS
		{
			newLeafNode(lv_mode_0_1, grammarAccess.getIdentifierAccess().getModeEQUALSTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_1, 
        		"EQUALS");
	    }

    |		lv_mode_0_2=RULE_LESS_THAN
		{
			newLeafNode(lv_mode_0_2, grammarAccess.getIdentifierAccess().getModeLESS_THANTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_2, 
        		"LESS_THAN");
	    }

    |		lv_mode_0_3=RULE_MORE_THAN
		{
			newLeafNode(lv_mode_0_3, grammarAccess.getIdentifierAccess().getModeMORE_THANTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_3, 
        		"MORE_THAN");
	    }

)

)
)?(
(
(
		lv_case_1_1=RULE_PLUS
		{
			newLeafNode(lv_case_1_1, grammarAccess.getIdentifierAccess().getCasePLUSTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_1, 
        		"PLUS");
	    }

    |		lv_case_1_2=RULE_MINUS
		{
			newLeafNode(lv_case_1_2, grammarAccess.getIdentifierAccess().getCaseMINUSTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_2, 
        		"MINUS");
	    }

)

)
)?(
(
(
		lv_name_2_1=RULE_IDENT
		{
			newLeafNode(lv_name_2_1, grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"IDENT");
	    }

    |		lv_name_2_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_2_2, grammarAccess.getIdentifierAccess().getNameIDENT_DOTTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"IDENT_DOT");
	    }

    |		lv_name_2_3=RULE_NUMBER
		{
			newLeafNode(lv_name_2_3, grammarAccess.getIdentifierAccess().getNameNUMBERTerminalRuleCall_2_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_3, 
        		"NUMBER");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_3=RULE_CARET
    { 
    newLeafNode(this_CARET_3, grammarAccess.getIdentifierAccess().getCARETTerminalRuleCall_3_0()); 
    }
)((
(
RULE_IDENT

)
)=>
(
		lv_type_4_0=RULE_IDENT
		{
			newLeafNode(lv_type_4_0, grammarAccess.getIdentifierAccess().getTypeIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"IDENT");
	    }

)
)?(((	RULE_CARET)=>this_CARET_5=RULE_CARET
    { 
    newLeafNode(this_CARET_5, grammarAccess.getIdentifierAccess().getCARETTerminalRuleCall_3_2_0()); 
    }
)(
(
(
		lv_vals_6_1=RULE_IDENT
		{
			newLeafNode(lv_vals_6_1, grammarAccess.getIdentifierAccess().getValsIDENTTerminalRuleCall_3_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_6_1, 
        		"IDENT");
	    }

    |		lv_vals_6_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_6_2, grammarAccess.getIdentifierAccess().getValsNUMBERTerminalRuleCall_3_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_6_2, 
        		"NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleDatabaseColumn
entryRuleDatabaseColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseColumnRule()); }
	 iv_ruleDatabaseColumn=ruleDatabaseColumn 
	 { $current=$iv_ruleDatabaseColumn.current; } 
	 EOF 
;

// Rule DatabaseColumn
ruleDatabaseColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseColumnAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)
;





// Entry rule entryRuleDatabaseTable
entryRuleDatabaseTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseTableRule()); }
	 iv_ruleDatabaseTable=ruleDatabaseTable 
	 { $current=$iv_ruleDatabaseTable.current; } 
	 EOF 
;

// Rule DatabaseTable
ruleDatabaseTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getDatabaseTableAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getDatabaseTableAccess().getNameIDENT_DOTTerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDatabaseTableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)
;





// Entry rule entryRuleMappingRule
entryRuleMappingRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRuleRule()); }
	 iv_ruleMappingRule=ruleMappingRule 
	 { $current=$iv_ruleMappingRule.current; } 
	 EOF 
;

// Rule MappingRule
ruleMappingRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMappingRuleAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getMappingRuleAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_type_2_0=RULE_MAPPING_TYPE
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMappingRuleAccess().getTypeMAPPING_TYPETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"MAPPING_TYPE");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getMappingRuleAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getMappingRuleAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getMappingRuleAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getMappingRuleAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingRuleAccess().getMappingMappingParserRuleCall_6_0()); 
	    }
		lv_mapping_7_0=ruleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRuleRule());
	        }
       		set(
       			$current, 
       			"mapping",
        		lv_mapping_7_0, 
        		"Mapping");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getMappingRuleAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	 iv_ruleMapping=ruleMapping 
	 { $current=$iv_ruleMapping.current; } 
	 EOF 
;

// Rule Mapping
ruleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getMappingAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_1_0()); 
	    }
		lv_mappingItems_1_0=ruleMappingItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"mappingItems",
        		lv_mappingItems_1_0, 
        		"MappingItem");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getMappingAccess().getWSTerminalRuleCall_2_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_2_1_0()); 
	    }
		lv_mappingItems_3_0=ruleMappingItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"mappingItems",
        		lv_mappingItems_3_0, 
        		"MappingItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getMappingAccess().getWSTerminalRuleCall_3()); 
    }
)*)
;





// Entry rule entryRuleMappingItem
entryRuleMappingItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingItemRule()); }
	 iv_ruleMappingItem=ruleMappingItem 
	 { $current=$iv_ruleMappingItem.current; } 
	 EOF 
;

// Rule MappingItem
ruleMappingItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_col_0_1=RULE_IDENT
		{
			newLeafNode(lv_col_0_1, grammarAccess.getMappingItemAccess().getColIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"col",
        		lv_col_0_1, 
        		"IDENT");
	    }

    |		lv_col_0_2=RULE_NUMBER
		{
			newLeafNode(lv_col_0_2, grammarAccess.getMappingItemAccess().getColNUMBERTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"col",
        		lv_col_0_2, 
        		"NUMBER");
	    }

)

)
)(this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_0()); 
    }
(
(
		lv_type_2_0=RULE_IDENT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMappingItemAccess().getTypeIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"IDENT");
	    }

)
)?(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingItemAccess().getAttrMappingColumnParserRuleCall_1_2_1_0()); 
	    }
		lv_attr_4_0=ruleMappingColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingItemRule());
	        }
       		set(
       			$current, 
       			"attr",
        		lv_attr_4_0, 
        		"MappingColumn");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?)
;





// Entry rule entryRuleMappingColumn
entryRuleMappingColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingColumnRule()); }
	 iv_ruleMappingColumn=ruleMappingColumn 
	 { $current=$iv_ruleMappingColumn.current; } 
	 EOF 
;

// Rule MappingColumn
ruleMappingColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getMappingColumnAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getMappingColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)(this_CARET_1=RULE_CARET
    { 
    newLeafNode(this_CARET_1, grammarAccess.getMappingColumnAccess().getCARETTerminalRuleCall_1_0()); 
    }
(
(
(
		lv_vals_2_1=RULE_IDENT
		{
			newLeafNode(lv_vals_2_1, grammarAccess.getMappingColumnAccess().getValsIDENTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_2_1, 
        		"IDENT");
	    }

    |		lv_vals_2_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_2_2, grammarAccess.getMappingColumnAccess().getValsNUMBERTerminalRuleCall_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_2_2, 
        		"NUMBER");
	    }

)

)
))*)
;





// Entry rule entryRuleOptionalFeature
entryRuleOptionalFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionalFeatureRule()); }
	 iv_ruleOptionalFeature=ruleOptionalFeature 
	 { $current=$iv_ruleOptionalFeature.current; } 
	 EOF 
;

// Rule OptionalFeature
ruleOptionalFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOptionalFeatureAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getOptionalFeatureAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		lv_type_2_0=RULE_OPTION_TYPE
		{
			newLeafNode(lv_type_2_0, grammarAccess.getOptionalFeatureAccess().getTypeOPTION_TYPETerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OPTION_TYPE");
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getOptionalFeatureAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getOptionalFeatureAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getOptionalFeatureAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getOptionalFeatureAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getOptionFeatureValueParserRuleCall_6_0()); 
	    }
		lv_option_7_0=ruleFeatureValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_7_0, 
        		"FeatureValue");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getOptionalFeatureAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleFeatureValue
entryRuleFeatureValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureValueRule()); } 
	 iv_ruleFeatureValue=ruleFeatureValue 
	 { $current=$iv_ruleFeatureValue.current.getText(); }  
	 EOF 
;

// Rule FeatureValue
ruleFeatureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getFeatureValueAccess().getRESTTerminalRuleCall_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getFeatureValueAccess().getIDENT_DOTTerminalRuleCall_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getFeatureValueAccess().getIDENTTerminalRuleCall_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getFeatureValueAccess().getNUMBERTerminalRuleCall_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getFeatureValueAccess().getWSTerminalRuleCall_4()); 
    }

    |    this_COLON_5=RULE_COLON    {
		$current.merge(this_COLON_5);
    }

    { 
    newLeafNode(this_COLON_5, grammarAccess.getFeatureValueAccess().getCOLONTerminalRuleCall_5()); 
    }

    |    this_STRING_6=RULE_STRING    {
		$current.merge(this_STRING_6);
    }

    { 
    newLeafNode(this_STRING_6, grammarAccess.getFeatureValueAccess().getSTRINGTerminalRuleCall_6()); 
    }

    |    this_COMMA_7=RULE_COMMA    {
		$current.merge(this_COMMA_7);
    }

    { 
    newLeafNode(this_COMMA_7, grammarAccess.getFeatureValueAccess().getCOMMATerminalRuleCall_7()); 
    }

    |    this_MINUS_8=RULE_MINUS    {
		$current.merge(this_MINUS_8);
    }

    { 
    newLeafNode(this_MINUS_8, grammarAccess.getFeatureValueAccess().getMINUSTerminalRuleCall_8()); 
    }

    |    this_PLUS_9=RULE_PLUS    {
		$current.merge(this_PLUS_9);
    }

    { 
    newLeafNode(this_PLUS_9, grammarAccess.getFeatureValueAccess().getPLUSTerminalRuleCall_9()); 
    }

    |    this_LPAREN_10=RULE_LPAREN    {
		$current.merge(this_LPAREN_10);
    }

    { 
    newLeafNode(this_LPAREN_10, grammarAccess.getFeatureValueAccess().getLPARENTerminalRuleCall_10()); 
    }

    |    this_RPAREN_11=RULE_RPAREN    {
		$current.merge(this_RPAREN_11);
    }

    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getFeatureValueAccess().getRPARENTerminalRuleCall_11()); 
    }

    |    this_LBRACE_12=RULE_LBRACE    {
		$current.merge(this_LBRACE_12);
    }

    { 
    newLeafNode(this_LBRACE_12, grammarAccess.getFeatureValueAccess().getLBRACETerminalRuleCall_12()); 
    }

    |    this_RBRACE_13=RULE_RBRACE    {
		$current.merge(this_RBRACE_13);
    }

    { 
    newLeafNode(this_RBRACE_13, grammarAccess.getFeatureValueAccess().getRBRACETerminalRuleCall_13()); 
    }

    |    this_QUESTI_14=RULE_QUESTI    {
		$current.merge(this_QUESTI_14);
    }

    { 
    newLeafNode(this_QUESTI_14, grammarAccess.getFeatureValueAccess().getQUESTITerminalRuleCall_14()); 
    }

    |    this_NOT_15=RULE_NOT    {
		$current.merge(this_NOT_15);
    }

    { 
    newLeafNode(this_NOT_15, grammarAccess.getFeatureValueAccess().getNOTTerminalRuleCall_15()); 
    }

    |    this_BAND_16=RULE_BAND    {
		$current.merge(this_BAND_16);
    }

    { 
    newLeafNode(this_BAND_16, grammarAccess.getFeatureValueAccess().getBANDTerminalRuleCall_16()); 
    }

    |    this_BOR_17=RULE_BOR    {
		$current.merge(this_BOR_17);
    }

    { 
    newLeafNode(this_BOR_17, grammarAccess.getFeatureValueAccess().getBORTerminalRuleCall_17()); 
    }

    |    this_HASH_18=RULE_HASH    {
		$current.merge(this_HASH_18);
    }

    { 
    newLeafNode(this_HASH_18, grammarAccess.getFeatureValueAccess().getHASHTerminalRuleCall_18()); 
    }

    |    this_AT_19=RULE_AT    {
		$current.merge(this_AT_19);
    }

    { 
    newLeafNode(this_AT_19, grammarAccess.getFeatureValueAccess().getATTerminalRuleCall_19()); 
    }

    |    this_CARET_20=RULE_CARET    {
		$current.merge(this_CARET_20);
    }

    { 
    newLeafNode(this_CARET_20, grammarAccess.getFeatureValueAccess().getCARETTerminalRuleCall_20()); 
    }

    |    this_EQUALS_21=RULE_EQUALS    {
		$current.merge(this_EQUALS_21);
    }

    { 
    newLeafNode(this_EQUALS_21, grammarAccess.getFeatureValueAccess().getEQUALSTerminalRuleCall_21()); 
    }

    |    this_LESS_THAN_22=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_22);
    }

    { 
    newLeafNode(this_LESS_THAN_22, grammarAccess.getFeatureValueAccess().getLESS_THANTerminalRuleCall_22()); 
    }

    |    this_MORE_THAN_23=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_23);
    }

    { 
    newLeafNode(this_MORE_THAN_23, grammarAccess.getFeatureValueAccess().getMORE_THANTerminalRuleCall_23()); 
    }

    |    this_PERCENT_24=RULE_PERCENT    {
		$current.merge(this_PERCENT_24);
    }

    { 
    newLeafNode(this_PERCENT_24, grammarAccess.getFeatureValueAccess().getPERCENTTerminalRuleCall_24()); 
    }

    |    this_AND_25=RULE_AND    {
		$current.merge(this_AND_25);
    }

    { 
    newLeafNode(this_AND_25, grammarAccess.getFeatureValueAccess().getANDTerminalRuleCall_25()); 
    }

    |    this_OR_26=RULE_OR    {
		$current.merge(this_OR_26);
    }

    { 
    newLeafNode(this_OR_26, grammarAccess.getFeatureValueAccess().getORTerminalRuleCall_26()); 
    }

    |    this_ESC_CHAR_27=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_27);
    }

    { 
    newLeafNode(this_ESC_CHAR_27, grammarAccess.getFeatureValueAccess().getESC_CHARTerminalRuleCall_27()); 
    }

    |    this_ON_OFF_28=RULE_ON_OFF    {
		$current.merge(this_ON_OFF_28);
    }

    { 
    newLeafNode(this_ON_OFF_28, grammarAccess.getFeatureValueAccess().getON_OFFTerminalRuleCall_28()); 
    }

    |    this_STATEMEN_TYPE_29=RULE_STATEMEN_TYPE    {
		$current.merge(this_STATEMEN_TYPE_29);
    }

    { 
    newLeafNode(this_STATEMEN_TYPE_29, grammarAccess.getFeatureValueAccess().getSTATEMEN_TYPETerminalRuleCall_29()); 
    }

    |    this_MAPPING_TYPE_30=RULE_MAPPING_TYPE    {
		$current.merge(this_MAPPING_TYPE_30);
    }

    { 
    newLeafNode(this_MAPPING_TYPE_30, grammarAccess.getFeatureValueAccess().getMAPPING_TYPETerminalRuleCall_30()); 
    }

    |    this_OPTION_TYPE_31=RULE_OPTION_TYPE    {
		$current.merge(this_OPTION_TYPE_31);
    }

    { 
    newLeafNode(this_OPTION_TYPE_31, grammarAccess.getFeatureValueAccess().getOPTION_TYPETerminalRuleCall_31()); 
    }
)+
    ;





// Entry rule entryRulePojoType
entryRulePojoType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoTypeRule()); }
	 iv_rulePojoType=rulePojoType 
	 { $current=$iv_rulePojoType.current; } 
	 EOF 
;

// Rule PojoType
rulePojoType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
(
		lv_native_0_1=	'_char' 
    {
        newLeafNode(lv_native_0_1, grammarAccess.getPojoTypeAccess().getNative_charKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_1, null);
	    }

    |		lv_native_0_2=	'_byte' 
    {
        newLeafNode(lv_native_0_2, grammarAccess.getPojoTypeAccess().getNative_byteKeyword_0_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_2, null);
	    }

    |		lv_native_0_3=	'_short' 
    {
        newLeafNode(lv_native_0_3, grammarAccess.getPojoTypeAccess().getNative_shortKeyword_0_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_3, null);
	    }

    |		lv_native_0_4=	'_int' 
    {
        newLeafNode(lv_native_0_4, grammarAccess.getPojoTypeAccess().getNative_intKeyword_0_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_4, null);
	    }

    |		lv_native_0_5=	'_long' 
    {
        newLeafNode(lv_native_0_5, grammarAccess.getPojoTypeAccess().getNative_longKeyword_0_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_5, null);
	    }

    |		lv_native_0_6=	'_float' 
    {
        newLeafNode(lv_native_0_6, grammarAccess.getPojoTypeAccess().getNative_floatKeyword_0_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_6, null);
	    }

    |		lv_native_0_7=	'_double' 
    {
        newLeafNode(lv_native_0_7, grammarAccess.getPojoTypeAccess().getNative_doubleKeyword_0_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_7, null);
	    }

    |		lv_native_0_8=	'_boolean' 
    {
        newLeafNode(lv_native_0_8, grammarAccess.getPojoTypeAccess().getNative_booleanKeyword_0_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_0_8, null);
	    }

)

)
)
    |((this_COLON_1=RULE_COLON
    { 
    newLeafNode(this_COLON_1, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_1_0_0()); 
    }
((this_COLON_2=RULE_COLON
    { 
    newLeafNode(this_COLON_2, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_1_0_1_0_0()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
        }
	otherlv_3=RULE_IDENT
	{
		newLeafNode(otherlv_3, grammarAccess.getPojoTypeAccess().getRefPojoEntityCrossReference_0_1_0_1_0_1_0()); 
	}

)
))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPojoTypeAccess().getTypeJvmTypeCrossReference_0_1_0_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(this_LESS_THAN_5=RULE_LESS_THAN
    { 
    newLeafNode(this_LESS_THAN_5, grammarAccess.getPojoTypeAccess().getLESS_THANTerminalRuleCall_0_1_1_0()); 
    }
((this_COLON_6=RULE_COLON
    { 
    newLeafNode(this_COLON_6, grammarAccess.getPojoTypeAccess().getCOLONTerminalRuleCall_0_1_1_1_0_0()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
        }
	otherlv_7=RULE_IDENT
	{
		newLeafNode(otherlv_7, grammarAccess.getPojoTypeAccess().getGrefPojoEntityCrossReference_0_1_1_1_0_1_0()); 
	}

)
))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPojoTypeAccess().getGtypeJvmTypeCrossReference_0_1_1_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))this_MORE_THAN_9=RULE_MORE_THAN
    { 
    newLeafNode(this_MORE_THAN_9, grammarAccess.getPojoTypeAccess().getMORE_THANTerminalRuleCall_0_1_1_2()); 
    }
)?))(
(
		lv_array_10_0=	'[]' 
    {
        newLeafNode(lv_array_10_0, grammarAccess.getPojoTypeAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoTypeRule());
	        }
       		setWithLastConsumed($current, "array", true, "[]");
	    }

)
)?)
;





// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	 iv_rulePackageDeclaration=rulePackageDeclaration 
	 { $current=$iv_rulePackageDeclaration.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
    }
(
(
(
		lv_name_1_1=RULE_IDENT
		{
			newLeafNode(lv_name_1_1, grammarAccess.getPackageDeclarationAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"IDENT");
	    }

    |		lv_name_1_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_1_2, grammarAccess.getPackageDeclarationAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"IDENT_DOT");
	    }

)

)
)(	otherlv_2='suffix' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getSuffixKeyword_2_0());
    }
(
(
(
		lv_suffix_3_1=RULE_IDENT
		{
			newLeafNode(lv_suffix_3_1, grammarAccess.getPackageDeclarationAccess().getSuffixIDENTTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"suffix",
        		lv_suffix_3_1, 
        		"IDENT");
	    }

    |		lv_suffix_3_2=RULE_NUMBER
		{
			newLeafNode(lv_suffix_3_2, grammarAccess.getPackageDeclarationAccess().getSuffixNUMBERTerminalRuleCall_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDeclarationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"suffix",
        		lv_suffix_3_2, 
        		"NUMBER");
	    }

)

)
))?this_LBRACE_4=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_4, grammarAccess.getPackageDeclarationAccess().getLBRACETerminalRuleCall_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsAbstractPojoEntityParserRuleCall_4_0()); 
	    }
		lv_elements_5_0=ruleAbstractPojoEntity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"AbstractPojoEntity");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_RBRACE_6=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_6, grammarAccess.getPackageDeclarationAccess().getRBRACETerminalRuleCall_5()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleAbstractPojoEntity
entryRuleAbstractPojoEntity returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getAbstractPojoEntityRule()); }
	 iv_ruleAbstractPojoEntity=ruleAbstractPojoEntity 
	 { $current=$iv_ruleAbstractPojoEntity.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule AbstractPojoEntity
ruleAbstractPojoEntity returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getPackageDeclarationParserRuleCall_0()); 
    }
    this_PackageDeclaration_0=rulePackageDeclaration
    { 
        $current = $this_PackageDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getPojoEntityParserRuleCall_1()); 
    }
    this_PojoEntity_1=rulePojoEntity
    { 
        $current = $this_PojoEntity_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImportParserRuleCall_2()); 
    }
    this_Import_2=ruleImport
    { 
        $current = $this_Import_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getImplementsParserRuleCall_3()); 
    }
    this_Implements_3=ruleImplements
    { 
        $current = $this_Implements_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractPojoEntityAccess().getExtendsParserRuleCall_4()); 
    }
    this_Extends_4=ruleExtends
    { 
        $current = $this_Extends_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildcard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleImplements
entryRuleImplements returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getImplementsRule()); }
	 iv_ruleImplements=ruleImplements 
	 { $current=$iv_ruleImplements.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Implements
ruleImplements returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='implements' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImplementsAccess().getImplementsKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getImplementsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getImplementsAccess().getImplementsJvmTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleExtends
entryRuleExtends returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getExtendsRule()); }
	 iv_ruleExtends=ruleExtends 
	 { $current=$iv_ruleExtends.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Extends
ruleExtends returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtendsAccess().getExtendsKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtendsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExtendsAccess().getExtendsJvmTypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePojoEntityModifier1
entryRulePojoEntityModifier1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoEntityModifier1Rule()); }
	 iv_rulePojoEntityModifier1=rulePojoEntityModifier1 
	 { $current=$iv_rulePojoEntityModifier1.current; } 
	 EOF 
;

// Rule PojoEntityModifier1
rulePojoEntityModifier1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_final_0_0=	'final' 
    {
        newLeafNode(lv_final_0_0, grammarAccess.getPojoEntityModifier1Access().getFinalFinalKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityModifier1Rule());
	        }
       		setWithLastConsumed($current, "final", true, "final");
	    }

)
)
    |(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getPojoEntityModifier1Access().getAbstractAbstractKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityModifier1Rule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
))
;





// Entry rule entryRulePojoEntityModifier2
entryRulePojoEntityModifier2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoEntityModifier2Rule()); }
	 iv_rulePojoEntityModifier2=rulePojoEntityModifier2 
	 { $current=$iv_rulePojoEntityModifier2.current; } 
	 EOF 
;

// Rule PojoEntityModifier2
rulePojoEntityModifier2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='extends' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPojoEntityModifier2Access().getExtendsKeyword_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
	        }
        }
	otherlv_1=RULE_IDENT
	{
		newLeafNode(otherlv_1, grammarAccess.getPojoEntityModifier2Access().getSuperTypePojoEntityCrossReference_0_1_0()); 
	}

)
))
    |(	otherlv_2='discriminator' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPojoEntityModifier2Access().getDiscriminatorKeyword_1_0());
    }
(
(
(
		lv_discriminator_3_1=RULE_IDENT
		{
			newLeafNode(lv_discriminator_3_1, grammarAccess.getPojoEntityModifier2Access().getDiscriminatorIDENTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"discriminator",
        		lv_discriminator_3_1, 
        		"IDENT");
	    }

    |		lv_discriminator_3_2=RULE_NUMBER
		{
			newLeafNode(lv_discriminator_3_2, grammarAccess.getPojoEntityModifier2Access().getDiscriminatorNUMBERTerminalRuleCall_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"discriminator",
        		lv_discriminator_3_2, 
        		"NUMBER");
	    }

)

)
))
    |(	otherlv_4='serializable' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPojoEntityModifier2Access().getSerializableKeyword_2_0());
    }
(
(
		lv_sernum_5_0=RULE_NUMBER
		{
			newLeafNode(lv_sernum_5_0, grammarAccess.getPojoEntityModifier2Access().getSernumNUMBERTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityModifier2Rule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sernum",
        		lv_sernum_5_0, 
        		"NUMBER");
	    }

)
)))
;





// Entry rule entryRulePojoEntity
entryRulePojoEntity returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPojoEntityRule()); }
	 iv_rulePojoEntity=rulePojoEntity 
	 { $current=$iv_rulePojoEntity.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PojoEntity
rulePojoEntity returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPojoEntityAccess().getModifiers1PojoEntityModifier1ParserRuleCall_0_0()); 
	    }
		lv_modifiers1_0_0=rulePojoEntityModifier1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojoEntityRule());
	        }
       		add(
       			$current, 
       			"modifiers1",
        		lv_modifiers1_0_0, 
        		"PojoEntityModifier1");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='pojo' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPojoEntityAccess().getPojoKeyword_1());
    }
(
(
		lv_name_2_0=RULE_IDENT
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPojoEntityAccess().getNameIDENTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"IDENT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPojoEntityAccess().getModifiers2PojoEntityModifier2ParserRuleCall_3_0()); 
	    }
		lv_modifiers2_3_0=rulePojoEntityModifier2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojoEntityRule());
	        }
       		add(
       			$current, 
       			"modifiers2",
        		lv_modifiers2_3_0, 
        		"PojoEntityModifier2");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_LBRACE_4=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_4, grammarAccess.getPojoEntityAccess().getLBRACETerminalRuleCall_4()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPojoEntityAccess().getFeaturesPojoPropertyParserRuleCall_5_0()); 
	    }
		lv_features_5_0=rulePojoProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojoEntityRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"PojoProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)*this_RBRACE_6=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_6, grammarAccess.getPojoEntityAccess().getRBRACETerminalRuleCall_6()); 
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePojoPropertyModifier
entryRulePojoPropertyModifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPojoPropertyModifierRule()); }
	 iv_rulePojoPropertyModifier=rulePojoPropertyModifier 
	 { $current=$iv_rulePojoPropertyModifier.current; } 
	 EOF 
;

// Rule PojoPropertyModifier
rulePojoPropertyModifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_required_0_0=	'required' 
    {
        newLeafNode(lv_required_0_0, grammarAccess.getPojoPropertyModifierAccess().getRequiredRequiredKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
	        }
       		setWithLastConsumed($current, "required", true, "required");
	    }

)
)
    |(
(
		lv_discriminator_1_0=	'discriminator' 
    {
        newLeafNode(lv_discriminator_1_0, grammarAccess.getPojoPropertyModifierAccess().getDiscriminatorDiscriminatorKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
	        }
       		setWithLastConsumed($current, "discriminator", true, "discriminator");
	    }

)
)
    |(
(
		lv_primaryKey_2_0=	'primaryKey' 
    {
        newLeafNode(lv_primaryKey_2_0, grammarAccess.getPojoPropertyModifierAccess().getPrimaryKeyPrimaryKeyKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyModifierRule());
	        }
       		setWithLastConsumed($current, "primaryKey", true, "primaryKey");
	    }

)
))
;





// Entry rule entryRulePojoProperty
entryRulePojoProperty returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getPojoPropertyRule()); }
	 iv_rulePojoProperty=rulePojoProperty 
	 { $current=$iv_rulePojoProperty.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PojoProperty
rulePojoProperty returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPojoPropertyAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)((
(
(
		lv_native_1_1=	'_char' 
    {
        newLeafNode(lv_native_1_1, grammarAccess.getPojoPropertyAccess().getNative_charKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_1, null);
	    }

    |		lv_native_1_2=	'_byte' 
    {
        newLeafNode(lv_native_1_2, grammarAccess.getPojoPropertyAccess().getNative_byteKeyword_1_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_2, null);
	    }

    |		lv_native_1_3=	'_short' 
    {
        newLeafNode(lv_native_1_3, grammarAccess.getPojoPropertyAccess().getNative_shortKeyword_1_0_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_3, null);
	    }

    |		lv_native_1_4=	'_int' 
    {
        newLeafNode(lv_native_1_4, grammarAccess.getPojoPropertyAccess().getNative_intKeyword_1_0_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_4, null);
	    }

    |		lv_native_1_5=	'_long' 
    {
        newLeafNode(lv_native_1_5, grammarAccess.getPojoPropertyAccess().getNative_longKeyword_1_0_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_5, null);
	    }

    |		lv_native_1_6=	'_float' 
    {
        newLeafNode(lv_native_1_6, grammarAccess.getPojoPropertyAccess().getNative_floatKeyword_1_0_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_6, null);
	    }

    |		lv_native_1_7=	'_double' 
    {
        newLeafNode(lv_native_1_7, grammarAccess.getPojoPropertyAccess().getNative_doubleKeyword_1_0_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_7, null);
	    }

    |		lv_native_1_8=	'_boolean' 
    {
        newLeafNode(lv_native_1_8, grammarAccess.getPojoPropertyAccess().getNative_booleanKeyword_1_0_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "native", lv_native_1_8, null);
	    }

)

)
)
    |((this_COLON_2=RULE_COLON
    { 
    newLeafNode(this_COLON_2, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_0_0()); 
    }
((this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_0_1_0_0()); 
    }
((this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_0_1_0_1_0_0()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
        }
	otherlv_5=RULE_IDENT
	{
		newLeafNode(otherlv_5, grammarAccess.getPojoPropertyAccess().getAttrsPojoPropertyCrossReference_1_1_0_1_0_1_0_1_0()); 
	}

)
)*)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
        }
	otherlv_6=RULE_IDENT
	{
		newLeafNode(otherlv_6, grammarAccess.getPojoPropertyAccess().getRefPojoEntityCrossReference_1_1_0_1_0_1_1_0()); 
	}

)
)))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getTypeJvmTypeCrossReference_1_1_0_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))(this_LESS_THAN_8=RULE_LESS_THAN
    { 
    newLeafNode(this_LESS_THAN_8, grammarAccess.getPojoPropertyAccess().getLESS_THANTerminalRuleCall_1_1_1_0()); 
    }
((this_COLON_9=RULE_COLON
    { 
    newLeafNode(this_COLON_9, grammarAccess.getPojoPropertyAccess().getCOLONTerminalRuleCall_1_1_1_1_0_0()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
        }
	otherlv_10=RULE_IDENT
	{
		newLeafNode(otherlv_10, grammarAccess.getPojoPropertyAccess().getGrefPojoEntityCrossReference_1_1_1_1_0_1_0()); 
	}

)
))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getGtypeJvmTypeCrossReference_1_1_1_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))this_MORE_THAN_12=RULE_MORE_THAN
    { 
    newLeafNode(this_MORE_THAN_12, grammarAccess.getPojoPropertyAccess().getMORE_THANTerminalRuleCall_1_1_1_2()); 
    }
)?))(
(
		lv_array_13_0=	'[]' 
    {
        newLeafNode(lv_array_13_0, grammarAccess.getPojoPropertyAccess().getArrayLeftSquareBracketRightSquareBracketKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPojoPropertyRule());
	        }
       		setWithLastConsumed($current, "array", true, "[]");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPojoPropertyAccess().getModifiersPojoPropertyModifierParserRuleCall_3_0()); 
	    }
		lv_modifiers_14_0=rulePojoPropertyModifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPojoPropertyRule());
	        }
       		add(
       			$current, 
       			"modifiers",
        		lv_modifiers_14_0, 
        		"PojoPropertyModifier");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard 
	 { $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_IDENT_0=RULE_IDENT    {
		$current.merge(this_IDENT_0);
    }

    { 
    newLeafNode(this_IDENT_0, grammarAccess.getQualifiedNameAccess().getIDENTTerminalRuleCall_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getQualifiedNameAccess().getIDENT_DOTTerminalRuleCall_1()); 
    }
)
    ;





RULE_ON_OFF : ('ON'|'OFF');

RULE_STATEMEN_TYPE : ('QRY'|'CRUD'|'CALL');

RULE_MAPPING_TYPE : 'OUT';

RULE_OPTION_TYPE : ('OPT'|'LOPT'|'IOPT'|'SOPT'|'BOPT');

RULE_IDENT_DOT : RULE_IDENT ('.' RULE_IDENT)+;

RULE_IDENT : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'=')*;

RULE_NUMBER : ('0'..'9')+;

RULE_ESC_CHAR : '\\' (RULE_COLON|RULE_SEMICOLON|RULE_STRING|RULE_LBRACE|RULE_RBRACE|RULE_BOR|RULE_HASH|RULE_AT|RULE_PERCENT|'/');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\n'|'\r')+;

RULE_AND : '&' '&';

RULE_OR : '|' '|';

RULE_COLON : ':';

RULE_SEMICOLON : ';';

RULE_STRING : '$';

RULE_COMMA : ',';

RULE_MINUS : '-';

RULE_PLUS : '+';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACE : '{';

RULE_RBRACE : '}';

RULE_QUESTI : '?';

RULE_NOT : '!';

RULE_BAND : '&';

RULE_BOR : '|';

RULE_HASH : '#';

RULE_AT : '@';

RULE_CARET : '^';

RULE_EQUALS : '=';

RULE_LESS_THAN : '<';

RULE_MORE_THAN : '>';

RULE_PERCENT : '%';

RULE_REST : ~(RULE_SEMICOLON);


