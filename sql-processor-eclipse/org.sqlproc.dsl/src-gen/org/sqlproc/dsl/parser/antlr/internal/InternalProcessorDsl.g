/*
* generated by Xtext
*/
grammar InternalProcessorDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.sqlproc.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.sqlproc.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sqlproc.dsl.services.ProcessorDslGrammarAccess;

}

@parser::members {

 	private ProcessorDslGrammarAccess grammarAccess;
 	
    public InternalProcessorDslParser(TokenStream input, ProcessorDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Artifacts";	
   	}
   	
   	@Override
   	protected ProcessorDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleArtifacts
entryRuleArtifacts returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactsRule()); }
	 iv_ruleArtifacts=ruleArtifacts 
	 { $current=$iv_ruleArtifacts.current; } 
	 EOF 
;

// Rule Artifacts
ruleArtifacts returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_0()); 
    }
)*(((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getFeaturesOptionalFeatureParserRuleCall_1_0_0_0()); 
	    }
		lv_features_1_0=ruleOptionalFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_1_0, 
        		"OptionalFeature");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_0_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getStatementsMetaStatementParserRuleCall_1_1_0_0()); 
	    }
		lv_statements_3_0=ruleMetaStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_3_0, 
        		"MetaStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_1_1()); 
    }
)*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactsAccess().getMappingsMappingRuleParserRuleCall_1_2_0_0()); 
	    }
		lv_mappings_5_0=ruleMappingRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactsRule());
	        }
       		add(
       			$current, 
       			"mappings",
        		lv_mappings_5_0, 
        		"MappingRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getArtifactsAccess().getWSTerminalRuleCall_1_2_1()); 
    }
)*))+)
;





// Entry rule entryRuleMetaStatement
entryRuleMetaStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaStatementRule()); }
	 iv_ruleMetaStatement=ruleMetaStatement 
	 { $current=$iv_ruleMetaStatement.current; } 
	 EOF 
;

// Rule MetaStatement
ruleMetaStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMetaStatementAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getMetaStatementAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaStatementAccess().getTypeSTATEMEN_TYPEEnumRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleSTATEMEN_TYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaStatementRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"STATEMEN_TYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getMetaStatementAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getMetaStatementAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getMetaStatementAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getMetaStatementAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaStatementAccess().getStatementSqlParserRuleCall_6_0()); 
	    }
		lv_statement_7_0=ruleSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_7_0, 
        		"Sql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getMetaStatementAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleSql
entryRuleSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlRule()); }
	 iv_ruleSql=ruleSql 
	 { $current=$iv_ruleSql.current; } 
	 EOF 
;

// Rule Sql
ruleSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlAccess().getSqlsSqlFragmentParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleSqlFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"SqlFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSqlFragment
entryRuleSqlFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlFragmentRule()); }
	 iv_ruleSqlFragment=ruleSqlFragment 
	 { $current=$iv_ruleSqlFragment.current; } 
	 EOF 
;

// Rule SqlFragment
ruleSqlFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getValueSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"SqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
	    }
		lv_col_2_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"col",
        		lv_col_2_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
	    }
		lv_cnst_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_ident_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_LBRACE_7=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_7, grammarAccess.getSqlFragmentAccess().getLBRACETerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSqlFragmentAccess().getMetaMetaSqlParserRuleCall_4_1_0()); 
	    }
		lv_meta_8_0=ruleMetaSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"meta",
        		lv_meta_8_0, 
        		"MetaSql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACE_9=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_9, grammarAccess.getSqlFragmentAccess().getRBRACETerminalRuleCall_4_2()); 
    }
))
;





// Entry rule entryRuleSqlValue
entryRuleSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSqlValueRule()); } 
	 iv_ruleSqlValue=ruleSqlValue 
	 { $current=$iv_ruleSqlValue.current.getText(); }  
	 EOF 
;

// Rule SqlValue
ruleSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_COMMA_5=RULE_COMMA    {
		$current.merge(this_COMMA_5);
    }

    { 
    newLeafNode(this_COMMA_5, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_0_5()); 
    }

    |    this_MINUS_6=RULE_MINUS    {
		$current.merge(this_MINUS_6);
    }

    { 
    newLeafNode(this_MINUS_6, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_0_6()); 
    }

    |    this_PLUS_7=RULE_PLUS    {
		$current.merge(this_PLUS_7);
    }

    { 
    newLeafNode(this_PLUS_7, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_0_7()); 
    }

    |    this_LPAREN_8=RULE_LPAREN    {
		$current.merge(this_LPAREN_8);
    }

    { 
    newLeafNode(this_LPAREN_8, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_0_8()); 
    }

    |    this_RPAREN_9=RULE_RPAREN    {
		$current.merge(this_RPAREN_9);
    }

    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_0_9()); 
    }

    |    this_RBRACE_10=RULE_RBRACE    {
		$current.merge(this_RBRACE_10);
    }

    { 
    newLeafNode(this_RBRACE_10, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_0_10()); 
    }

    |    this_QUESTI_11=RULE_QUESTI    {
		$current.merge(this_QUESTI_11);
    }

    { 
    newLeafNode(this_QUESTI_11, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
    }

    |    this_NOT_12=RULE_NOT    {
		$current.merge(this_NOT_12);
    }

    { 
    newLeafNode(this_NOT_12, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
    }

    |    this_BAND_13=RULE_BAND    {
		$current.merge(this_BAND_13);
    }

    { 
    newLeafNode(this_BAND_13, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
    }

    |    this_BOR_14=RULE_BOR    {
		$current.merge(this_BOR_14);
    }

    { 
    newLeafNode(this_BOR_14, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_0_14()); 
    }

    |    this_HASH_15=RULE_HASH    {
		$current.merge(this_HASH_15);
    }

    { 
    newLeafNode(this_HASH_15, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_0_15()); 
    }

    |    this_CARET_16=RULE_CARET    {
		$current.merge(this_CARET_16);
    }

    { 
    newLeafNode(this_CARET_16, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_0_16()); 
    }

    |    this_EQUALS_17=RULE_EQUALS    {
		$current.merge(this_EQUALS_17);
    }

    { 
    newLeafNode(this_EQUALS_17, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_0_17()); 
    }

    |    this_LESS_THAN_18=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_18);
    }

    { 
    newLeafNode(this_LESS_THAN_18, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_0_18()); 
    }

    |    this_MORE_THAN_19=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_19);
    }

    { 
    newLeafNode(this_MORE_THAN_19, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_0_19()); 
    }

    |    this_ESC_CHAR_20=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_20);
    }

    { 
    newLeafNode(this_ESC_CHAR_20, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_0_20()); 
    }
)(((RULE_REST
    |RULE_IDENT_DOT
    |RULE_IDENT
    |RULE_NUMBER
    |RULE_WS
    |RULE_COMMA
    |RULE_MINUS
    |RULE_PLUS
    |RULE_LPAREN
    |RULE_RPAREN
    |RULE_RBRACE
    |RULE_QUESTI
    |RULE_NOT
    |RULE_BAND
    |RULE_BOR
    |RULE_HASH
    |RULE_CARET
    |RULE_EQUALS
    |RULE_LESS_THAN
    |RULE_MORE_THAN
    |RULE_ESC_CHAR))=>(    this_REST_21=RULE_REST    {
		$current.merge(this_REST_21);
    }

    { 
    newLeafNode(this_REST_21, grammarAccess.getSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_22=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_22);
    }

    { 
    newLeafNode(this_IDENT_DOT_22, grammarAccess.getSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_23=RULE_IDENT    {
		$current.merge(this_IDENT_23);
    }

    { 
    newLeafNode(this_IDENT_23, grammarAccess.getSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_24=RULE_NUMBER    {
		$current.merge(this_NUMBER_24);
    }

    { 
    newLeafNode(this_NUMBER_24, grammarAccess.getSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_25=RULE_WS    {
		$current.merge(this_WS_25);
    }

    { 
    newLeafNode(this_WS_25, grammarAccess.getSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_COMMA_26=RULE_COMMA    {
		$current.merge(this_COMMA_26);
    }

    { 
    newLeafNode(this_COMMA_26, grammarAccess.getSqlValueAccess().getCOMMATerminalRuleCall_1_0_5()); 
    }

    |    this_MINUS_27=RULE_MINUS    {
		$current.merge(this_MINUS_27);
    }

    { 
    newLeafNode(this_MINUS_27, grammarAccess.getSqlValueAccess().getMINUSTerminalRuleCall_1_0_6()); 
    }

    |    this_PLUS_28=RULE_PLUS    {
		$current.merge(this_PLUS_28);
    }

    { 
    newLeafNode(this_PLUS_28, grammarAccess.getSqlValueAccess().getPLUSTerminalRuleCall_1_0_7()); 
    }

    |    this_LPAREN_29=RULE_LPAREN    {
		$current.merge(this_LPAREN_29);
    }

    { 
    newLeafNode(this_LPAREN_29, grammarAccess.getSqlValueAccess().getLPARENTerminalRuleCall_1_0_8()); 
    }

    |    this_RPAREN_30=RULE_RPAREN    {
		$current.merge(this_RPAREN_30);
    }

    { 
    newLeafNode(this_RPAREN_30, grammarAccess.getSqlValueAccess().getRPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RBRACE_31=RULE_RBRACE    {
		$current.merge(this_RBRACE_31);
    }

    { 
    newLeafNode(this_RBRACE_31, grammarAccess.getSqlValueAccess().getRBRACETerminalRuleCall_1_0_10()); 
    }

    |    this_QUESTI_32=RULE_QUESTI    {
		$current.merge(this_QUESTI_32);
    }

    { 
    newLeafNode(this_QUESTI_32, grammarAccess.getSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
    }

    |    this_NOT_33=RULE_NOT    {
		$current.merge(this_NOT_33);
    }

    { 
    newLeafNode(this_NOT_33, grammarAccess.getSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
    }

    |    this_BAND_34=RULE_BAND    {
		$current.merge(this_BAND_34);
    }

    { 
    newLeafNode(this_BAND_34, grammarAccess.getSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
    }

    |    this_BOR_35=RULE_BOR    {
		$current.merge(this_BOR_35);
    }

    { 
    newLeafNode(this_BOR_35, grammarAccess.getSqlValueAccess().getBORTerminalRuleCall_1_0_14()); 
    }

    |    this_HASH_36=RULE_HASH    {
		$current.merge(this_HASH_36);
    }

    { 
    newLeafNode(this_HASH_36, grammarAccess.getSqlValueAccess().getHASHTerminalRuleCall_1_0_15()); 
    }

    |    this_CARET_37=RULE_CARET    {
		$current.merge(this_CARET_37);
    }

    { 
    newLeafNode(this_CARET_37, grammarAccess.getSqlValueAccess().getCARETTerminalRuleCall_1_0_16()); 
    }

    |    this_EQUALS_38=RULE_EQUALS    {
		$current.merge(this_EQUALS_38);
    }

    { 
    newLeafNode(this_EQUALS_38, grammarAccess.getSqlValueAccess().getEQUALSTerminalRuleCall_1_0_17()); 
    }

    |    this_LESS_THAN_39=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_39);
    }

    { 
    newLeafNode(this_LESS_THAN_39, grammarAccess.getSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_18()); 
    }

    |    this_MORE_THAN_40=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_40);
    }

    { 
    newLeafNode(this_MORE_THAN_40, grammarAccess.getSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_19()); 
    }

    |    this_ESC_CHAR_41=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_41);
    }

    { 
    newLeafNode(this_ESC_CHAR_41, grammarAccess.getSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_20()); 
    }
))*)
    ;





// Entry rule entryRuleMetaSql
entryRuleMetaSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaSqlRule()); }
	 iv_ruleMetaSql=ruleMetaSql 
	 { $current=$iv_ruleMetaSql.current; } 
	 EOF 
;

// Rule MetaSql
ruleMetaSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
	    }
		lv_ifs_1_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_1_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_2=RULE_BOR
    { 
    newLeafNode(this_BOR_2, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
	    }
		lv_ifs_3_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_3_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_4_0=RULE_QUESTI
		{
			newLeafNode(lv_type_4_0, grammarAccess.getMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"QUESTI");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
	    }
		lv_cond_5_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BOR_6=RULE_BOR
    { 
    newLeafNode(this_BOR_6, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
	    }
		lv_ifs_7_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_7_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_8=RULE_BOR
    { 
    newLeafNode(this_BOR_8, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
	    }
		lv_ifs_9_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_9_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_10_0=RULE_BAND
		{
			newLeafNode(lv_type_10_0, grammarAccess.getMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"BAND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
	    }
		lv_ifs_11_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_11_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_12=RULE_BOR
    { 
    newLeafNode(this_BOR_12, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
	    }
		lv_ifs_13_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_13_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_14_0=RULE_BOR
		{
			newLeafNode(lv_type_14_0, grammarAccess.getMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"BOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
	    }
		lv_ifs_15_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_15_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_16=RULE_BOR
    { 
    newLeafNode(this_BOR_16, grammarAccess.getMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
	    }
		lv_ifs_17_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_17_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_18_0=RULE_EQUALS
		{
			newLeafNode(lv_type_18_0, grammarAccess.getMetaSqlAccess().getTypeEQUALSTerminalRuleCall_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_18_0, 
        		"EQUALS");
	    }

)
)(this_WS_19=RULE_WS
    { 
    newLeafNode(this_WS_19, grammarAccess.getMetaSqlAccess().getWSTerminalRuleCall_4_1()); 
    }
)*(
(
		lv_ftype_20_0=RULE_IDENT
		{
			newLeafNode(lv_ftype_20_0, grammarAccess.getMetaSqlAccess().getFtypeIDENTTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ftype",
        		lv_ftype_20_0, 
        		"IDENT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getIfsIfSqlParserRuleCall_4_3_0()); 
	    }
		lv_ifs_21_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_21_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_type_22_0=RULE_HASH
		{
			newLeafNode(lv_type_22_0, grammarAccess.getMetaSqlAccess().getTypeHASHTerminalRuleCall_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_22_0, 
        		"HASH");
	    }

)
)this_NUMBER_23=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_23, grammarAccess.getMetaSqlAccess().getNUMBERTerminalRuleCall_5_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaSqlAccess().getOrdOrdSqlParserRuleCall_5_2_0()); 
	    }
		lv_ord_24_0=ruleOrdSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaSqlRule());
	        }
       		set(
       			$current, 
       			"ord",
        		lv_ord_24_0, 
        		"OrdSql");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleIfSql
entryRuleIfSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlRule()); }
	 iv_ruleIfSql=ruleIfSql 
	 { $current=$iv_ruleIfSql.current; } 
	 EOF 
;

// Rule IfSql
ruleIfSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlAccess().getSqlsIfSqlFragmentParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleIfSqlFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"IfSqlFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleIfSqlFragment
entryRuleIfSqlFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlFragmentRule()); }
	 iv_ruleIfSqlFragment=ruleIfSqlFragment 
	 { $current=$iv_ruleIfSqlFragment.current; } 
	 EOF 
;

// Rule IfSqlFragment
ruleIfSqlFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getValueIfSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleIfSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"IfSqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_AT_1=RULE_AT
    { 
    newLeafNode(this_AT_1, grammarAccess.getIfSqlFragmentAccess().getATTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getColColumnParserRuleCall_1_1_0()); 
	    }
		lv_col_2_0=ruleColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"col",
        		lv_col_2_0, 
        		"Column");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getIfSqlFragmentAccess().getSTRINGTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getCnstConstantParserRuleCall_2_1_0()); 
	    }
		lv_cnst_4_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_4_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_5=RULE_COLON
    { 
    newLeafNode(this_COLON_5, grammarAccess.getIfSqlFragmentAccess().getCOLONTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getIdentIdentifierParserRuleCall_3_1_0()); 
	    }
		lv_ident_6_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_6_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_LBRACE_7=RULE_LBRACE
    { 
    newLeafNode(this_LBRACE_7, grammarAccess.getIfSqlFragmentAccess().getLBRACETerminalRuleCall_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlFragmentAccess().getMetaIfMetaSqlParserRuleCall_4_1_0()); 
	    }
		lv_meta_8_0=ruleIfMetaSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlFragmentRule());
	        }
       		set(
       			$current, 
       			"meta",
        		lv_meta_8_0, 
        		"IfMetaSql");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACE_9=RULE_RBRACE
    { 
    newLeafNode(this_RBRACE_9, grammarAccess.getIfSqlFragmentAccess().getRBRACETerminalRuleCall_4_2()); 
    }
))
;





// Entry rule entryRuleIfSqlValue
entryRuleIfSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlValueRule()); } 
	 iv_ruleIfSqlValue=ruleIfSqlValue 
	 { $current=$iv_ruleIfSqlValue.current.getText(); }  
	 EOF 
;

// Rule IfSqlValue
ruleIfSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_SEMICOLON_5=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_5);
    }

    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_QUESTI_11=RULE_QUESTI    {
		$current.merge(this_QUESTI_11);
    }

    { 
    newLeafNode(this_QUESTI_11, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_0_11()); 
    }

    |    this_NOT_12=RULE_NOT    {
		$current.merge(this_NOT_12);
    }

    { 
    newLeafNode(this_NOT_12, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_0_12()); 
    }

    |    this_BAND_13=RULE_BAND    {
		$current.merge(this_BAND_13);
    }

    { 
    newLeafNode(this_BAND_13, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_0_13()); 
    }

    |    this_HASH_14=RULE_HASH    {
		$current.merge(this_HASH_14);
    }

    { 
    newLeafNode(this_HASH_14, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_0_14()); 
    }

    |    this_CARET_15=RULE_CARET    {
		$current.merge(this_CARET_15);
    }

    { 
    newLeafNode(this_CARET_15, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_0_15()); 
    }

    |    this_EQUALS_16=RULE_EQUALS    {
		$current.merge(this_EQUALS_16);
    }

    { 
    newLeafNode(this_EQUALS_16, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_0_16()); 
    }

    |    this_LESS_THAN_17=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_17);
    }

    { 
    newLeafNode(this_LESS_THAN_17, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_0_17()); 
    }

    |    this_MORE_THAN_18=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_18);
    }

    { 
    newLeafNode(this_MORE_THAN_18, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_0_18()); 
    }

    |    this_ESC_CHAR_19=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_19);
    }

    { 
    newLeafNode(this_ESC_CHAR_19, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_0_19()); 
    }
)(((RULE_REST
    |RULE_IDENT_DOT
    |RULE_IDENT
    |RULE_NUMBER
    |RULE_WS
    |RULE_SEMICOLON
    |RULE_COMMA
    |RULE_MINUS
    |RULE_PLUS
    |RULE_LPAREN
    |RULE_RPAREN
    |RULE_QUESTI
    |RULE_NOT
    |RULE_BAND
    |RULE_HASH
    |RULE_CARET
    |RULE_EQUALS
    |RULE_LESS_THAN
    |RULE_MORE_THAN
    |RULE_ESC_CHAR))=>(    this_REST_20=RULE_REST    {
		$current.merge(this_REST_20);
    }

    { 
    newLeafNode(this_REST_20, grammarAccess.getIfSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_21=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_21);
    }

    { 
    newLeafNode(this_IDENT_DOT_21, grammarAccess.getIfSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_22=RULE_IDENT    {
		$current.merge(this_IDENT_22);
    }

    { 
    newLeafNode(this_IDENT_22, grammarAccess.getIfSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_23=RULE_NUMBER    {
		$current.merge(this_NUMBER_23);
    }

    { 
    newLeafNode(this_NUMBER_23, grammarAccess.getIfSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_24=RULE_WS    {
		$current.merge(this_WS_24);
    }

    { 
    newLeafNode(this_WS_24, grammarAccess.getIfSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_SEMICOLON_25=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_25);
    }

    { 
    newLeafNode(this_SEMICOLON_25, grammarAccess.getIfSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_COMMA_26=RULE_COMMA    {
		$current.merge(this_COMMA_26);
    }

    { 
    newLeafNode(this_COMMA_26, grammarAccess.getIfSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
    }

    |    this_MINUS_27=RULE_MINUS    {
		$current.merge(this_MINUS_27);
    }

    { 
    newLeafNode(this_MINUS_27, grammarAccess.getIfSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
    }

    |    this_PLUS_28=RULE_PLUS    {
		$current.merge(this_PLUS_28);
    }

    { 
    newLeafNode(this_PLUS_28, grammarAccess.getIfSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
    }

    |    this_LPAREN_29=RULE_LPAREN    {
		$current.merge(this_LPAREN_29);
    }

    { 
    newLeafNode(this_LPAREN_29, grammarAccess.getIfSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RPAREN_30=RULE_RPAREN    {
		$current.merge(this_RPAREN_30);
    }

    { 
    newLeafNode(this_RPAREN_30, grammarAccess.getIfSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_QUESTI_31=RULE_QUESTI    {
		$current.merge(this_QUESTI_31);
    }

    { 
    newLeafNode(this_QUESTI_31, grammarAccess.getIfSqlValueAccess().getQUESTITerminalRuleCall_1_0_11()); 
    }

    |    this_NOT_32=RULE_NOT    {
		$current.merge(this_NOT_32);
    }

    { 
    newLeafNode(this_NOT_32, grammarAccess.getIfSqlValueAccess().getNOTTerminalRuleCall_1_0_12()); 
    }

    |    this_BAND_33=RULE_BAND    {
		$current.merge(this_BAND_33);
    }

    { 
    newLeafNode(this_BAND_33, grammarAccess.getIfSqlValueAccess().getBANDTerminalRuleCall_1_0_13()); 
    }

    |    this_HASH_34=RULE_HASH    {
		$current.merge(this_HASH_34);
    }

    { 
    newLeafNode(this_HASH_34, grammarAccess.getIfSqlValueAccess().getHASHTerminalRuleCall_1_0_14()); 
    }

    |    this_CARET_35=RULE_CARET    {
		$current.merge(this_CARET_35);
    }

    { 
    newLeafNode(this_CARET_35, grammarAccess.getIfSqlValueAccess().getCARETTerminalRuleCall_1_0_15()); 
    }

    |    this_EQUALS_36=RULE_EQUALS    {
		$current.merge(this_EQUALS_36);
    }

    { 
    newLeafNode(this_EQUALS_36, grammarAccess.getIfSqlValueAccess().getEQUALSTerminalRuleCall_1_0_16()); 
    }

    |    this_LESS_THAN_37=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_37);
    }

    { 
    newLeafNode(this_LESS_THAN_37, grammarAccess.getIfSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_17()); 
    }

    |    this_MORE_THAN_38=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_38);
    }

    { 
    newLeafNode(this_MORE_THAN_38, grammarAccess.getIfSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_18()); 
    }

    |    this_ESC_CHAR_39=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_39);
    }

    { 
    newLeafNode(this_ESC_CHAR_39, grammarAccess.getIfSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_19()); 
    }
))*)
    ;





// Entry rule entryRuleIfMetaSql
entryRuleIfMetaSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfMetaSqlRule()); }
	 iv_ruleIfMetaSql=ruleIfMetaSql 
	 { $current=$iv_ruleIfMetaSql.current; } 
	 EOF 
;

// Rule IfMetaSql
ruleIfMetaSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getIfMetaSqlAccess().getWSTerminalRuleCall_0_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_1_0()); 
	    }
		lv_ifs_1_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_1_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_2=RULE_BOR
    { 
    newLeafNode(this_BOR_2, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_0_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_0_2_1_0()); 
	    }
		lv_ifs_3_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_3_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_4_0=RULE_QUESTI
		{
			newLeafNode(lv_type_4_0, grammarAccess.getIfMetaSqlAccess().getTypeQUESTITerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"QUESTI");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getCondIfSqlCondParserRuleCall_1_1_0()); 
	    }
		lv_cond_5_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_5_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_BOR_6=RULE_BOR
    { 
    newLeafNode(this_BOR_6, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_3_0()); 
	    }
		lv_ifs_7_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_7_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_8=RULE_BOR
    { 
    newLeafNode(this_BOR_8, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_1_4_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_1_4_1_0()); 
	    }
		lv_ifs_9_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_9_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_10_0=RULE_BAND
		{
			newLeafNode(lv_type_10_0, grammarAccess.getIfMetaSqlAccess().getTypeBANDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_10_0, 
        		"BAND");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_1_0()); 
	    }
		lv_ifs_11_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_11_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_12=RULE_BOR
    { 
    newLeafNode(this_BOR_12, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_2_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_2_2_1_0()); 
	    }
		lv_ifs_13_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_13_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_type_14_0=RULE_BOR
		{
			newLeafNode(lv_type_14_0, grammarAccess.getIfMetaSqlAccess().getTypeBORTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfMetaSqlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_14_0, 
        		"BOR");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_1_0()); 
	    }
		lv_ifs_15_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_15_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_BOR_16=RULE_BOR
    { 
    newLeafNode(this_BOR_16, grammarAccess.getIfMetaSqlAccess().getBORTerminalRuleCall_3_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfMetaSqlAccess().getIfsIfSqlParserRuleCall_3_2_1_0()); 
	    }
		lv_ifs_17_0=ruleIfSql		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfMetaSqlRule());
	        }
       		add(
       			$current, 
       			"ifs",
        		lv_ifs_17_0, 
        		"IfSql");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleIfSqlCond
entryRuleIfSqlCond returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlCondRule()); }
	 iv_ruleIfSqlCond=ruleIfSqlCond 
	 { $current=$iv_ruleIfSqlCond.current; } 
	 EOF 
;

// Rule IfSqlCond
ruleIfSqlCond returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool1IfSqlBoolParserRuleCall_1_0()); 
	    }
		lv_bool1_1_0=ruleIfSqlBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
	        }
       		set(
       			$current, 
       			"bool1",
        		lv_bool1_1_0, 
        		"IfSqlBool");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_2()); 
    }
)*((
(
(
		lv_oper_3_1=RULE_AND
		{
			newLeafNode(lv_oper_3_1, grammarAccess.getIfSqlCondAccess().getOperANDTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlCondRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"oper",
        		lv_oper_3_1, 
        		"AND");
	    }

    |		lv_oper_3_2=RULE_OR
		{
			newLeafNode(lv_oper_3_2, grammarAccess.getIfSqlCondAccess().getOperORTerminalRuleCall_3_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlCondRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"oper",
        		lv_oper_3_2, 
        		"OR");
	    }

)

)
)(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlCondAccess().getBool2IfSqlBoolParserRuleCall_3_2_0()); 
	    }
		lv_bool2_5_0=ruleIfSqlBool		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlCondRule());
	        }
       		add(
       			$current, 
       			"bool2",
        		lv_bool2_5_0, 
        		"IfSqlBool");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_WS_6=RULE_WS
    { 
    newLeafNode(this_WS_6, grammarAccess.getIfSqlCondAccess().getWSTerminalRuleCall_3_3()); 
    }
)*)*)
;





// Entry rule entryRuleIfSqlBool
entryRuleIfSqlBool returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfSqlBoolRule()); }
	 iv_ruleIfSqlBool=ruleIfSqlBool 
	 { $current=$iv_ruleIfSqlBool.current; } 
	 EOF 
;

// Rule IfSqlBool
ruleIfSqlBool returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_not_0_0=RULE_NOT
		{
			newLeafNode(lv_not_0_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getIfSqlBoolAccess().getSTRINGTerminalRuleCall_0_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCnstConstantParserRuleCall_0_2_0()); 
	    }
		lv_cnst_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_2_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_not_3_0=RULE_NOT
		{
			newLeafNode(lv_not_3_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_COLON_4=RULE_COLON
    { 
    newLeafNode(this_COLON_4, grammarAccess.getIfSqlBoolAccess().getCOLONTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getIdentIdentifierParserRuleCall_1_2_0()); 
	    }
		lv_ident_5_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_5_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_not_6_0=RULE_NOT
		{
			newLeafNode(lv_not_6_0, grammarAccess.getIfSqlBoolAccess().getNotNOTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIfSqlBoolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"not",
        		true, 
        		"NOT");
	    }

)
)?this_LPAREN_7=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_7, grammarAccess.getIfSqlBoolAccess().getLPARENTerminalRuleCall_2_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfSqlBoolAccess().getCondIfSqlCondParserRuleCall_2_2_0()); 
	    }
		lv_cond_8_0=ruleIfSqlCond		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfSqlBoolRule());
	        }
       		set(
       			$current, 
       			"cond",
        		lv_cond_8_0, 
        		"IfSqlCond");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RPAREN_9=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_9, grammarAccess.getIfSqlBoolAccess().getRPARENTerminalRuleCall_2_3()); 
    }
))
;





// Entry rule entryRuleOrdSql
entryRuleOrdSql returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSqlRule()); }
	 iv_ruleOrdSql=ruleOrdSql 
	 { $current=$iv_ruleOrdSql.current; } 
	 EOF 
;

// Rule OrdSql
ruleOrdSql returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSqlAccess().getSqlsOrdSql2ParserRuleCall_0()); 
	    }
		lv_sqls_0_0=ruleOrdSql2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSqlRule());
	        }
       		add(
       			$current, 
       			"sqls",
        		lv_sqls_0_0, 
        		"OrdSql2");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleOrdSql2
entryRuleOrdSql2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSql2Rule()); }
	 iv_ruleOrdSql2=ruleOrdSql2 
	 { $current=$iv_ruleOrdSql2.current; } 
	 EOF 
;

// Rule OrdSql2
ruleOrdSql2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getValueOrdSqlValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleOrdSqlValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"OrdSqlValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getOrdSql2Access().getSTRINGTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getCnstConstantParserRuleCall_1_1_0()); 
	    }
		lv_cnst_2_0=ruleConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"cnst",
        		lv_cnst_2_0, 
        		"Constant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(this_COLON_3=RULE_COLON
    { 
    newLeafNode(this_COLON_3, grammarAccess.getOrdSql2Access().getCOLONTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrdSql2Access().getIdentIdentifierParserRuleCall_2_1_0()); 
	    }
		lv_ident_4_0=ruleIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrdSql2Rule());
	        }
       		set(
       			$current, 
       			"ident",
        		lv_ident_4_0, 
        		"Identifier");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOrdSqlValue
entryRuleOrdSqlValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrdSqlValueRule()); } 
	 iv_ruleOrdSqlValue=ruleOrdSqlValue 
	 { $current=$iv_ruleOrdSqlValue.current.getText(); }  
	 EOF 
;

// Rule OrdSqlValue
ruleOrdSqlValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_0_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_0_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_0_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_0_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_0_4()); 
    }

    |    this_SEMICOLON_5=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_5);
    }

    { 
    newLeafNode(this_SEMICOLON_5, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_0_5()); 
    }

    |    this_COMMA_6=RULE_COMMA    {
		$current.merge(this_COMMA_6);
    }

    { 
    newLeafNode(this_COMMA_6, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_0_6()); 
    }

    |    this_MINUS_7=RULE_MINUS    {
		$current.merge(this_MINUS_7);
    }

    { 
    newLeafNode(this_MINUS_7, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_0_7()); 
    }

    |    this_PLUS_8=RULE_PLUS    {
		$current.merge(this_PLUS_8);
    }

    { 
    newLeafNode(this_PLUS_8, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_0_8()); 
    }

    |    this_LPAREN_9=RULE_LPAREN    {
		$current.merge(this_LPAREN_9);
    }

    { 
    newLeafNode(this_LPAREN_9, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_0_9()); 
    }

    |    this_RPAREN_10=RULE_RPAREN    {
		$current.merge(this_RPAREN_10);
    }

    { 
    newLeafNode(this_RPAREN_10, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_0_10()); 
    }

    |    this_LBRACE_11=RULE_LBRACE    {
		$current.merge(this_LBRACE_11);
    }

    { 
    newLeafNode(this_LBRACE_11, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_0_11()); 
    }

    |    this_QUESTI_12=RULE_QUESTI    {
		$current.merge(this_QUESTI_12);
    }

    { 
    newLeafNode(this_QUESTI_12, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_0_12()); 
    }

    |    this_NOT_13=RULE_NOT    {
		$current.merge(this_NOT_13);
    }

    { 
    newLeafNode(this_NOT_13, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_0_13()); 
    }

    |    this_BAND_14=RULE_BAND    {
		$current.merge(this_BAND_14);
    }

    { 
    newLeafNode(this_BAND_14, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_0_14()); 
    }

    |    this_BOR_15=RULE_BOR    {
		$current.merge(this_BOR_15);
    }

    { 
    newLeafNode(this_BOR_15, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_0_15()); 
    }

    |    this_HASH_16=RULE_HASH    {
		$current.merge(this_HASH_16);
    }

    { 
    newLeafNode(this_HASH_16, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_0_16()); 
    }

    |    this_AT_17=RULE_AT    {
		$current.merge(this_AT_17);
    }

    { 
    newLeafNode(this_AT_17, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_0_17()); 
    }

    |    this_CARET_18=RULE_CARET    {
		$current.merge(this_CARET_18);
    }

    { 
    newLeafNode(this_CARET_18, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_0_18()); 
    }

    |    this_EQUALS_19=RULE_EQUALS    {
		$current.merge(this_EQUALS_19);
    }

    { 
    newLeafNode(this_EQUALS_19, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_0_19()); 
    }

    |    this_LESS_THAN_20=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_20);
    }

    { 
    newLeafNode(this_LESS_THAN_20, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_0_20()); 
    }

    |    this_MORE_THAN_21=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_21);
    }

    { 
    newLeafNode(this_MORE_THAN_21, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_0_21()); 
    }

    |    this_ESC_CHAR_22=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_22);
    }

    { 
    newLeafNode(this_ESC_CHAR_22, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_0_22()); 
    }
)(((RULE_REST
    |RULE_IDENT_DOT
    |RULE_IDENT
    |RULE_NUMBER
    |RULE_WS
    |RULE_SEMICOLON
    |RULE_COMMA
    |RULE_MINUS
    |RULE_PLUS
    |RULE_LPAREN
    |RULE_RPAREN
    |RULE_LBRACE
    |RULE_QUESTI
    |RULE_NOT
    |RULE_BAND
    |RULE_BOR
    |RULE_HASH
    |RULE_AT
    |RULE_CARET
    |RULE_EQUALS
    |RULE_LESS_THAN
    |RULE_MORE_THAN
    |RULE_ESC_CHAR))=>(    this_REST_23=RULE_REST    {
		$current.merge(this_REST_23);
    }

    { 
    newLeafNode(this_REST_23, grammarAccess.getOrdSqlValueAccess().getRESTTerminalRuleCall_1_0_0()); 
    }

    |    this_IDENT_DOT_24=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_24);
    }

    { 
    newLeafNode(this_IDENT_DOT_24, grammarAccess.getOrdSqlValueAccess().getIDENT_DOTTerminalRuleCall_1_0_1()); 
    }

    |    this_IDENT_25=RULE_IDENT    {
		$current.merge(this_IDENT_25);
    }

    { 
    newLeafNode(this_IDENT_25, grammarAccess.getOrdSqlValueAccess().getIDENTTerminalRuleCall_1_0_2()); 
    }

    |    this_NUMBER_26=RULE_NUMBER    {
		$current.merge(this_NUMBER_26);
    }

    { 
    newLeafNode(this_NUMBER_26, grammarAccess.getOrdSqlValueAccess().getNUMBERTerminalRuleCall_1_0_3()); 
    }

    |    this_WS_27=RULE_WS    {
		$current.merge(this_WS_27);
    }

    { 
    newLeafNode(this_WS_27, grammarAccess.getOrdSqlValueAccess().getWSTerminalRuleCall_1_0_4()); 
    }

    |    this_SEMICOLON_28=RULE_SEMICOLON    {
		$current.merge(this_SEMICOLON_28);
    }

    { 
    newLeafNode(this_SEMICOLON_28, grammarAccess.getOrdSqlValueAccess().getSEMICOLONTerminalRuleCall_1_0_5()); 
    }

    |    this_COMMA_29=RULE_COMMA    {
		$current.merge(this_COMMA_29);
    }

    { 
    newLeafNode(this_COMMA_29, grammarAccess.getOrdSqlValueAccess().getCOMMATerminalRuleCall_1_0_6()); 
    }

    |    this_MINUS_30=RULE_MINUS    {
		$current.merge(this_MINUS_30);
    }

    { 
    newLeafNode(this_MINUS_30, grammarAccess.getOrdSqlValueAccess().getMINUSTerminalRuleCall_1_0_7()); 
    }

    |    this_PLUS_31=RULE_PLUS    {
		$current.merge(this_PLUS_31);
    }

    { 
    newLeafNode(this_PLUS_31, grammarAccess.getOrdSqlValueAccess().getPLUSTerminalRuleCall_1_0_8()); 
    }

    |    this_LPAREN_32=RULE_LPAREN    {
		$current.merge(this_LPAREN_32);
    }

    { 
    newLeafNode(this_LPAREN_32, grammarAccess.getOrdSqlValueAccess().getLPARENTerminalRuleCall_1_0_9()); 
    }

    |    this_RPAREN_33=RULE_RPAREN    {
		$current.merge(this_RPAREN_33);
    }

    { 
    newLeafNode(this_RPAREN_33, grammarAccess.getOrdSqlValueAccess().getRPARENTerminalRuleCall_1_0_10()); 
    }

    |    this_LBRACE_34=RULE_LBRACE    {
		$current.merge(this_LBRACE_34);
    }

    { 
    newLeafNode(this_LBRACE_34, grammarAccess.getOrdSqlValueAccess().getLBRACETerminalRuleCall_1_0_11()); 
    }

    |    this_QUESTI_35=RULE_QUESTI    {
		$current.merge(this_QUESTI_35);
    }

    { 
    newLeafNode(this_QUESTI_35, grammarAccess.getOrdSqlValueAccess().getQUESTITerminalRuleCall_1_0_12()); 
    }

    |    this_NOT_36=RULE_NOT    {
		$current.merge(this_NOT_36);
    }

    { 
    newLeafNode(this_NOT_36, grammarAccess.getOrdSqlValueAccess().getNOTTerminalRuleCall_1_0_13()); 
    }

    |    this_BAND_37=RULE_BAND    {
		$current.merge(this_BAND_37);
    }

    { 
    newLeafNode(this_BAND_37, grammarAccess.getOrdSqlValueAccess().getBANDTerminalRuleCall_1_0_14()); 
    }

    |    this_BOR_38=RULE_BOR    {
		$current.merge(this_BOR_38);
    }

    { 
    newLeafNode(this_BOR_38, grammarAccess.getOrdSqlValueAccess().getBORTerminalRuleCall_1_0_15()); 
    }

    |    this_HASH_39=RULE_HASH    {
		$current.merge(this_HASH_39);
    }

    { 
    newLeafNode(this_HASH_39, grammarAccess.getOrdSqlValueAccess().getHASHTerminalRuleCall_1_0_16()); 
    }

    |    this_AT_40=RULE_AT    {
		$current.merge(this_AT_40);
    }

    { 
    newLeafNode(this_AT_40, grammarAccess.getOrdSqlValueAccess().getATTerminalRuleCall_1_0_17()); 
    }

    |    this_CARET_41=RULE_CARET    {
		$current.merge(this_CARET_41);
    }

    { 
    newLeafNode(this_CARET_41, grammarAccess.getOrdSqlValueAccess().getCARETTerminalRuleCall_1_0_18()); 
    }

    |    this_EQUALS_42=RULE_EQUALS    {
		$current.merge(this_EQUALS_42);
    }

    { 
    newLeafNode(this_EQUALS_42, grammarAccess.getOrdSqlValueAccess().getEQUALSTerminalRuleCall_1_0_19()); 
    }

    |    this_LESS_THAN_43=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_43);
    }

    { 
    newLeafNode(this_LESS_THAN_43, grammarAccess.getOrdSqlValueAccess().getLESS_THANTerminalRuleCall_1_0_20()); 
    }

    |    this_MORE_THAN_44=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_44);
    }

    { 
    newLeafNode(this_MORE_THAN_44, grammarAccess.getOrdSqlValueAccess().getMORE_THANTerminalRuleCall_1_0_21()); 
    }

    |    this_ESC_CHAR_45=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_45);
    }

    { 
    newLeafNode(this_ESC_CHAR_45, grammarAccess.getOrdSqlValueAccess().getESC_CHARTerminalRuleCall_1_0_22()); 
    }
))*)
    ;





// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	 iv_ruleColumn=ruleColumn 
	 { $current=$iv_ruleColumn.current; } 
	 EOF 
;

// Rule Column
ruleColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getColumnAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getColumnAccess().getNameIDENT_DOTTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

    |		lv_name_0_3=RULE_NUMBER
		{
			newLeafNode(lv_name_0_3, grammarAccess.getColumnAccess().getNameNUMBERTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"NUMBER");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_1=RULE_CARET
    { 
    newLeafNode(this_CARET_1, grammarAccess.getColumnAccess().getCARETTerminalRuleCall_1_0()); 
    }
)(
(
		lv_type_2_0=RULE_IDENT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getColumnAccess().getTypeIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"IDENT");
	    }

)
)(((	RULE_CARET)=>this_CARET_3=RULE_CARET
    { 
    newLeafNode(this_CARET_3, grammarAccess.getColumnAccess().getCARETTerminalRuleCall_1_2_0()); 
    }
)(
(
(
		lv_vals_4_1=RULE_IDENT
		{
			newLeafNode(lv_vals_4_1, grammarAccess.getColumnAccess().getValsIDENTTerminalRuleCall_1_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_4_1, 
        		"IDENT");
	    }

    |		lv_vals_4_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_4_2, grammarAccess.getColumnAccess().getValsNUMBERTerminalRuleCall_1_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getColumnRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_4_2, 
        		"NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_case_0_1=RULE_PLUS
		{
			newLeafNode(lv_case_0_1, grammarAccess.getConstantAccess().getCasePLUSTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_0_1, 
        		"PLUS");
	    }

    |		lv_case_0_2=RULE_MINUS
		{
			newLeafNode(lv_case_0_2, grammarAccess.getConstantAccess().getCaseMINUSTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_0_2, 
        		"MINUS");
	    }

)

)
)?(
(
(
		lv_name_1_1=RULE_IDENT
		{
			newLeafNode(lv_name_1_1, grammarAccess.getConstantAccess().getNameIDENTTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_1, 
        		"IDENT");
	    }

    |		lv_name_1_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_1_2, grammarAccess.getConstantAccess().getNameIDENT_DOTTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_2, 
        		"IDENT_DOT");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_2=RULE_CARET
    { 
    newLeafNode(this_CARET_2, grammarAccess.getConstantAccess().getCARETTerminalRuleCall_2_0()); 
    }
)(
(
		lv_type_3_0=RULE_IDENT
		{
			newLeafNode(lv_type_3_0, grammarAccess.getConstantAccess().getTypeIDENTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"IDENT");
	    }

)
)(((	RULE_CARET)=>this_CARET_4=RULE_CARET
    { 
    newLeafNode(this_CARET_4, grammarAccess.getConstantAccess().getCARETTerminalRuleCall_2_2_0()); 
    }
)(
(
(
		lv_vals_5_1=RULE_IDENT
		{
			newLeafNode(lv_vals_5_1, grammarAccess.getConstantAccess().getValsIDENTTerminalRuleCall_2_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_5_1, 
        		"IDENT");
	    }

    |		lv_vals_5_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_5_2, grammarAccess.getConstantAccess().getValsNUMBERTerminalRuleCall_2_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_5_2, 
        		"NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIdentifierRule()); }
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current; } 
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_mode_0_1=RULE_EQUALS
		{
			newLeafNode(lv_mode_0_1, grammarAccess.getIdentifierAccess().getModeEQUALSTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_1, 
        		"EQUALS");
	    }

    |		lv_mode_0_2=RULE_LESS_THAN
		{
			newLeafNode(lv_mode_0_2, grammarAccess.getIdentifierAccess().getModeLESS_THANTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_2, 
        		"LESS_THAN");
	    }

    |		lv_mode_0_3=RULE_MORE_THAN
		{
			newLeafNode(lv_mode_0_3, grammarAccess.getIdentifierAccess().getModeMORE_THANTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_0_3, 
        		"MORE_THAN");
	    }

)

)
)?(
(
(
		lv_case_1_1=RULE_PLUS
		{
			newLeafNode(lv_case_1_1, grammarAccess.getIdentifierAccess().getCasePLUSTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_1, 
        		"PLUS");
	    }

    |		lv_case_1_2=RULE_MINUS
		{
			newLeafNode(lv_case_1_2, grammarAccess.getIdentifierAccess().getCaseMINUSTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"case",
        		lv_case_1_2, 
        		"MINUS");
	    }

)

)
)?(
(
(
		lv_name_2_1=RULE_IDENT
		{
			newLeafNode(lv_name_2_1, grammarAccess.getIdentifierAccess().getNameIDENTTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_1, 
        		"IDENT");
	    }

    |		lv_name_2_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_2_2, grammarAccess.getIdentifierAccess().getNameIDENT_DOTTerminalRuleCall_2_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_2, 
        		"IDENT_DOT");
	    }

    |		lv_name_2_3=RULE_NUMBER
		{
			newLeafNode(lv_name_2_3, grammarAccess.getIdentifierAccess().getNameNUMBERTerminalRuleCall_2_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_3, 
        		"NUMBER");
	    }

)

)
)(((	RULE_CARET)=>this_CARET_3=RULE_CARET
    { 
    newLeafNode(this_CARET_3, grammarAccess.getIdentifierAccess().getCARETTerminalRuleCall_3_0()); 
    }
)(
(
		lv_type_4_0=RULE_IDENT
		{
			newLeafNode(lv_type_4_0, grammarAccess.getIdentifierAccess().getTypeIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"IDENT");
	    }

)
)(((	RULE_CARET)=>this_CARET_5=RULE_CARET
    { 
    newLeafNode(this_CARET_5, grammarAccess.getIdentifierAccess().getCARETTerminalRuleCall_3_2_0()); 
    }
)(
(
(
		lv_vals_6_1=RULE_IDENT
		{
			newLeafNode(lv_vals_6_1, grammarAccess.getIdentifierAccess().getValsIDENTTerminalRuleCall_3_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_6_1, 
        		"IDENT");
	    }

    |		lv_vals_6_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_6_2, grammarAccess.getIdentifierAccess().getValsNUMBERTerminalRuleCall_3_2_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_6_2, 
        		"NUMBER");
	    }

)

)
))*)?)
;





// Entry rule entryRuleMappingRule
entryRuleMappingRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRuleRule()); }
	 iv_ruleMappingRule=ruleMappingRule 
	 { $current=$iv_ruleMappingRule.current; } 
	 EOF 
;

// Rule MappingRule
ruleMappingRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMappingRuleAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getMappingRuleAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingRuleAccess().getTypeMAPPING_TYPEEnumRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleMAPPING_TYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRuleRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"MAPPING_TYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getMappingRuleAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getMappingRuleAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getMappingRuleAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getMappingRuleAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingRuleAccess().getMappingMappingParserRuleCall_6_0()); 
	    }
		lv_mapping_7_0=ruleMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRuleRule());
	        }
       		set(
       			$current, 
       			"mapping",
        		lv_mapping_7_0, 
        		"Mapping");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getMappingRuleAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	 iv_ruleMapping=ruleMapping 
	 { $current=$iv_ruleMapping.current; } 
	 EOF 
;

// Rule Mapping
ruleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((this_WS_0=RULE_WS
    { 
    newLeafNode(this_WS_0, grammarAccess.getMappingAccess().getWSTerminalRuleCall_0()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_1_0()); 
	    }
		lv_mappingItems_1_0=ruleMappingItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"mappingItems",
        		lv_mappingItems_1_0, 
        		"MappingItem");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_WS_2=RULE_WS
    { 
    newLeafNode(this_WS_2, grammarAccess.getMappingAccess().getWSTerminalRuleCall_2_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getMappingItemsMappingItemParserRuleCall_2_1_0()); 
	    }
		lv_mappingItems_3_0=ruleMappingItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"mappingItems",
        		lv_mappingItems_3_0, 
        		"MappingItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_WS_4=RULE_WS
    { 
    newLeafNode(this_WS_4, grammarAccess.getMappingAccess().getWSTerminalRuleCall_3()); 
    }
)*)
;





// Entry rule entryRuleMappingItem
entryRuleMappingItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingItemRule()); }
	 iv_ruleMappingItem=ruleMappingItem 
	 { $current=$iv_ruleMappingItem.current; } 
	 EOF 
;

// Rule MappingItem
ruleMappingItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_col_0_1=RULE_IDENT
		{
			newLeafNode(lv_col_0_1, grammarAccess.getMappingItemAccess().getColIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"col",
        		lv_col_0_1, 
        		"IDENT");
	    }

    |		lv_col_0_2=RULE_NUMBER
		{
			newLeafNode(lv_col_0_2, grammarAccess.getMappingItemAccess().getColNUMBERTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"col",
        		lv_col_0_2, 
        		"NUMBER");
	    }

)

)
)(this_STRING_1=RULE_STRING
    { 
    newLeafNode(this_STRING_1, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_0()); 
    }
(
(
		lv_type_2_0=RULE_IDENT
		{
			newLeafNode(lv_type_2_0, grammarAccess.getMappingItemAccess().getTypeIDENTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"IDENT");
	    }

)
)?(this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getMappingItemAccess().getSTRINGTerminalRuleCall_1_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingItemAccess().getAttrMappingIdentifierParserRuleCall_1_2_1_0()); 
	    }
		lv_attr_4_0=ruleMappingIdentifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingItemRule());
	        }
       		set(
       			$current, 
       			"attr",
        		lv_attr_4_0, 
        		"MappingIdentifier");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?)
;





// Entry rule entryRuleMappingIdentifier
entryRuleMappingIdentifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingIdentifierRule()); }
	 iv_ruleMappingIdentifier=ruleMappingIdentifier 
	 { $current=$iv_ruleMappingIdentifier.current; } 
	 EOF 
;

// Rule MappingIdentifier
ruleMappingIdentifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=RULE_IDENT
		{
			newLeafNode(lv_name_0_1, grammarAccess.getMappingIdentifierAccess().getNameIDENTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"IDENT");
	    }

    |		lv_name_0_2=RULE_IDENT_DOT
		{
			newLeafNode(lv_name_0_2, grammarAccess.getMappingIdentifierAccess().getNameIDENT_DOTTerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingIdentifierRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"IDENT_DOT");
	    }

)

)
)(this_CARET_1=RULE_CARET
    { 
    newLeafNode(this_CARET_1, grammarAccess.getMappingIdentifierAccess().getCARETTerminalRuleCall_1_0()); 
    }
(
(
(
		lv_vals_2_1=RULE_IDENT
		{
			newLeafNode(lv_vals_2_1, grammarAccess.getMappingIdentifierAccess().getValsIDENTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_2_1, 
        		"IDENT");
	    }

    |		lv_vals_2_2=RULE_NUMBER
		{
			newLeafNode(lv_vals_2_2, grammarAccess.getMappingIdentifierAccess().getValsNUMBERTerminalRuleCall_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingIdentifierRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"vals",
        		lv_vals_2_2, 
        		"NUMBER");
	    }

)

)
))*)
;





// Entry rule entryRuleOptionalFeature
entryRuleOptionalFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionalFeatureRule()); }
	 iv_ruleOptionalFeature=ruleOptionalFeature 
	 { $current=$iv_ruleOptionalFeature.current; } 
	 EOF 
;

// Rule OptionalFeature
ruleOptionalFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_IDENT
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOptionalFeatureAccess().getNameIDENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"IDENT");
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getOptionalFeatureAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getTypeOPTION_TYPEEnumRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleOPTION_TYPE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OPTION_TYPE");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getOptionalFeatureAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		lv_filters_4_0=RULE_IDENT
		{
			newLeafNode(lv_filters_4_0, grammarAccess.getOptionalFeatureAccess().getFiltersIDENTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalFeatureRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"filters",
        		lv_filters_4_0, 
        		"IDENT");
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getOptionalFeatureAccess().getRPARENTerminalRuleCall_4()); 
    }
this_EQUALS_6=RULE_EQUALS
    { 
    newLeafNode(this_EQUALS_6, grammarAccess.getOptionalFeatureAccess().getEQUALSTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOptionalFeatureAccess().getOptionFeatureValueParserRuleCall_6_0()); 
	    }
		lv_option_7_0=ruleFeatureValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionalFeatureRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_7_0, 
        		"FeatureValue");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEMICOLON_8=RULE_SEMICOLON
    { 
    newLeafNode(this_SEMICOLON_8, grammarAccess.getOptionalFeatureAccess().getSEMICOLONTerminalRuleCall_7()); 
    }
)
;





// Entry rule entryRuleFeatureValue
entryRuleFeatureValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureValueRule()); } 
	 iv_ruleFeatureValue=ruleFeatureValue 
	 { $current=$iv_ruleFeatureValue.current.getText(); }  
	 EOF 
;

// Rule FeatureValue
ruleFeatureValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_REST_0=RULE_REST    {
		$current.merge(this_REST_0);
    }

    { 
    newLeafNode(this_REST_0, grammarAccess.getFeatureValueAccess().getRESTTerminalRuleCall_0()); 
    }

    |    this_IDENT_DOT_1=RULE_IDENT_DOT    {
		$current.merge(this_IDENT_DOT_1);
    }

    { 
    newLeafNode(this_IDENT_DOT_1, grammarAccess.getFeatureValueAccess().getIDENT_DOTTerminalRuleCall_1()); 
    }

    |    this_IDENT_2=RULE_IDENT    {
		$current.merge(this_IDENT_2);
    }

    { 
    newLeafNode(this_IDENT_2, grammarAccess.getFeatureValueAccess().getIDENTTerminalRuleCall_2()); 
    }

    |    this_NUMBER_3=RULE_NUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
    newLeafNode(this_NUMBER_3, grammarAccess.getFeatureValueAccess().getNUMBERTerminalRuleCall_3()); 
    }

    |    this_WS_4=RULE_WS    {
		$current.merge(this_WS_4);
    }

    { 
    newLeafNode(this_WS_4, grammarAccess.getFeatureValueAccess().getWSTerminalRuleCall_4()); 
    }

    |    this_COLON_5=RULE_COLON    {
		$current.merge(this_COLON_5);
    }

    { 
    newLeafNode(this_COLON_5, grammarAccess.getFeatureValueAccess().getCOLONTerminalRuleCall_5()); 
    }

    |    this_STRING_6=RULE_STRING    {
		$current.merge(this_STRING_6);
    }

    { 
    newLeafNode(this_STRING_6, grammarAccess.getFeatureValueAccess().getSTRINGTerminalRuleCall_6()); 
    }

    |    this_COMMA_7=RULE_COMMA    {
		$current.merge(this_COMMA_7);
    }

    { 
    newLeafNode(this_COMMA_7, grammarAccess.getFeatureValueAccess().getCOMMATerminalRuleCall_7()); 
    }

    |    this_MINUS_8=RULE_MINUS    {
		$current.merge(this_MINUS_8);
    }

    { 
    newLeafNode(this_MINUS_8, grammarAccess.getFeatureValueAccess().getMINUSTerminalRuleCall_8()); 
    }

    |    this_PLUS_9=RULE_PLUS    {
		$current.merge(this_PLUS_9);
    }

    { 
    newLeafNode(this_PLUS_9, grammarAccess.getFeatureValueAccess().getPLUSTerminalRuleCall_9()); 
    }

    |    this_LPAREN_10=RULE_LPAREN    {
		$current.merge(this_LPAREN_10);
    }

    { 
    newLeafNode(this_LPAREN_10, grammarAccess.getFeatureValueAccess().getLPARENTerminalRuleCall_10()); 
    }

    |    this_RPAREN_11=RULE_RPAREN    {
		$current.merge(this_RPAREN_11);
    }

    { 
    newLeafNode(this_RPAREN_11, grammarAccess.getFeatureValueAccess().getRPARENTerminalRuleCall_11()); 
    }

    |    this_LBRACE_12=RULE_LBRACE    {
		$current.merge(this_LBRACE_12);
    }

    { 
    newLeafNode(this_LBRACE_12, grammarAccess.getFeatureValueAccess().getLBRACETerminalRuleCall_12()); 
    }

    |    this_RBRACE_13=RULE_RBRACE    {
		$current.merge(this_RBRACE_13);
    }

    { 
    newLeafNode(this_RBRACE_13, grammarAccess.getFeatureValueAccess().getRBRACETerminalRuleCall_13()); 
    }

    |    this_QUESTI_14=RULE_QUESTI    {
		$current.merge(this_QUESTI_14);
    }

    { 
    newLeafNode(this_QUESTI_14, grammarAccess.getFeatureValueAccess().getQUESTITerminalRuleCall_14()); 
    }

    |    this_NOT_15=RULE_NOT    {
		$current.merge(this_NOT_15);
    }

    { 
    newLeafNode(this_NOT_15, grammarAccess.getFeatureValueAccess().getNOTTerminalRuleCall_15()); 
    }

    |    this_BAND_16=RULE_BAND    {
		$current.merge(this_BAND_16);
    }

    { 
    newLeafNode(this_BAND_16, grammarAccess.getFeatureValueAccess().getBANDTerminalRuleCall_16()); 
    }

    |    this_BOR_17=RULE_BOR    {
		$current.merge(this_BOR_17);
    }

    { 
    newLeafNode(this_BOR_17, grammarAccess.getFeatureValueAccess().getBORTerminalRuleCall_17()); 
    }

    |    this_HASH_18=RULE_HASH    {
		$current.merge(this_HASH_18);
    }

    { 
    newLeafNode(this_HASH_18, grammarAccess.getFeatureValueAccess().getHASHTerminalRuleCall_18()); 
    }

    |    this_AT_19=RULE_AT    {
		$current.merge(this_AT_19);
    }

    { 
    newLeafNode(this_AT_19, grammarAccess.getFeatureValueAccess().getATTerminalRuleCall_19()); 
    }

    |    this_CARET_20=RULE_CARET    {
		$current.merge(this_CARET_20);
    }

    { 
    newLeafNode(this_CARET_20, grammarAccess.getFeatureValueAccess().getCARETTerminalRuleCall_20()); 
    }

    |    this_EQUALS_21=RULE_EQUALS    {
		$current.merge(this_EQUALS_21);
    }

    { 
    newLeafNode(this_EQUALS_21, grammarAccess.getFeatureValueAccess().getEQUALSTerminalRuleCall_21()); 
    }

    |    this_LESS_THAN_22=RULE_LESS_THAN    {
		$current.merge(this_LESS_THAN_22);
    }

    { 
    newLeafNode(this_LESS_THAN_22, grammarAccess.getFeatureValueAccess().getLESS_THANTerminalRuleCall_22()); 
    }

    |    this_MORE_THAN_23=RULE_MORE_THAN    {
		$current.merge(this_MORE_THAN_23);
    }

    { 
    newLeafNode(this_MORE_THAN_23, grammarAccess.getFeatureValueAccess().getMORE_THANTerminalRuleCall_23()); 
    }

    |    this_ESC_CHAR_24=RULE_ESC_CHAR    {
		$current.merge(this_ESC_CHAR_24);
    }

    { 
    newLeafNode(this_ESC_CHAR_24, grammarAccess.getFeatureValueAccess().getESC_CHARTerminalRuleCall_24()); 
    }
)+
    ;





// Rule STATEMEN_TYPE
ruleSTATEMEN_TYPE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='QRY' 
	{
        $current = grammarAccess.getSTATEMEN_TYPEAccess().getQRYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSTATEMEN_TYPEAccess().getQRYEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='CRUD' 
	{
        $current = grammarAccess.getSTATEMEN_TYPEAccess().getCRUDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSTATEMEN_TYPEAccess().getCRUDEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='CALL' 
	{
        $current = grammarAccess.getSTATEMEN_TYPEAccess().getCALLEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSTATEMEN_TYPEAccess().getCALLEnumLiteralDeclaration_2()); 
    }
));



// Rule MAPPING_TYPE
ruleMAPPING_TYPE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='OUT' 
	{
        $current = grammarAccess.getMAPPING_TYPEAccess().getOUTEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMAPPING_TYPEAccess().getOUTEnumLiteralDeclaration()); 
    }
);



// Rule OPTION_TYPE
ruleOPTION_TYPE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='OPT' 
	{
        $current = grammarAccess.getOPTION_TYPEAccess().getOPTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOPTION_TYPEAccess().getOPTEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='LOPT' 
	{
        $current = grammarAccess.getOPTION_TYPEAccess().getLOPTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOPTION_TYPEAccess().getLOPTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='IOPT' 
	{
        $current = grammarAccess.getOPTION_TYPEAccess().getIOPTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getOPTION_TYPEAccess().getIOPTEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='SOPT' 
	{
        $current = grammarAccess.getOPTION_TYPEAccess().getSOPTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getOPTION_TYPEAccess().getSOPTEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='BOPT' 
	{
        $current = grammarAccess.getOPTION_TYPEAccess().getBOPTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getOPTION_TYPEAccess().getBOPTEnumLiteralDeclaration_4()); 
    }
));



RULE_IDENT_DOT : RULE_IDENT ('.' RULE_IDENT)+;

RULE_IDENT : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'=')*;

RULE_NUMBER : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\n'|'\r')+;

RULE_AND : '&' '&';

RULE_OR : '|' '|';

RULE_ESC_CHAR : '\\' (RULE_COLON|RULE_SEMICOLON|RULE_STRING|RULE_LBRACE|RULE_RBRACE|RULE_BOR|RULE_HASH|RULE_AT);

RULE_COLON : ':';

RULE_SEMICOLON : ';';

RULE_STRING : '$';

RULE_COMMA : ',';

RULE_MINUS : '-';

RULE_PLUS : '+';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_LBRACE : '{';

RULE_RBRACE : '}';

RULE_QUESTI : '?';

RULE_NOT : '!';

RULE_BAND : '&';

RULE_BOR : '|';

RULE_HASH : '#';

RULE_AT : '@';

RULE_CARET : '^';

RULE_EQUALS : '=';

RULE_LESS_THAN : '<';

RULE_MORE_THAN : '>';

RULE_REST : ~(RULE_SEMICOLON);


