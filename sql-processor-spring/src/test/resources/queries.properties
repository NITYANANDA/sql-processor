SET_LIKE_STRING=like
SET_WILDCARD_CHARACTER=%
SET_SURROUND_QUERY_LIKE=true
SET_SURROUND_QUERY_MIN_LEN=2

# $S is the full query
# $s is the query without token 'select'
# $F is 1-based from (offset)
# $f is 0-based from (offset)
# $M is max returned rows
# $m is max rowid of returned rows

#HSQLDB_SET_LIMIT_FROM_TO=$S offset ? limit ?
#HSQLDB_SET_LIMIT_TO=$S limit ?
#HSQLDB_SET_LIMIT_FROM_TO=select limit $F $M $s
#HSQLDB_SET_LIMIT_TO=select top $M $s
#ORACLE_SET_LIMIT_FROM_TO=select * from ( select row_.*, rownum rownum_ from ($S) row_ where rownum <= $m) where rownum_ > $F
#ORACLE_SET_LIMIT_TO=select * from ($S) where rownum <= $m

QRY_ANSI_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  order by id
OUT_ANSI_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_ANSI_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @first, p.NAME_LAST @last, p.SSN_NUMBER @ssn, p.SSN_COUNTRY @country, \
  p.BIRTHDATE @birthDate, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, \
  p.LASTUPDATED @lastUpdated, p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  order by id
OUT_ANSI_BASIC_2=first$$name.first last$$name.last ssn$$ssn.number \
  country$$ssn.country birthDate$date createdDate$date \
  lastUpdated$date

QRY_ANSI_BASIC_3= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate^date, p.CREATEDBY @createdBy, \
  p.LASTUPDATED @lastUpdated^date, p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  order by id
  

QRY_SQL_EXT_BASIC= \
  select p.ID, $-name.first first, :+name.last last \
  from PERSON p \
  where 1=1 \
  order by id
OUT_SQL_EXT_BASIC=id$Long$id first$string$name.first last$string$name.last

QRY_SQL_EXT_BASIC_2= \
  select p.ID @id, $-name.first @name.first^string, :+name.last @name.last \
  from PERSON p \
  where 1=1 \
  order by id


QRY_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  {#1 order by id}
OUT_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate^date, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  {#1 order by id}


QRY_FORM_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  where 1=1 \
  {& p.id = :id} \
  {& p.NAME_FIRST = :name.first | p.NAME_LAST = :name.last | p.SSN_NUMBER = :ssn.number} \
  {& p.SSN_COUNTRY = :ssn.country | p.BIRTHDATE = :birthDate | p.SEX = :sex.value} \
  {& p.CREATEDDATE = :createdDate | p.LASTUPDATEDBY = :lastUpdatedBy | p.LASTUPDATED = :lastUpdated} \
  {& p.CREATEDBY = :createdBy} \
  {& p.VERSION = :version} \
  {#1 order by id}
OUT_FORM_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_FORM_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p {= where \
   {& p.id = :id} \
   {& p.NAME_FIRST = :name.first | p.NAME_LAST = :name.last | p.SSN_NUMBER = :ssn.number} \
   {& p.SSN_COUNTRY = :ssn.country | p.BIRTHDATE = :birthDate | p.SEX = :sex.value} \
   {& p.CREATEDDATE = :createdDate | p.LASTUPDATEDBY = :lastUpdatedBy | p.LASTUPDATED = :lastUpdated} \
   {& p.CREATEDBY = :createdBy} \
   {& p.VERSION = :version} \
  } \
  {#1 order by id}


QRY_FORM_OR_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  where 1=1 \
  {& p.id = :id} \
  {| p.NAME_FIRST = :name.first | p.NAME_LAST = :name.last | p.SSN_NUMBER = :ssn.number} \
  {| p.SSN_COUNTRY = :ssn.country | p.BIRTHDATE = :birthDate | p.SEX = :sex.value} \
  {| p.CREATEDDATE = :createdDate | p.LASTUPDATEDBY = :lastUpdatedBy | p.LASTUPDATED = :lastUpdated} \
  {#1 order by id}
OUT_FORM_OR_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_FORM_OR_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p {= where \
   {& p.id = :id} \
   {| p.NAME_FIRST = :name.first | p.NAME_LAST = :name.last | p.SSN_NUMBER = :ssn.number} \
   {| p.SSN_COUNTRY = :ssn.country | p.BIRTHDATE = :birthDate | p.SEX = :sex.value} \
   {| p.CREATEDDATE = :createdDate | p.LASTUPDATEDBY = :lastUpdatedBy | p.LASTUPDATED = :lastUpdated} \
  } \
  {#1 order by id}


QRY_CONSTANT_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  where 1=1 \
  {& p.id = $id} \
  {& p.NAME_FIRST = $name.first | p.NAME_LAST = $name.last | p.SSN_NUMBER = $ssn.number} \
  {& p.SSN_COUNTRY = $ssn.country | p.BIRTHDATE = $birthDate | p.SEX = $sex.value} \
  {& p.CREATEDDATE = $createdDate | p.LASTUPDATEDBY = $lastUpdatedBy | p.LASTUPDATED = $lastUpdated} \
  {& p.CREATEDBY = $createdBy} \
  {& p.VERSION = $version} \
  {#1 order by id}
OUT_CONSTANT_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_CONSTANT_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p {= where \
   {& p.id = $id} \
   {& p.NAME_FIRST = $name.first | p.NAME_LAST = $name.last | p.SSN_NUMBER = $ssn.number} \
   {& p.SSN_COUNTRY = $ssn.country | p.BIRTHDATE = $birthDate | p.SEX = $sex.value} \
   {& p.CREATEDDATE = $createdDate | p.LASTUPDATEDBY = $lastUpdatedBy | p.LASTUPDATED = $lastUpdated} \
   {& p.CREATEDBY = $createdBy} \
   {& p.VERSION = $version} \
  } \
  {#1 order by id}


QRY_CONSTANT_OR_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  where 1=1 \
  {& p.id = $id} \
  {| p.NAME_FIRST = $name.first | p.NAME_LAST = $name.last | p.SSN_NUMBER = $ssn.number} \
  {| p.SSN_COUNTRY = $ssn.country | p.BIRTHDATE = $birthDate | p.SEX = $sex.value} \
  {| p.CREATEDDATE = $createdDate | p.LASTUPDATEDBY = $lastUpdatedBy | p.LASTUPDATED = $lastUpdated} \
  {#1 order by id}
OUT_CONSTANT_OR_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_CONSTANT_OR_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p {= where \
   {& p.id = $id} \
   {| p.NAME_FIRST = $name.first | p.NAME_LAST = $name.last | p.SSN_NUMBER = $ssn.number} \
   {| p.SSN_COUNTRY = $ssn.country | p.BIRTHDATE = $birthDate | p.SEX = $sex.value} \
   {| p.CREATEDDATE = $createdDate | p.LASTUPDATEDBY = $lastUpdatedBy | p.LASTUPDATED = $lastUpdated} \
  } \
  {#1 order by id}

  
QRY_CONSTANT_IN_ORDER_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  where 1=1 \
  {& p.id in $idSet} \
  {#1 order by id} \
  {#2 order by NAME_FIRST} \
  {#3 order by NAME_LAST}
OUT_CONSTANT_IN_ORDER_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_CONSTANT_IN_ORDER_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p {= where \
   {& p.id in $idSet} \
  } \
  {#1 order by id} \
  {#2 order by NAME_FIRST} \
  {#3 order by NAME_LAST}

  
QRY_INDENT_AND_CONSTANT_OUT_OF_META_SQL_BASIC= \
  select p.ID, $name.first first, :name.last last \
  from PERSON p \
  where 1=1 \
  {& p.id = :id} \
  {#1 order by id}
OUT_INDENT_AND_CONSTANT_OUT_OF_META_SQL_BASIC=id$Long$id first$string$name.first last$string$name.last

QRY_INDENT_AND_CONSTANT_OUT_OF_META_SQL_BASIC_2= \
  select p.ID @id, $name.first @name.first^string, :name.last @name.last \
  from PERSON p {= where \
   {& p.id = :id} \
  } \
  {#1 order by id}
  
  
QRY_SQL_IN_BRACES_BASIC= \
  select p.ID {, $name.first first, p.SSN_NUMBER ssn |, '' first, p.SSN_NUMBER ssn} {, :+name.last last |, '' last} {, p.BIRTHDATE} \
  from PERSON p \
  order by id
OUT_SQL_IN_BRACES_BASIC=id$Long$id first$string$name.first last$string$name.last birthDate$date$birthDate \
  ssn$string$ssn.number

QRY_SQL_IN_BRACES_BASIC_2= \
  select p.ID @id {, $name.first @first, p.SSN_NUMBER @ssn |, '' @first, p.SSN_NUMBER @ssn} {, :+name.last @last |, '' @last} {, p.BIRTHDATE @birthDate} \
  from PERSON p \
  order by id
OUT_SQL_IN_BRACES_BASIC_2=first$string$name.first last$$name.last birthDate$date ssn$$ssn.number
  
  
QRY_SQL_IN_BRACES_ADV= \
  select p.ID @id { {, $name.first @first, p.SSN_NUMBER @ssn} {, :+name.last @last}, :lastUpdatedBy @lastUpdatedBy} \
  from PERSON p \
  order by id
OUT_SQL_IN_BRACES_ADV=first$string$name.first last$$name.last ssn$$ssn.number
  
QRY_SQL_IN_BRACES_ADV_2= \
  select p.ID @id { {, $name.first @name.first^string, p.SSN_NUMBER @ssn.number} {, :+name.last @name.last}, :lastUpdatedBy @lastUpdatedBy} \
  from PERSON p \
  order by id

  
QRY_CONDITIONAL_JOIN_ADV= \
  select m.id, m.TITLE, e.ROLE \
  {? :fname | , p.NAME_FIRST first, p.NAME_LAST last | , '' first, '' last} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? :fname | left join PERSON p on e.PERSON = p.ID} \
  where 1=1 \
  {& m.id in $idSet} \
  {& UPPER(p.NAME_FIRST) = :+fname} \
  order by id
OUT_CONDITIONAL_JOIN_ADV=id$Long$id first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role

QRY_CONDITIONAL_JOIN_ADV_2= \
  select m.id @id, m.TITLE @mediaTitle, e.ROLE @engagement.role \
  {? :fname | , p.NAME_FIRST @engagement.first, p.NAME_LAST @engagement.last} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? :fname | left join PERSON p on e.PERSON = p.ID} \
  {= where \
   {& m.id in $idSet} \
   {& UPPER(p.NAME_FIRST) = :+fname} \
  } \
  order by id

  
QRY_CONDITIONAL_JOIN_2_LEVELS_ADV= \
  select l.id, l.NAME, pm.location \
  {? :media | \
    {? :fname | , m.TITLE, e.ROLE, p.NAME_FIRST first, p.NAME_LAST last \
              | , m.TITLE, e.ROLE, '' first, '' last \
    } \
            |  , '' title, '' role, '' first, '' last \
  } \
  from LIBRARY l left join PHYSICALMEDIA pm on pm.LIBRARY = l.id \
  {? :media | \
    {? :fname | left join MEDIA_PHYSICALMEDIA mpm on mpm.PHYSICALMEDIA = pm.id \
                left join MEDIA m on mpm.MEDIA = m.id \
                left join ENGAGEMENT e on e.MEDIA = m.ID \
                left join PERSON p on e.PERSON = p.ID | \
                left join MEDIA_PHYSICALMEDIA mpm on mpm.PHYSICALMEDIA = pm.id \
                left join MEDIA m on mpm.MEDIA = m.id \
                left join ENGAGEMENT e on e.MEDIA = m.ID \
    } \
  } \
  where 1=1 \
  {& UPPER(m.TITLE) = :+media} \
  {? :media | {& UPPER(p.NAME_FIRST) = :+fname}} \
  order by l.id, pm.location
OUT_CONDITIONAL_JOIN_2_LEVELS_ADV=id$Long$id location$string$location first$string$media.engagement.first \
  last$string$media.engagement.last title$string$media.mediaTitle role$string$media.engagement.role name$string$name
  
QRY_CONDITIONAL_JOIN_2_LEVELS_ADV_2= \
  select l.id @id, l.NAME @name, pm.location @location \
  {? :media | \
    {? :fname | , m.TITLE @title, e.ROLE @role, p.NAME_FIRST @first, p.NAME_LAST @last \
              | , m.TITLE @title, e.ROLE @role \
    } \
  } \
  from LIBRARY l left join PHYSICALMEDIA pm on pm.LIBRARY = l.id \
  {? :media | \
    {? :fname | left join MEDIA_PHYSICALMEDIA mpm on mpm.PHYSICALMEDIA = pm.id \
                left join MEDIA m on mpm.MEDIA = m.id \
                left join ENGAGEMENT e on e.MEDIA = m.ID \
                left join PERSON p on e.PERSON = p.ID | \
                left join MEDIA_PHYSICALMEDIA mpm on mpm.PHYSICALMEDIA = pm.id \
                left join MEDIA m on mpm.MEDIA = m.id \
                left join ENGAGEMENT e on e.MEDIA = m.ID \
    } \
  } \
  {= where \
   {& UPPER(m.TITLE) = :+media} \
   {? :media | {& UPPER(p.NAME_FIRST) = :+fname}} \
  } \
  order by l.id, pm.location
OUT_CONDITIONAL_JOIN_2_LEVELS_ADV_2=first$string$media.engagement.first \
  last$string$media.engagement.last title$string$media.mediaTitle role$string$media.engagement.role
  
    
QRY_CONDITIONAL_WHERE_ADV= \
  select m.id, m.TITLE, e.ROLE \
  {? :fname | , p.NAME_FIRST first, p.NAME_LAST last | , '' first, '' last} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? :fname | left join PERSON p on e.PERSON = p.ID} \
  where 1=1 \
  {? :fname | {& UPPER(p.NAME_FIRST) = :+fname}} \
  order by id
OUT_CONDITIONAL_WHERE_ADV=id$Long$id first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role

QRY_CONDITIONAL_WHERE_ADV_2= \
  select m.id @id, m.TITLE @title, e.ROLE @role \
  {? :fname | , p.NAME_FIRST @first, p.NAME_LAST @last} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? :fname | left join PERSON p on e.PERSON = p.ID} \
  {= where \
   {? :fname | {& UPPER(p.NAME_FIRST) = :+fname}} \
  } \
  order by id
OUT_CONDITIONAL_WHERE_ADV_2=first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role
  
    
QRY_CONDITIONAL_WHERE_AND_BRACES_ADV= \
  select m.id, m.TITLE, e.ROLE \
  {? :fname || :lname | , p.NAME_FIRST first, p.NAME_LAST last | , '' first, '' last} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? :fname || :lname | left join PERSON p on e.PERSON = p.ID} \
  where \
  {? :lname | { UPPER(p.NAME_LAST) = :+lname} | 1=1} \
  {? :lname && :fname | { AND} | { AND}} \
  {? :fname | { UPPER(p.NAME_FIRST) = :+fname} | 1=1} \
  order by id
OUT_CONDITIONAL_WHERE_AND_BRACES_ADV=id$Long$id first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role

QRY_CONDITIONAL_WHERE_AND_BRACES_ADV_2= \
  select m.id @id, m.TITLE @title, e.ROLE @role \
  {? :fname || :lname | , p.NAME_FIRST @first, p.NAME_LAST @last} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? :fname || :lname | left join PERSON p on e.PERSON = p.ID} \
  {= where \
   {? :lname | { AND UPPER(p.NAME_LAST) = :+lname}} \
   {? :fname | { AND UPPER(p.NAME_FIRST) = :+fname}} \
  } \
  order by id
OUT_CONDITIONAL_WHERE_AND_BRACES_ADV_2=first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role


QRY_CONDITIONAL_WHERE_AND_BRACES_MORE_ADV= \
  select m.id, m.TITLE, e.ROLE \
  {? (:fname && :lname) || :ssn | , p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn | , '' first, '' last, '' ssn} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? (:fname && :lname) || :ssn | left join PERSON p on e.PERSON = p.ID} \
  where 1=1 \
  {? :lname && :fname | AND UPPER(p.NAME_LAST) = :+lname AND UPPER(p.NAME_FIRST) = :+fname} \
  {? :ssn | {& p.SSN_NUMBER = :ssn} } \
  order by id
OUT_CONDITIONAL_WHERE_AND_BRACES_MORE_ADV=id$Long$id first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role ssn$string$engagement.ssn

QRY_CONDITIONAL_WHERE_AND_BRACES_MORE_ADV_2= \
  select m.id @id, m.TITLE @title, e.ROLE @role \
  {? (:fname && :lname) || :ssn | , p.NAME_FIRST @first, p.NAME_LAST @last, p.SSN_NUMBER @ssn} \
  from MEDIA m left join ENGAGEMENT e on e.MEDIA = m.ID \
  {? (:fname && :lname) || :ssn | left join PERSON p on e.PERSON = p.ID} \
  {= where \
   {? :lname && :fname | AND UPPER(p.NAME_LAST) = :+lname AND UPPER(p.NAME_FIRST) = :+fname} \
   {? :ssn | {& p.SSN_NUMBER = :ssn} } \
  } \
  order by id
OUT_CONDITIONAL_WHERE_AND_BRACES_MORE_ADV_2=first$string$engagement.first last$string$engagement.last \
  title$string$mediaTitle role$string$engagement.role ssn$string$engagement.ssn

  
QRY_LIKE_BASIC= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  where 1=1 \
  {& p.id = :id} \
  {& UPPER(p.NAME_FIRST) like :+name.first} \
  {? :name.last | and UPPER(p.NAME_LAST) like :+name.last} \
  {? :name.last | and (UPPER(p.NAME_FIRST) like :+name.last or UPPER(p.NAME_LAST) like :+name.last)} \
  {#1 order by id}
OUT_LIKE_BASIC=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version

QRY_LIKE_BASIC_2= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate^date, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  where 1=1 \
  {& p.id = :id} \
  {& UPPER(p.NAME_FIRST) like :+name.first} \
  {? :name.last | and UPPER(p.NAME_LAST) like :+name.last} \
  {? :name.last | and (UPPER(p.NAME_FIRST) like :+name.last or UPPER(p.NAME_LAST) like :+name.last)} \
  {#1 order by id}
 
 
QRY_ORDER= \
  select p.ID, p.NAME_FIRST first, p.NAME_LAST last, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, \
  p.BIRTHDATE, p.SEX, p.CREATEDDATE, p.CREATEDBY, p.LASTUPDATED, p.LASTUPDATEDBY, p.VERSION \
  from PERSON p \
  {#1 order by id} \
  {#2 first} \
  {#3 last} \
  {#4 ssn} \
  {#5 country}
OUT_ORDER=id$Long$id first$string$name.first last$string$name.last ssn$string$ssn.number \
  country$estring$ssn.country birthDate$date$birthDate sex$estring$sex createdDate$date$createdDate \
  createdBy$string$createdBy lastUpdated$date$lastUpdated lastUpdatedBy$string$lastUpdatedBy \
  version$Long$version


QRY_ENUM= \
  select p.ID, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, p.SEX, p.CLOTHES_SIZE clothesSize \
  from PERSON p \
  where 1=1 \
  {& p.SEX = :sex^estring} \
  {& p.SSN_COUNTRY = $ssn.country^estring} \
  {& p.CLOTHES_SIZE = :clothesSize^eint} \
  {#1 order by id}
OUT_ENUM=id$Long ssn$string$ssn.number country$estring$ssn.country sex$estring \
clothesSize$eint

QRY_ENUM_2= \
  select p.ID @id, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, p.SEX @sex, p.CLOTHES_SIZE @clothesSize \
  from PERSON p \
  where 1=1 \
  {& p.SEX = :sex} \
  {& p.SSN_COUNTRY = $ssn.country} \
  {& p.CLOTHES_SIZE = :clothesSize} \
  {#1 order by id}


QRY_ENUM_IN= \
  select p.ID, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, p.SEX, p.CLOTHES_SIZE clothesSize \
  from PERSON p \
  where 1=1 \
  {& p.SEX in :sexs^estring} \
  {& p.SSN_COUNTRY in $ssn.countries^estring} \
  {& p.CLOTHES_SIZE in :clothesSizes^eint} \
  {#1 order by id}
OUT_ENUM_IN=id$Long ssn$string$ssn.number country$estring$ssn.country sex$estring \
clothesSize$eint

QRY_ENUM_IN_2= \
  select p.ID @id, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, p.SEX @sex, p.CLOTHES_SIZE @clothesSize \
  from PERSON p \
  where 1=1 \
  {& p.SEX in :sexs} \
  {& p.SSN_COUNTRY in $ssn.countries} \
  {& p.CLOTHES_SIZE in :clothesSizes} \
  {#1 order by id}


QRY_ENUM_CONDITION= \
  select p.ID, p.SSN_NUMBER ssn, p.SSN_COUNTRY country, p.SEX, p.CLOTHES_SIZE clothesSize \
  from PERSON p \
  where 1=1 \
  {? :sex^estring^MALE | and p.SEX = 'M'} \
  {? $ssn.country^estring^US | and p.SSN_COUNTRY = 'US'} \
  {? :clothesSize^eint^MIDDLE | and p.CLOTHES_SIZE = 1} \
  {#1 order by id}
OUT_ENUM_CONDITION=id$Long ssn$string$ssn.number country$estring$ssn.country sex$estring \
clothesSize$eint

QRY_ENUM_CONDITION_2= \
  select p.ID @id, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, p.SEX @sex, p.CLOTHES_SIZE @clothesSize \
  from PERSON p \
  where 1=1 \
  {? :sex^estring^MALE | and p.SEX = 'M'} \
  {? $ssn.country^estring^US | and p.SSN_COUNTRY = 'US'} \
  {? :clothesSize^eint^MIDDLE | and p.CLOTHES_SIZE = 1} \
  {#1 order by id}


QRY_SIMPLE_ESCAPED= \
  select p.ID @id, p.NAME_LAST @name.last, \
  '\\:\\$\\@}|' @name.first^string \
  from PERSON p \
  order by id
  
QRY_IN_META_ESCAPED= \
  select p.ID @id, \
  { $-name.last @name.last^string, '\\:\\$\\@\\}\\|' @name.first^string } \
  from PERSON p \
  order by id
  

QRY_COLLECTIONS_UNDEFINED= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.LASTUPDATEDBY @lastUpdatedBy \
  from PERSON p \
  where 1=1 \
  {& p.ID in :idSet} \
  {& p.LASTUPDATEDBY in :updatedBySet} \
  {& p.NAME_FIRST in :names.firstList | p.NAME_LAST in :names.lastList} \
  {#1 order by id}
  
QRY_COLLECTIONS_STANDARD= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.LASTUPDATEDBY @lastUpdatedBy \
  from PERSON p \
  where 1=1 \
  {& p.ID in :idSet^Long} \
  {& p.LASTUPDATEDBY in :updatedBySet^String} \
  {& p.NAME_FIRST in :names.firstList^String | p.NAME_LAST in :names.lastList^String} \
  {#1 order by id}
  
QRY_COLLECTIONS_HIBERNATE= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.LASTUPDATEDBY @lastUpdatedBy \
  from PERSON p \
  where 1=1 \
  {& p.ID in :idSet^h_LONG} \
  {& p.LASTUPDATEDBY in :updatedBySet^h_STRING} \
  {& p.NAME_FIRST in :names.firstList^h_STRING | p.NAME_LAST in :names.lastList^h_STRING} \
  {#1 order by id}


QRY_PARAMETERS_MORE= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  where 1=1 \
  {& p.id = :id^long^null} \
  {& p.NAME_FIRST = :name.first^string^null | p.NAME_LAST = :name.last^string^null | p.SSN_NUMBER = :ssn.number^string^null} \
  {& p.SSN_COUNTRY = :ssn.country^estring^null | p.BIRTHDATE = :birthDate^date^null | p.SEX = :sex^estring^null} \
  {& p.CREATEDDATE = :createdDate^datetime^null | p.LASTUPDATEDBY = :lastUpdatedBy^string^null | p.LASTUPDATED = :lastUpdated^datetime^null} \
  {& p.CREATEDBY = :createdBy^string^null} \
  {& p.VERSION = :version^long^null} \
  {#1 order by id}
  
QRY_PARAMETERS_TOP= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  where p.id = :id^long^any \
  {? :createdBy | AND p.CREATEDBY=:createdBy | AND p.CREATEDBY is null } \
  {#1 order by id}
  

QRY_CONDITIONS_MORE= \
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.SSN_NUMBER @ssn.number, p.SSN_COUNTRY @ssn.country, \
  p.BIRTHDATE @birthDate^date, p.SEX @sex, p.CREATEDDATE @createdDate, p.CREATEDBY @createdBy, p.LASTUPDATED @lastUpdated^date, \
  p.LASTUPDATEDBY @lastUpdatedBy, p.VERSION @version \
  from PERSON p \
  where 1=1 \
  {? :id^long^null | AND p.ID is null | AND p.ID = :id} \
  {? :version^long^1 | AND (p.VERSION = 1 OR p.VERSION is null)} \
  {? $lastUpdatedBy^string^pes | AND p.LASTUPDATEDBY = 'dbunit' | AND p.LASTUPDATEDBY like '%'} \
  {#1 order by id}
  
QRY_EXC_1= \
  select p.ID @id, p.NAME_FIRST @name.first \
  from PERSON p \
  {= where \
   {& p.id = :id} \
   {& p.NAME_FIRST = :name.first} \
   {& p.SEX = $sex} \
   {& p.NAME_LAST = $name.last} \
  }
