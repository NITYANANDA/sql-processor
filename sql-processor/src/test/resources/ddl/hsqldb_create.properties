###########################################
# Create
###########################################

## Create normal entities
    
s1 = CREATE TABLE MEDIA ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  TITLE VARCHAR(100) NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL \
);


s2 = CREATE TABLE BOOK ( \
  ISBN VARCHAR(20) NOT NULL, \
  MEDIA BIGINT NOT NULL \
);


s3 = CREATE TABLE CONTACT ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  ADRESS VARCHAR(100), \
  CITY VARCHAR(100), \
  ZIP VARCHAR(100), \
  STATE VARCHAR(100), \
  UUID VARCHAR(36) NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL, \
  PERSONNAME_FIRST VARCHAR(100), \
  PERSONNAME_LAST VARCHAR(100), \
  PHONE_NUMBER VARCHAR(100) \
);


s4 = CREATE TABLE PERSON ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  BIRTHDATE DATE NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL, \
  CONTACT BIGINT, \
  SSN_NUMBER VARCHAR(20) NOT NULL, \
  SSN_COUNTRY VARCHAR(100) NOT NULL, \
  NAME_FIRST VARCHAR(100) NOT NULL, \
  NAME_LAST VARCHAR(100) NOT NULL, \
  SEX VARCHAR(100) NOT NULL, \
  CLOTHES_SIZE INT \
);


s5 = CREATE TABLE ENGAGEMENT ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  ROLE VARCHAR(100) NOT NULL, \
  UUID VARCHAR(36) NOT NULL, \
  PERSON BIGINT NOT NULL, \
  MEDIA BIGINT NOT NULL \
);


s6 = CREATE TABLE LIBRARY ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  NAME VARCHAR(100) NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL \
);


s7 = CREATE TABLE MEDIACHARACTER ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  NAME VARCHAR(100) NOT NULL, \
  UUID VARCHAR(36) NOT NULL \
);


s8 = CREATE TABLE MOVIE ( \
  URLIMDB VARCHAR(100) NOT NULL, \
  PLAYLENGTH INT NOT NULL, \
  CATEGORY VARCHAR(40), \
  MEDIA BIGINT NOT NULL \
);


s9 = CREATE TABLE PHYSICALMEDIA ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  STATUS VARCHAR(3) NOT NULL, \
  LOCATION VARCHAR(100) NOT NULL, \
  UUID VARCHAR(36) NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL, \
  LIBRARY BIGINT \
);


## Create many to many relations
    
s10 = CREATE TABLE EXISTSINMEDIA_MEDIACHARACTER ( \
  MEDIACHARACTER BIGINT NOT NULL, \
  EXISTSINMEDIA BIGINT NOT NULL \
);


s11 = CREATE TABLE MEDIACHARACTER_PLAYEDBY ( \
  PLAYEDBY BIGINT NOT NULL, \
  MEDIACHARACTER BIGINT NOT NULL \
);


s12 = CREATE TABLE MEDIA_PHYSICALMEDIA ( \
  PHYSICALMEDIA BIGINT NOT NULL, \
  MEDIA BIGINT NOT NULL \
);


## Primary keys
    
s13 = ALTER TABLE MEDIA ADD CONSTRAINT PK_MEDIA \
	PRIMARY KEY (ID) \
;

s14 = ALTER TABLE CONTACT ADD CONSTRAINT PK_CONTACT \
	PRIMARY KEY (ID) \
;

s15 = ALTER TABLE PERSON ADD CONSTRAINT PK_PERSON \
	PRIMARY KEY (ID) \
;

s16 = ALTER TABLE ENGAGEMENT ADD CONSTRAINT PK_ENGAGEMENT \
	PRIMARY KEY (ID) \
;

s17 = ALTER TABLE LIBRARY ADD CONSTRAINT PK_LIBRARY \
	PRIMARY KEY (ID) \
;

s18 = ALTER TABLE MEDIACHARACTER ADD CONSTRAINT PK_MEDIACHARACTER \
	PRIMARY KEY (ID) \
;

s19 = ALTER TABLE PHYSICALMEDIA ADD CONSTRAINT PK_PHYSICALMEDIA \
	PRIMARY KEY (ID) \
;
    
s20 = ALTER TABLE EXISTSINMEDIA_MEDIACHARACTER ADD CONSTRAINT PK_EXISTSINMEDIA_MEDIACHARACTER \
	PRIMARY KEY (MEDIACHARACTER, EXISTSINMEDIA) \
;

s21 = ALTER TABLE MEDIACHARACTER_PLAYEDBY ADD CONSTRAINT PK_MEDIACHARACTER_PLAYEDBY \
	PRIMARY KEY (PLAYEDBY, MEDIACHARACTER) \
;

s22 = ALTER TABLE MEDIA_PHYSICALMEDIA ADD CONSTRAINT PK_MEDIA_PHYSICALMEDIA \
	PRIMARY KEY (PHYSICALMEDIA, MEDIA) \
;


## Unique constraints

s23 = ALTER TABLE BOOK \
	ADD CONSTRAINT UQ_BOOK UNIQUE (ISBN) \
;

s24 = ALTER TABLE CONTACT \
    ADD CONSTRAINT UQ_CONTACT UNIQUE (UUID) \
;

s25 = ALTER TABLE PERSON \
	ADD CONSTRAINT UQ_PERSON UNIQUE (SSN_NUMBER, SSN_COUNTRY) \
;

s26 = ALTER TABLE ENGAGEMENT \
    ADD CONSTRAINT UQ_ENGAGEMENT UNIQUE (UUID) \
;

s27 = ALTER TABLE LIBRARY \
	ADD CONSTRAINT UQ_LIBRARY UNIQUE (NAME) \
;

s28 = ALTER TABLE MEDIACHARACTER \
    ADD CONSTRAINT UQ_MEDIACHARACTER UNIQUE (UUID) \
;

s29 = ALTER TABLE MOVIE \
	ADD CONSTRAINT UQ_MOVIE UNIQUE (URLIMDB) \
;

s30 = ALTER TABLE PHYSICALMEDIA \
    ADD CONSTRAINT UQ_PHYSICALMEDIA UNIQUE (UUID) \
;


## Foreign key constraints

s31 = ALTER TABLE BOOK ADD CONSTRAINT FK_BOOK_MEDIA \
	FOREIGN KEY (MEDIA) REFERENCES MEDIA (ID) ON DELETE CASCADE \
;

s32 = ALTER TABLE MOVIE ADD CONSTRAINT FK_MOVIE_MEDIA \
	FOREIGN KEY (MEDIA) REFERENCES MEDIA (ID) ON DELETE CASCADE \
;
  
s33 = ALTER TABLE PERSON ADD CONSTRAINT FK_PERSON_CONTACT \
	FOREIGN KEY (CONTACT) REFERENCES CONTACT (ID) ON DELETE CASCADE \
;
  
s34 = ALTER TABLE ENGAGEMENT ADD CONSTRAINT FK_ENGAGEMENT_PERSON \
	FOREIGN KEY (PERSON) REFERENCES PERSON (ID) ON DELETE CASCADE \ 
;

s35 = ALTER TABLE ENGAGEMENT ADD CONSTRAINT FK_ENGAGEMENT_MEDIA \
	FOREIGN KEY (MEDIA) REFERENCES MEDIA (ID) ON DELETE CASCADE \
;

s36 = ALTER TABLE PHYSICALMEDIA ADD CONSTRAINT FK_PHYSICALMEDIA_LIBRARY \
	FOREIGN KEY (LIBRARY) REFERENCES LIBRARY (ID) ON DELETE CASCADE \
;

s37 = ALTER TABLE EXISTSINMEDIA_MEDIACHARACTER ADD CONSTRAINT FK_EXISTSINMEDIA_MEDIACHARAC53 \
	FOREIGN KEY (MEDIACHARACTER) REFERENCES MEDIACHARACTER (ID) \
;

s38 = ALTER TABLE EXISTSINMEDIA_MEDIACHARACTER ADD CONSTRAINT FK_EXISTSINMEDIA_MEDIACHARAC27 \
	FOREIGN KEY (EXISTSINMEDIA) REFERENCES MEDIA (ID) \
;
  
s39 = ALTER TABLE MEDIACHARACTER_PLAYEDBY ADD CONSTRAINT FK_MEDIACHARACTER_PLAYEDBY_P03 \
	FOREIGN KEY (PLAYEDBY) REFERENCES PERSON (ID) ON DELETE CASCADE \
;

s40 = ALTER TABLE MEDIACHARACTER_PLAYEDBY ADD CONSTRAINT FK_MEDIACHARACTER_PLAYEDBY_M76 \
	FOREIGN KEY (MEDIACHARACTER) REFERENCES MEDIACHARACTER (ID) \
;
  
s41 = ALTER TABLE MEDIA_PHYSICALMEDIA ADD CONSTRAINT FK_MEDIA_PHYSICALMEDIA_PHYSI64 \
	FOREIGN KEY (PHYSICALMEDIA) REFERENCES PHYSICALMEDIA (ID) \
;

s42 = ALTER TABLE MEDIA_PHYSICALMEDIA ADD CONSTRAINT FK_MEDIA_PHYSICALMEDIA_MEDIA \
	FOREIGN KEY (MEDIA) REFERENCES MEDIA (ID) \
;

## Create pk sequence
    
s43 = CREATE SEQUENCE SQLPROC_SEQUENCE AS BIGINT START WITH 100 INCREMENT BY 1;

## types

s44 = CREATE TABLE TYPES  \
( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL \
, T_INT INT  \
, T_LONG BIGINT  \
, T_BYTE TINYINT  \
, T_SHORT SMALLINT  \
, T_FLOAT FLOAT  \
, T_DOUBLE DOUBLE  \
, T_CHAR CHAR(1)  \
, T_STRING VARCHAR(255)  \
, T_DATE DATE  \
, T_TIME TIME  \
, T_DATETIME DATETIME  \
, T_TIMESTAMP TIMESTAMP  \
, T_BOOLEAN BOOLEAN  \
, T_BIG_INTEGER DECIMAL  \
, T_BIG_DECIMAL DECIMAL  \
, A_BYTE BINARY  \
, A_TEXT LONGVARCHAR  \
, A_CLOB LONGVARCHAR  \
, A_BLOB LONGVARBINARY  \
);

s45 = CREATE PROCEDURE new_person(OUT newid INT, IN birthdate DATE, IN ssn_number VARCHAR(20), IN ssn_country VARCHAR(100), IN name_first VARCHAR(100), IN name_last VARCHAR(100), INOUT sex VARCHAR(100)) \
  MODIFIES SQL DATA \
  BEGIN ATOMIC \
    DECLARE sex1 VARCHAR(100); \
    IF sex IS NULL THEN \
      SET sex1 = 'M'; \
    ELSE \
      SET sex1 = sex; \
    END IF; \
    INSERT INTO PERSON VALUES (DEFAULT, birthdate, CURRENT_TIMESTAMP, 'test', NULL, NULL, 1, NULL, ssn_number, ssn_country, name_first, name_last, sex1, NULL); \
    SET newid = IDENTITY(); \
    SET sex = sex1; \
  END
    

#s46 = CREATE PROCEDURE new_person_ret(IN birthdate DATE, IN ssn_number VARCHAR(20), IN ssn_country VARCHAR(100), IN name_first VARCHAR(100), IN name_last VARCHAR(100), IN sex VARCHAR(100)) \
#  MODIFIES SQL DATA DYNAMIC RESULT SETS 1 \
#  BEGIN ATOMIC \
#    DECLARE result CURSOR FOR SELECT * FROM PERSON WHERE ID = IDENTITY(); \
#    INSERT INTO PERSON VALUES (DEFAULT, birthdate, CURRENT_TIMESTAMP, 'test', NULL, NULL, 1, NULL, ssn_number, ssn_country, name_first, name_last, sex, NULL); \
#    OPEN result; \
#  END
    
s47 = CREATE FUNCTION an_hour_before(t TIMESTAMP) \
  RETURNS TIMESTAMP \
  RETURN t - 1 HOUR

s48 = CREATE TABLE SUBSCRIBER ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL, \
  LIBRARY BIGINT, \
  CONTACT BIGINT, \
  NAME_FIRST VARCHAR(100) NOT NULL, \
  NAME_LAST VARCHAR(100) NOT NULL \
);

s49 = ALTER TABLE SUBSCRIBER ADD CONSTRAINT PK_SUBSCRIBER \
	PRIMARY KEY (ID) \
;

s50 = ALTER TABLE SUBSCRIBER ADD CONSTRAINT FK_SUBSCRIBER_LIBRARY \
	FOREIGN KEY (LIBRARY) REFERENCES LIBRARY (ID) ON DELETE CASCADE \
;

s51 = CREATE TABLE BILLING_DETAILS ( \
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL, \
  CREATEDDATE TIMESTAMP, \
  CREATEDBY VARCHAR(50), \
  LASTUPDATED TIMESTAMP, \
  LASTUPDATEDBY VARCHAR(50), \
  VERSION BIGINT NOT NULL, \
  SUBSCRIBER BIGINT, \
  TYPE VARCHAR(2) NOT NULL, \
  CC_NUMBER BIGINT, \
  CC_EXP_MONTH SMALLINT, \
  CC_EXP_YEAR SMALLINT, \
  BA_ACCOUNT_NUMBER VARCHAR(100), \
  BA_BANK_NAME VARCHAR(100), \
  BA_SWIFT VARCHAR(20) \
);

s52 = ALTER TABLE BILLING_DETAILS ADD CONSTRAINT PK_BILLING_DETAILS \
	PRIMARY KEY (ID) \
;

s53 = ALTER TABLE BILLING_DETAILS ADD CONSTRAINT FK_BILLING_DETAILS_SUBSCRIBER \
	FOREIGN KEY (SUBSCRIBER) REFERENCES SUBSCRIBER (ID) ON DELETE CASCADE \
;
