DROP SEQUENCE HIBERNATE_SEQUENCE IF EXISTS CASCADE;

DROP TABLE BILLING_DETAILS IF EXISTS CASCADE;

DROP TABLE SUBSCRIBER IF EXISTS CASCADE;

DROP TABLE LIBRARY IF EXISTS CASCADE;

DROP TABLE PERSON_LIBRARY IF EXISTS CASCADE;

DROP TABLE BOOK IF EXISTS CASCADE;

DROP TABLE MOVIE IF EXISTS CASCADE;

DROP TABLE MEDIA IF EXISTS CASCADE;

DROP TABLE CONTACT IF EXISTS CASCADE;

DROP TABLE PERSON IF EXISTS CASCADE;

DROP FUNCTION IF EXISTS an_hour_before;

DROP PROCEDURE IF EXISTS new_person;


CREATE TABLE PERSON
(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, FIRST_NAME VARCHAR(100) NOT NULL 
, LAST_NAME VARCHAR(100) NOT NULL 
, DATE_OF_BIRTH DATE
, SSN VARCHAR(100) 
);

ALTER TABLE PERSON ADD CONSTRAINT PK_PERSON
	PRIMARY KEY (ID)
;

CREATE SEQUENCE HIBERNATE_SEQUENCE AS BIGINT START WITH 100 INCREMENT BY 1;

CREATE TABLE CONTACT
(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, PERSON_ID BIGINT NOT NULL 
, ADDRESS VARCHAR(100) NOT NULL 
, PHONE_NUMBER VARCHAR(100)
);

ALTER TABLE CONTACT ADD CONSTRAINT PK_CONTACT
	PRIMARY KEY (ID)
;

ALTER TABLE CONTACT ADD CONSTRAINT FK_CONTACT_PERSON
	FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID) ON DELETE CASCADE
;

CREATE TABLE MEDIA
(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, TITLE VARCHAR(100) NOT NULL 
, AUTHOR BIGINT 
);

CREATE TABLE MOVIE
(
  MEDIA_ID BIGINT NOT NULL 
, URLIMDB VARCHAR(100) NOT NULL
, PLAYLENGTH INT NOT NULL
);

CREATE TABLE BOOK
(
  MEDIA_ID BIGINT NOT NULL 
, ISBN VARCHAR(100) NOT NULL
);

ALTER TABLE MEDIA ADD CONSTRAINT PK_MEDIA
	PRIMARY KEY (ID)
;

ALTER TABLE MEDIA ADD CONSTRAINT FK_MEDIA_PERSON
	FOREIGN KEY (AUTHOR) REFERENCES PERSON (ID)
;

ALTER TABLE MOVIE ADD CONSTRAINT FK_MOVIE_MEDIA
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA (ID) ON DELETE CASCADE
;

ALTER TABLE BOOK ADD CONSTRAINT FK_BOOK_MEDIA
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA (ID) ON DELETE CASCADE
;

CREATE TABLE PERSON_LIBRARY
(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, PERSON_ID BIGINT NOT NULL 
, MEDIA_ID BIGINT NOT NULL 
);

ALTER TABLE PERSON_LIBRARY ADD CONSTRAINT PK_PERSON_LIBRARY
	PRIMARY KEY (ID)
;

ALTER TABLE PERSON_LIBRARY ADD CONSTRAINT FK_PERSON_LIBRARY_1
	FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID) ON DELETE CASCADE
;

ALTER TABLE PERSON_LIBRARY ADD CONSTRAINT FK_PERSON_LIBRARY_2
	FOREIGN KEY (MEDIA_ID) REFERENCES MEDIA (ID) ON DELETE CASCADE
;

CREATE TABLE LIBRARY (
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, NAME VARCHAR(100) NOT NULL
);

ALTER TABLE LIBRARY ADD CONSTRAINT PK_LIBRARY
	PRIMARY KEY (ID)
;

CREATE TABLE SUBSCRIBER (
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, LIBRARY BIGINT NOT NULL
, CONTACT BIGINT
, NAME VARCHAR(100) NOT NULL
);

ALTER TABLE SUBSCRIBER ADD CONSTRAINT PK_SUBSCRIBER
	PRIMARY KEY (ID)
;

ALTER TABLE SUBSCRIBER ADD CONSTRAINT FK_SUBSCRIBER_LIBRARY
	FOREIGN KEY (LIBRARY) REFERENCES LIBRARY (ID) ON DELETE CASCADE
;

CREATE TABLE BILLING_DETAILS (
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL
, SUBSCRIBER BIGINT NOT NULL
, TYPE VARCHAR(2) NOT NULL
, CC_NUMBER BIGINT
, BA_ACCOUNT VARCHAR(100)
);

ALTER TABLE BILLING_DETAILS ADD CONSTRAINT PK_BILLING_DETAILS
	PRIMARY KEY (ID)
;

ALTER TABLE BILLING_DETAILS ADD CONSTRAINT FK_BILLING_DETAILS_SUBSCRIBER
	FOREIGN KEY (SUBSCRIBER) REFERENCES SUBSCRIBER (ID) ON DELETE CASCADE
;

CREATE FUNCTION an_hour_before(t TIMESTAMP)
  RETURNS TIMESTAMP
  RETURN t - 1 HOUR

CREATE PROCEDURE new_person(OUT newid INT, IN firstName VARCHAR(100), IN lastName VARCHAR(100))
  MODIFIES SQL DATA
  BEGIN ATOMIC
    INSERT INTO PERSON (ID, FIRST_NAME, LAST_NAME) VALUES (DEFAULT, firstName, lastName);
    SET newid = IDENTITY();
  END
