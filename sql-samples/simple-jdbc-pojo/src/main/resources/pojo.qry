//pojogen type sqltypes NUMBER(19)->:java.lang.Integer VARCHAR2(100)->:java.lang.Character;
//pojogen type in table CONTACT VARCHAR2(100)->:java.lang.Short;
pojogen type for columns CONTACT PHONE_NUMBER->::PhoneNumber;
//pojogen rename tables CONTACT->PERSON_CONTACT;
pojogen rename columns CONTACT PHONE_NUMBER->HOME_PHONE;
//pojogen ignore tables BOOK;
//pojogen ignore columns CONTACT ADDRESS;


package org.sqlproc.sample.simple.model2 {


}

package org.sqlproc.sample.simple.model {

	pojo abstract Media {
		id : java.lang.Long
		title : java.lang.String required
	}
	
	pojo Book extends Media {
		isbn : java.lang.String required
	}
	
	pojo Movie extends Media {
		urlIMDB : java.lang.String required
		playLength : java.lang.Integer required
	}
	
	pojo Library {
		id : java.lang.Long
		name : java.lang.String required
	}
	
	pojo PhoneNumber {
		area _int required
		exch _int required
		ext _int required
	}
	
	pojo Contact {
		id : java.lang.Long
		personId : java.lang.Long
		address : java.lang.String required
		homePhone :: PhoneNumber
	}
	
	pojo Subscriber {
		id : java.lang.Long
		name : java.lang.String required
		contact :: Contact
		library :: Library required
		billingDetails : java.util.List <:BillingDetails>
	}
	
	pojo abstract BillingDetails {
		id : java.lang.Long
		type : java.lang.String required
		subscriber :: Subscriber required
	}
	
	pojo BankAccount extends BillingDetails {
		account : java.lang.String required
	}
	
	pojo CreditCard extends BillingDetails {
		number : java.lang.Long required
	}
	
	pojo PersonLibrary {
		id : java.lang.Long
		personId : java.lang.Long required
		mediaId : java.lang.Long required
	}
	
	pojo Person {
		id : java.lang.Long
		name : java.lang.String required
		contacts : java.util.List <:Contact>
		library : java.util.List <:Media>
	}
}

package org.sqlproc.sample.simple.form {
	
	pojo FormSimpleFunction {
		time : java.sql.Timestamp
		time2 : java.sql.Timestamp
	}
}
