SET_LIKE_STRING=like
SET_WILDCARD_CHARACTER=%
SET_SURROUND_QUERY_LIKE=true
SET_SURROUND_QUERY_MIN_LEN=2

SET_SEQ1=call NEXT VALUE FOR HIBERNATE_SEQUENCE


QRY_ALL_PEOPLE= \
  select p.ID @id, p.NAME @name \
  from PERSON p \
  {= where \
   {& id=:id} \
   {& UPPER(name)=:+name} \
  } \
  {#1 order by ID} \
  {#2 order by NAME}

QRY_LIKE_PEOPLE= \
  select p.ID @id, p.NAME @name \
  from PERSON p \
  {= where \
   {& id=:id} \
   {& UPPER(name) like :+name} \
  } \
  {#1 order by ID} \
  {#2 order by NAME}

CRUD_INSERT_PERSON= \
  insert into PERSON (id, name) \
  {= values (:id^long^seq=SEQ1, :name) }

CRUD_GET_PERSON= \
  select @id, @name \
  from PERSON \
  {= where id=:id}

CRUD_UPDATE_PERSON= \
  update PERSON \
  {= set name = :name} \
  {= where {& id = :id^long^notnull}}
  
CRUD_DELETE_PERSON= \
  delete from PERSON \
  {= where {& id = :id^long^notnull}}

CRUD_INSERT_CONTACT= \
  insert into CONTACT (id, person_id, address) \
  {= values (:id^long^seq=SEQ1, :personId, :address) }

QRY_ALL_PEOPLE_AND_CONTACTS= \
  select p.ID @id^long^id, p.NAME @name, c.ID @contacts.id^long^id, p.ID @contacts.personId, c.ADDRESS @contacts.address \
  from PERSON p left join CONTACT c on p.ID = c.PERSON_ID \
  {= where \
   {& id=:id} \
   {& UPPER(name) like :+name} \
  } \
  {#1 order by p.NAME, c.ADDRESS}

QRY_ALL_PEOPLE_AND_CONTACTS2= \
  select p.ID @id^long^id, p.NAME @name, c.ID @contacts=linked.id^long^id, p.ID @contacts.personId, c.ADDRESS @contacts.address \
  from PERSON p left join CONTACT c on p.ID = c.PERSON_ID \
  {= where \
   {& id=:id} \
   {& UPPER(name) like :+name} \
  } \
  {#1 order by p.NAME, c.ADDRESS}

CRUD_INSERT_MEDIA= \
  insert into MEDIA (id, title) \
  {= values (:id^long^seq=SEQ1, :title) }

CRUD_INSERT_MOVIE= \
  insert into MOVIE (media_id, urlimdb, playlength) \
  {= values (:id, :urlIMDB, :playLength) }

CRUD_INSERT_BOOK= \
  insert into BOOK (media_id, isbn) \
  {= values (:id, :isbn) }

CRUD_CREATE_LIBRARY= \
  insert into PERSON_LIBRARY (id, person_id, media_id) \
  {= values (:id^long^seq=SEQ1, :personId, :mediaId) }

QRY_ALL_PEOPLE_LIBRARY= \
  select p.ID @id^long^id, p.NAME @name, mo.MEDIA_ID @library==movie.id^long^id, bk.MEDIA_ID @library==book.id^long^id, \
  m.TITLE @library.title, mo.URLIMDB @library.urlIMDB, mo.PLAYLENGTH @library.playLength, bk.ISBN @library.isbn \
  from PERSON p left join PERSON_LIBRARY l on p.ID = l.PERSON_ID \
  left join MEDIA m on m.ID = l.MEDIA_ID \
  left join MOVIE mo on mo.MEDIA_ID = m.ID \
  left join BOOK bk on bk.MEDIA_ID = m.ID \
  {= where \
   {& id=:id} \
   {& UPPER(name) like :+name} \
  } \
  {#1 order by p.NAME, m.TITLE}

CRUD_INSERT_CONTACT_CUSTOM= \
  insert into CONTACT (id, person_id, address, phone_number) \
  {= values (:id^long^seq=SEQ1, :personId, :address, :homePhone^phone) }

QRY_ALL_PEOPLE_AND_CONTACTS_CUSTOM= \
  select p.ID @id^long^id, p.NAME @name, c.ID @contacts.id^long^id, p.ID @contacts.personId, c.ADDRESS @contacts.address, \
  c.PHONE_NUMBER @contacts.homePhone^phone \
  from PERSON p left join CONTACT c on p.ID = c.PERSON_ID \
  {= where \
   {& c.ID=:id} \
   {& c.PHONE_NUMBER = :homePhone^phone} \
  } \
  {#1 order by p.NAME, c.ADDRESS}
  
CRUD_INSERT_LIBRARY= \
  insert into LIBRARY (id, name) \
  {= values (:id^long^seq=SEQ1, :name) }
  
CRUD_INSERT_SUBSCRIBER= \
  insert into SUBSCRIBER (id, library, name) \
  {= values (:id^long^seq=SEQ1, :library.id, :name) }
  
CRUD_INSERT_CREDIT_CARD= \
  insert into BILLING_DETAILS (id, subscriber, type, cc_number) \
  {= values (:id^long^seq=SEQ1, :subscriber.id, 'CC', :number) }
  
CRUD_INSERT_BANK_ACCOUNT= \
  insert into BILLING_DETAILS (id, subscriber, type, ba_account) \
  {= values (:id^long^seq=SEQ1, :subscriber.id, 'BA', :account) }

QRY_ALL_SUBSCRIBERS_BILLING_DETAILS= \
  select s.ID @id^long^id, s.NAME @name, s.LIBRARY @library.id^long^id, \
  bd.TYPE @billingDetails==discriminator.type, bd.ID @billingDetails.id^long^id, \
  bd.CC_NUMBER @billingDetails.number, bd.BA_ACCOUNT @billingDetails.account \
  from SUBSCRIBER s left join BILLING_DETAILS bd on s.ID = bd.SUBSCRIBER \
  {= where \
   {& UPPER(s.name)=:+name} \
   {& bd.TYPE = :type} \
  } \
  {#1 order by s.ID, bd.ID}
  
CALL_SIMPLE_FUNCION= \
  call an_hour_before(:time)
OUT_SIMPLE_FUNCION=1$stamp
  
CALL_SIMPLE_FUNCION_TO_IN_FORM= \
  :<time2 = call an_hour_before(:time)

CALL_INSERT_PERSON_CALL= \
  call new_person(:<id, :name)
  